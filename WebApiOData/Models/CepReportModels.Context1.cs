//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiOData.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CEPOne_ReportEntities : DbContext
    {
        public CEPOne_ReportEntities()
            : base("name=CEPOne_ReportEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACT_EVT_LOG> ACT_EVT_LOG { get; set; }
        public virtual DbSet<ACT_GE_BYTEARRAY> ACT_GE_BYTEARRAY { get; set; }
        public virtual DbSet<ACT_GE_PROPERTY> ACT_GE_PROPERTY { get; set; }
        public virtual DbSet<ACT_HI_ACTINST> ACT_HI_ACTINST { get; set; }
        public virtual DbSet<ACT_HI_ATTACHMENT> ACT_HI_ATTACHMENT { get; set; }
        public virtual DbSet<ACT_HI_COMMENT> ACT_HI_COMMENT { get; set; }
        public virtual DbSet<ACT_HI_DETAIL> ACT_HI_DETAIL { get; set; }
        public virtual DbSet<ACT_HI_IDENTITYLINK> ACT_HI_IDENTITYLINK { get; set; }
        public virtual DbSet<ACT_HI_PROCINST> ACT_HI_PROCINST { get; set; }
        public virtual DbSet<ACT_HI_TASKINST> ACT_HI_TASKINST { get; set; }
        public virtual DbSet<ACT_HI_VARINST> ACT_HI_VARINST { get; set; }
        public virtual DbSet<ACT_ID_GROUP> ACT_ID_GROUP { get; set; }
        public virtual DbSet<ACT_ID_INFO> ACT_ID_INFO { get; set; }
        public virtual DbSet<ACT_ID_MEMBERSHIP> ACT_ID_MEMBERSHIP { get; set; }
        public virtual DbSet<ACT_ID_USER> ACT_ID_USER { get; set; }
        public virtual DbSet<ACT_PROCDEF_INFO> ACT_PROCDEF_INFO { get; set; }
        public virtual DbSet<ACT_RE_DEPLOYMENT> ACT_RE_DEPLOYMENT { get; set; }
        public virtual DbSet<ACT_RE_MODEL> ACT_RE_MODEL { get; set; }
        public virtual DbSet<ACT_RE_PROCDEF> ACT_RE_PROCDEF { get; set; }
        public virtual DbSet<ACT_RU_EVENT_SUBSCR> ACT_RU_EVENT_SUBSCR { get; set; }
        public virtual DbSet<ACT_RU_EXECUTION> ACT_RU_EXECUTION { get; set; }
        public virtual DbSet<ACT_RU_IDENTITYLINK> ACT_RU_IDENTITYLINK { get; set; }
        public virtual DbSet<ACT_RU_JOB> ACT_RU_JOB { get; set; }
        public virtual DbSet<ACT_RU_TASK> ACT_RU_TASK { get; set; }
        public virtual DbSet<ACT_RU_VARIABLE> ACT_RU_VARIABLE { get; set; }
        public virtual DbSet<AscApply> AscApplies { get; set; }
        public virtual DbSet<AscApproveRecord> AscApproveRecords { get; set; }
        public virtual DbSet<AscAttendance> AscAttendances { get; set; }
        public virtual DbSet<AscDownloadCenter> AscDownloadCenters { get; set; }
        public virtual DbSet<AscExecutionSituation> AscExecutionSituations { get; set; }
        public virtual DbSet<AscFile> AscFiles { get; set; }
        public virtual DbSet<AscMain> AscMains { get; set; }
        public virtual DbSet<AscMaterial> AscMaterials { get; set; }
        public virtual DbSet<AscPictureType> AscPictureTypes { get; set; }
        public virtual DbSet<AscReverse> AscReverses { get; set; }
        public virtual DbSet<AscSerialNum> AscSerialNums { get; set; }
        public virtual DbSet<AscTaskExecutionSituation> AscTaskExecutionSituations { get; set; }
        public virtual DbSet<CcSubscribeUser> CcSubscribeUsers { get; set; }
        public virtual DbSet<CeDriveRecord> CeDriveRecords { get; set; }
        public virtual DbSet<CeDriveRoute> CeDriveRoutes { get; set; }
        public virtual DbSet<CeDriveSatisfactionQuestionnaire> CeDriveSatisfactionQuestionnaires { get; set; }
        public virtual DbSet<ClmAreaReturnCount> ClmAreaReturnCounts { get; set; }
        public virtual DbSet<ClmAuditDealer> ClmAuditDealers { get; set; }
        public virtual DbSet<ClmAuditDebit> ClmAuditDebits { get; set; }
        public virtual DbSet<ClmAuditDebitDetail> ClmAuditDebitDetails { get; set; }
        public virtual DbSet<ClmAuditingWarranty> ClmAuditingWarranties { get; set; }
        public virtual DbSet<ClmAuditInspect> ClmAuditInspects { get; set; }
        public virtual DbSet<ClmAuditInspectResult> ClmAuditInspectResults { get; set; }
        public virtual DbSet<ClmAuditInspectResultCostDetail> ClmAuditInspectResultCostDetails { get; set; }
        public virtual DbSet<ClmAuditInspectResultDetail> ClmAuditInspectResultDetails { get; set; }
        public virtual DbSet<ClmAuditPlan> ClmAuditPlans { get; set; }
        public virtual DbSet<ClmAuditPlanFilter> ClmAuditPlanFilters { get; set; }
        public virtual DbSet<ClmAuditReportImprovement> ClmAuditReportImprovements { get; set; }
        public virtual DbSet<ClmAuditReport> ClmAuditReports { get; set; }
        public virtual DbSet<ClmAuditRule> ClmAuditRules { get; set; }
        public virtual DbSet<ClmAuditScrap> ClmAuditScraps { get; set; }
        public virtual DbSet<ClmAuditScrapsDetail> ClmAuditScrapsDetails { get; set; }
        public virtual DbSet<ClmAuditWarranty> ClmAuditWarrantys { get; set; }
        public virtual DbSet<ClmAutoApprovedHistory> ClmAutoApprovedHistories { get; set; }
        public virtual DbSet<ClmAutoAudit> ClmAutoAudits { get; set; }
        public virtual DbSet<ClmAutoAuditItem> ClmAutoAuditItems { get; set; }
        public virtual DbSet<ClmAuxiliaryBill> ClmAuxiliaryBills { get; set; }
        public virtual DbSet<ClmBudget> ClmBudgets { get; set; }
        public virtual DbSet<ClmBudgetDetail> ClmBudgetDetails { get; set; }
        public virtual DbSet<ClmCampaign> ClmCampaigns { get; set; }
        public virtual DbSet<ClmCampaignRepairPackage> ClmCampaignRepairPackages { get; set; }
        public virtual DbSet<ClmCampaignRepairPackageLaborPart> ClmCampaignRepairPackageLaborParts { get; set; }
        public virtual DbSet<ClmCampaignVIN> ClmCampaignVINs { get; set; }
        public virtual DbSet<ClmCC> ClmCCs { get; set; }
        public virtual DbSet<ClmDealerRebate> ClmDealerRebates { get; set; }
        public virtual DbSet<ClmDealerReturn> ClmDealerReturns { get; set; }
        public virtual DbSet<ClmHostOutStock> ClmHostOutStocks { get; set; }
        public virtual DbSet<ClmHostOutStockDetail> ClmHostOutStockDetails { get; set; }
        public virtual DbSet<ClmHostPartsReturnNotice> ClmHostPartsReturnNotices { get; set; }
        public virtual DbSet<ClmInvoiceNotice> ClmInvoiceNotices { get; set; }
        public virtual DbSet<ClmMeasureLineCondition> ClmMeasureLineConditions { get; set; }
        public virtual DbSet<ClmOldPartStock> ClmOldPartStocks { get; set; }
        public virtual DbSet<ClmOtherCost> ClmOtherCosts { get; set; }
        public virtual DbSet<ClmOtherFee> ClmOtherFees { get; set; }
        public virtual DbSet<ClmPartExtDebit> ClmPartExtDebits { get; set; }
        public virtual DbSet<ClmPartsCost> ClmPartsCosts { get; set; }
        public virtual DbSet<ClmPartsHandlingChargeConfiguration> ClmPartsHandlingChargeConfigurations { get; set; }
        public virtual DbSet<ClmPartsHandlingChargeGroup> ClmPartsHandlingChargeGroups { get; set; }
        public virtual DbSet<ClmPartsReturnBatch> ClmPartsReturnBatches { get; set; }
        public virtual DbSet<ClmPartsReturnBatchDetail> ClmPartsReturnBatchDetails { get; set; }
        public virtual DbSet<ClmPartsReturnBill> ClmPartsReturnBills { get; set; }
        public virtual DbSet<ClmPartsReturnBox> ClmPartsReturnBoxes { get; set; }
        public virtual DbSet<ClmPartsScrap> ClmPartsScraps { get; set; }
        public virtual DbSet<ClmPartsScrapDetail> ClmPartsScrapDetails { get; set; }
        public virtual DbSet<ClmPayToDealer> ClmPayToDealers { get; set; }
        public virtual DbSet<ClmPayToDealerList> ClmPayToDealerLists { get; set; }
        public virtual DbSet<ClmPolicyPart> ClmPolicyParts { get; set; }
        public virtual DbSet<ClmPolicyVIN> ClmPolicyVINs { get; set; }
        public virtual DbSet<ClmPreAuthorizationPartGroup> ClmPreAuthorizationPartGroups { get; set; }
        public virtual DbSet<ClmPreAuthorizationPartSetting> ClmPreAuthorizationPartSettings { get; set; }
        public virtual DbSet<ClmPreAuthorizationPriceGroup> ClmPreAuthorizationPriceGroups { get; set; }
        public virtual DbSet<ClmPreAuthorizationPriceSetting> ClmPreAuthorizationPriceSettings { get; set; }
        public virtual DbSet<ClmReCallDetail> ClmReCallDetails { get; set; }
        public virtual DbSet<ClmReceivingInfo> ClmReceivingInfoes { get; set; }
        public virtual DbSet<ClmRecoverySetup> ClmRecoverySetups { get; set; }
        public virtual DbSet<ClmReturnPartsDuty> ClmReturnPartsDuties { get; set; }
        public virtual DbSet<ClmSecondAuditDealer> ClmSecondAuditDealers { get; set; }
        public virtual DbSet<ClmSelfAuthorization> ClmSelfAuthorizations { get; set; }
        public virtual DbSet<ClmSelfAuthorizationGroup> ClmSelfAuthorizationGroups { get; set; }
        public virtual DbSet<ClmSpecialVehicleSetting> ClmSpecialVehicleSettings { get; set; }
        public virtual DbSet<ClmSpecialWarrantyPeriodSetting> ClmSpecialWarrantyPeriodSettings { get; set; }
        public virtual DbSet<ClmSupplierRecovery> ClmSupplierRecoveries { get; set; }
        public virtual DbSet<ClmSupplierRecoveryDetail> ClmSupplierRecoveryDetails { get; set; }
        public virtual DbSet<ClmThreeGuaranteesConfig> ClmThreeGuaranteesConfigs { get; set; }
        public virtual DbSet<ClmThreeGuaranteesPartConfig> ClmThreeGuaranteesPartConfigs { get; set; }
        public virtual DbSet<ClmWarranty> ClmWarranties { get; set; }
        public virtual DbSet<ClmWarrantyBudgetWatch> ClmWarrantyBudgetWatches { get; set; }
        public virtual DbSet<ClmWarrantyBudgetWatchDetail> ClmWarrantyBudgetWatchDetails { get; set; }
        public virtual DbSet<ClmWarrantyExtensionConfiguration> ClmWarrantyExtensionConfigurations { get; set; }
        public virtual DbSet<ClmWarrantyInspect> ClmWarrantyInspects { get; set; }
        public virtual DbSet<ClmWarrantyInspectResult> ClmWarrantyInspectResults { get; set; }
        public virtual DbSet<ClmWarrantyManHourPriceSetting> ClmWarrantyManHourPriceSettings { get; set; }
        public virtual DbSet<ClmWarrantyManHourPriceSettingGroup> ClmWarrantyManHourPriceSettingGroups { get; set; }
        public virtual DbSet<ClmWarrantyPartsPolicy> ClmWarrantyPartsPolicies { get; set; }
        public virtual DbSet<ClmWarrantyPeriodSetting> ClmWarrantyPeriodSettings { get; set; }
        public virtual DbSet<ClmWarrantyPolicy> ClmWarrantyPolicies { get; set; }
        public virtual DbSet<ClmWarrantyRemark> ClmWarrantyRemarks { get; set; }
        public virtual DbSet<ClmWarrantyStatusHistory> ClmWarrantyStatusHistories { get; set; }
        public virtual DbSet<ClmWearTearPartsConfiguration> ClmWearTearPartsConfigurations { get; set; }
        public virtual DbSet<ClmWorkingHour> ClmWorkingHours { get; set; }
        public virtual DbSet<CONTENT> CONTENTs { get; set; }
        public virtual DbSet<CrBehavior> CrBehaviors { get; set; }
        public virtual DbSet<CrBonusPointAccount> CrBonusPointAccounts { get; set; }
        public virtual DbSet<CrBonusPointEvent> CrBonusPointEvents { get; set; }
        public virtual DbSet<CrBonusPointExchangeRate> CrBonusPointExchangeRates { get; set; }
        public virtual DbSet<CrBonusPointMainTransaction> CrBonusPointMainTransactions { get; set; }
        public virtual DbSet<CrBonusPointRating> CrBonusPointRatings { get; set; }
        public virtual DbSet<CrBonusPointRatingRole> CrBonusPointRatingRoles { get; set; }
        public virtual DbSet<CrCallCenterContactActivity> CrCallCenterContactActivities { get; set; }
        public virtual DbSet<CrCampaign> CrCampaigns { get; set; }
        public virtual DbSet<CrCase> CrCases { get; set; }
        public virtual DbSet<CrCaseApprovalStep> CrCaseApprovalSteps { get; set; }
        public virtual DbSet<CrCaseContact> CrCaseContacts { get; set; }
        public virtual DbSet<CrCaseHandlingProcess> CrCaseHandlingProcesses { get; set; }
        public virtual DbSet<CrCasePartsDetail> CrCasePartsDetails { get; set; }
        public virtual DbSet<CrCaseReturnRecord> CrCaseReturnRecords { get; set; }
        public virtual DbSet<CrCaseTask> CrCaseTasks { get; set; }
        public virtual DbSet<CrCaseWorkhourDetail> CrCaseWorkhourDetails { get; set; }
        public virtual DbSet<CrIncident> CrIncidents { get; set; }
        public virtual DbSet<CrLeadActiveRecord> CrLeadActiveRecords { get; set; }
        public virtual DbSet<CrLeadClient> CrLeadClients { get; set; }
        public virtual DbSet<CrLeadClientDefeatCheck> CrLeadClientDefeatChecks { get; set; }
        public virtual DbSet<CrLeadClientFollow> CrLeadClientFollows { get; set; }
        public virtual DbSet<CrLeadClientFollowArea> CrLeadClientFollowAreas { get; set; }
        public virtual DbSet<CrLeadDefeatApply> CrLeadDefeatApplies { get; set; }
        public virtual DbSet<CrLeadExhibition> CrLeadExhibitions { get; set; }
        public virtual DbSet<CrLeadMedia> CrLeadMedias { get; set; }
        public virtual DbSet<CrLeadOperationRecord> CrLeadOperationRecords { get; set; }
        public virtual DbSet<CrLeadOrigin> CrLeadOrigins { get; set; }
        public virtual DbSet<CrLeadTerminal> CrLeadTerminals { get; set; }
        public virtual DbSet<CrLeadTransferApply> CrLeadTransferApplies { get; set; }
        public virtual DbSet<CrLeadTransferAudit> CrLeadTransferAudits { get; set; }
        public virtual DbSet<CrLeadUnique> CrLeadUniques { get; set; }
        public virtual DbSet<CrLeadUniqueReport> CrLeadUniqueReports { get; set; }
        public virtual DbSet<CrmCareActivity> CrmCareActivities { get; set; }
        public virtual DbSet<CrmCareClientRecord> CrmCareClientRecords { get; set; }
        public virtual DbSet<CrmCareDeliverApply> CrmCareDeliverApplies { get; set; }
        public virtual DbSet<CrmCareRule> CrmCareRules { get; set; }
        public virtual DbSet<CrmCareSubscribe> CrmCareSubscribes { get; set; }
        public virtual DbSet<CrmCareSubscribeApply> CrmCareSubscribeApplies { get; set; }
        public virtual DbSet<CrmCareTemplate> CrmCareTemplates { get; set; }
        public virtual DbSet<CrmCareTopic> CrmCareTopics { get; set; }
        public virtual DbSet<CrWorkOrder> CrWorkOrders { get; set; }
        public virtual DbSet<DdDID> DdDIDs { get; set; }
        public virtual DbSet<DdDIDParameter> DdDIDParameters { get; set; }
        public virtual DbSet<DdDTC> DdDTCs { get; set; }
        public virtual DbSet<DdDTCParameterCollection> DdDTCParameterCollections { get; set; }
        public virtual DbSet<DdECU> DdECUs { get; set; }
        public virtual DbSet<DdScriptInformation> DdScriptInformations { get; set; }
        public virtual DbSet<DdSoftwarePartNumber> DdSoftwarePartNumbers { get; set; }
        public virtual DbSet<DdVehicleExtension> DdVehicleExtensions { get; set; }
        public virtual DbSet<DdVehicleInformation> DdVehicleInformations { get; set; }
        public virtual DbSet<DeliveryLine> DeliveryLines { get; set; }
        public virtual DbSet<DndCarShareHolder> DndCarShareHolders { get; set; }
        public virtual DbSet<DndFinanceStatusAble> DndFinanceStatusAbles { get; set; }
        public virtual DbSet<DndKeyPeopleInfo> DndKeyPeopleInfoes { get; set; }
        public virtual DbSet<DndMaintenance> DndMaintenances { get; set; }
        public virtual DbSet<DndNotCarShareHolder> DndNotCarShareHolders { get; set; }
        public virtual DbSet<DndNowBankDepositId> DndNowBankDepositIds { get; set; }
        public virtual DbSet<DndSharesConstitute> DndSharesConstitutes { get; set; }
        public virtual DbSet<DspBizCode> DspBizCodes { get; set; }
        public virtual DbSet<DspBorrow> DspBorrows { get; set; }
        public virtual DbSet<DspBorrowDetail> DspBorrowDetails { get; set; }
        public virtual DbSet<DspCustomer> DspCustomers { get; set; }
        public virtual DbSet<DspDealerParameter> DspDealerParameters { get; set; }
        public virtual DbSet<DspImportPart> DspImportParts { get; set; }
        public virtual DbSet<DspInventory> DspInventories { get; set; }
        public virtual DbSet<DspInventoryDetail> DspInventoryDetails { get; set; }
        public virtual DbSet<DspMissingPart> DspMissingParts { get; set; }
        public virtual DbSet<DspMissingPartDetail> DspMissingPartDetails { get; set; }
        public virtual DbSet<DspMonthStock> DspMonthStocks { get; set; }
        public virtual DbSet<DspMoveStorage> DspMoveStorages { get; set; }
        public virtual DbSet<DspMoveStorageDetail> DspMoveStorageDetails { get; set; }
        public virtual DbSet<DspOutPurchase> DspOutPurchases { get; set; }
        public virtual DbSet<DspOutPurchaseDetail> DspOutPurchaseDetails { get; set; }
        public virtual DbSet<DspOutReturnOrder> DspOutReturnOrders { get; set; }
        public virtual DbSet<DspOutReturnOrderDetail> DspOutReturnOrderDetails { get; set; }
        public virtual DbSet<DspProfitLoss> DspProfitLosses { get; set; }
        public virtual DbSet<DspProfitLossDetail> DspProfitLossDetails { get; set; }
        public virtual DbSet<DspPurchase> DspPurchases { get; set; }
        public virtual DbSet<DspPurchaseApp> DspPurchaseApps { get; set; }
        public virtual DbSet<DspPurchaseAppDetail> DspPurchaseAppDetails { get; set; }
        public virtual DbSet<DspPurchaseDetail> DspPurchaseDetails { get; set; }
        public virtual DbSet<DspPurchasePlan> DspPurchasePlans { get; set; }
        public virtual DbSet<DspPurchasePlanDetail> DspPurchasePlanDetails { get; set; }
        public virtual DbSet<DspPurchaseSubmitLog> DspPurchaseSubmitLogs { get; set; }
        public virtual DbSet<DspRequisition> DspRequisitions { get; set; }
        public virtual DbSet<DspRequisitionDetail> DspRequisitionDetails { get; set; }
        public virtual DbSet<DspRequisitionDetailLog> DspRequisitionDetailLogs { get; set; }
        public virtual DbSet<DspReserve> DspReserves { get; set; }
        public virtual DbSet<DspReserveDetail> DspReserveDetails { get; set; }
        public virtual DbSet<DspReturnOrder> DspReturnOrders { get; set; }
        public virtual DbSet<DspReturnOrderAttach> DspReturnOrderAttaches { get; set; }
        public virtual DbSet<DspReturnOrderDetail> DspReturnOrderDetails { get; set; }
        public virtual DbSet<DspSale> DspSales { get; set; }
        public virtual DbSet<DspSaleDetail> DspSaleDetails { get; set; }
        public virtual DbSet<DspSaleReturn> DspSaleReturns { get; set; }
        public virtual DbSet<DspSaleReturnDetail> DspSaleReturnDetails { get; set; }
        public virtual DbSet<DspSaleReturnSettle> DspSaleReturnSettles { get; set; }
        public virtual DbSet<DspSaleReturnSettleDetail> DspSaleReturnSettleDetails { get; set; }
        public virtual DbSet<DspSaleSettle> DspSaleSettles { get; set; }
        public virtual DbSet<DspSaleSettleDetail> DspSaleSettleDetails { get; set; }
        public virtual DbSet<DspServiceRequestLog> DspServiceRequestLogs { get; set; }
        public virtual DbSet<DspStock> DspStocks { get; set; }
        public virtual DbSet<DspStockIn> DspStockIns { get; set; }
        public virtual DbSet<DspStockInDetail> DspStockInDetails { get; set; }
        public virtual DbSet<DspStockLog> DspStockLogs { get; set; }
        public virtual DbSet<DspStockMonthData> DspStockMonthDatas { get; set; }
        public virtual DbSet<DspStorage> DspStorages { get; set; }
        public virtual DbSet<DspTransfer> DspTransfers { get; set; }
        public virtual DbSet<DspTransferDetail> DspTransferDetails { get; set; }
        public virtual DbSet<DspWarehouse> DspWarehouses { get; set; }
        public virtual DbSet<DspWrong> DspWrongs { get; set; }
        public virtual DbSet<DspWrongAttach> DspWrongAttaches { get; set; }
        public virtual DbSet<DspWrongDetail> DspWrongDetails { get; set; }
        public virtual DbSet<fr_errrecord> fr_errrecord { get; set; }
        public virtual DbSet<FR_EXCEL_SUBMIT_TASK> FR_EXCEL_SUBMIT_TASK { get; set; }
        public virtual DbSet<fr_exerecord> fr_exerecord { get; set; }
        public virtual DbSet<fr_exprecord> fr_exprecord { get; set; }
        public virtual DbSet<FR_FILEENTRY> FR_FILEENTRY { get; set; }
        public virtual DbSet<FR_FOLDERENTRY> FR_FOLDERENTRY { get; set; }
        public virtual DbSet<fr_fsrecord> fr_fsrecord { get; set; }
        public virtual DbSet<FR_MESSAGE> FR_MESSAGE { get; set; }
        public virtual DbSet<FR_PHISTRECORD> FR_PHISTRECORD { get; set; }
        public virtual DbSet<FR_PROCESS_ALERT_TOAST> FR_PROCESS_ALERT_TOAST { get; set; }
        public virtual DbSet<FR_PROCESS_LOG> FR_PROCESS_LOG { get; set; }
        public virtual DbSet<FR_PROCESS_REMIND_TOAST> FR_PROCESS_REMIND_TOAST { get; set; }
        public virtual DbSet<FR_PROCESS_STASH_DATA> FR_PROCESS_STASH_DATA { get; set; }
        public virtual DbSet<FR_PROCESS_TASK_IMPL> FR_PROCESS_TASK_IMPL { get; set; }
        public virtual DbSet<fr_ptrecord> fr_ptrecord { get; set; }
        public virtual DbSet<FR_REPORT_PROCESS> FR_REPORT_PROCESS { get; set; }
        public virtual DbSet<FR_REPORT_PROCESS_NODE> FR_REPORT_PROCESS_NODE { get; set; }
        public virtual DbSet<FR_REPORT_PROCESS_TASK> FR_REPORT_PROCESS_TASK { get; set; }
        public virtual DbSet<FR_REPORTLETENTRY> FR_REPORTLETENTRY { get; set; }
        public virtual DbSet<FR_RPPE> FR_RPPE { get; set; }
        public virtual DbSet<FR_SCHEDULE_ACTIONLIST> FR_SCHEDULE_ACTIONLIST { get; set; }
        public virtual DbSet<FR_SCHEDULE_CLASSACTION> FR_SCHEDULE_CLASSACTION { get; set; }
        public virtual DbSet<FR_SCHEDULE_EMAIL> FR_SCHEDULE_EMAIL { get; set; }
        public virtual DbSet<FR_SCHEDULE_FTP> FR_SCHEDULE_FTP { get; set; }
        public virtual DbSet<FR_SCHEDULE_MESSAGE> FR_SCHEDULE_MESSAGE { get; set; }
        public virtual DbSet<FR_SCHEDULE_OUTPUT> FR_SCHEDULE_OUTPUT { get; set; }
        public virtual DbSet<FR_SCHEDULE_PRINT> FR_SCHEDULE_PRINT { get; set; }
        public virtual DbSet<FR_SCHEDULE_PUSH> FR_SCHEDULE_PUSH { get; set; }
        public virtual DbSet<FR_SCHEDULE_SMS> FR_SCHEDULE_SMS { get; set; }
        public virtual DbSet<FR_SCHEDULE_TASK> FR_SCHEDULE_TASK { get; set; }
        public virtual DbSet<fr_schedulerecord> fr_schedulerecord { get; set; }
        public virtual DbSet<fr_smsrecord> fr_smsrecord { get; set; }
        public virtual DbSet<FR_T_COMPANYROLE> FR_T_COMPANYROLE { get; set; }
        public virtual DbSet<FR_T_CORDACRP> FR_T_CORDACRP { get; set; }
        public virtual DbSet<FR_T_CORDCP> FR_T_CORDCP { get; set; }
        public virtual DbSet<FR_T_COREP> FR_T_COREP { get; set; }
        public virtual DbSet<FR_T_CORESP> FR_T_CORESP { get; set; }
        public virtual DbSet<FR_T_CORHPP> FR_T_CORHPP { get; set; }
        public virtual DbSet<FR_T_CORMP> FR_T_CORMP { get; set; }
        public virtual DbSet<FR_T_CORTP> FR_T_CORTP { get; set; }
        public virtual DbSet<FR_T_CURDACRP> FR_T_CURDACRP { get; set; }
        public virtual DbSet<FR_T_CURDCP> FR_T_CURDCP { get; set; }
        public virtual DbSet<FR_T_CUREP> FR_T_CUREP { get; set; }
        public virtual DbSet<FR_T_CURESP> FR_T_CURESP { get; set; }
        public virtual DbSet<FR_T_CURHPP> FR_T_CURHPP { get; set; }
        public virtual DbSet<FR_T_CURMP> FR_T_CURMP { get; set; }
        public virtual DbSet<FR_T_CURTP> FR_T_CURTP { get; set; }
        public virtual DbSet<FR_T_CUSTOMROLE> FR_T_CUSTOMROLE { get; set; }
        public virtual DbSet<FR_T_CustomRole_User> FR_T_CustomRole_User { get; set; }
        public virtual DbSet<FR_T_DEPARTMENT> FR_T_DEPARTMENT { get; set; }
        public virtual DbSet<FR_T_Department_Post_User> FR_T_Department_Post_User { get; set; }
        public virtual DbSet<FR_T_FAVORITENODE> FR_T_FAVORITENODE { get; set; }
        public virtual DbSet<FR_T_FORGED_USER> FR_T_FORGED_USER { get; set; }
        public virtual DbSet<FR_T_FR_P_FAVORITE> FR_T_FR_P_FAVORITE { get; set; }
        public virtual DbSet<FR_T_HOMEPAGE> FR_T_HOMEPAGE { get; set; }
        public virtual DbSet<FR_T_LASTLOGINEDINFO> FR_T_LASTLOGINEDINFO { get; set; }
        public virtual DbSet<FR_T_LOGINUSER> FR_T_LOGINUSER { get; set; }
        public virtual DbSet<FR_T_PFMM> FR_T_PFMM { get; set; }
        public virtual DbSet<FR_T_POST> FR_T_POST { get; set; }
        public virtual DbSet<FR_T_UDACRP> FR_T_UDACRP { get; set; }
        public virtual DbSet<FR_T_UENF> FR_T_UENF { get; set; }
        public virtual DbSet<FR_T_UEP> FR_T_UEP { get; set; }
        public virtual DbSet<FR_T_UMP> FR_T_UMP { get; set; }
        public virtual DbSet<FR_T_USER> FR_T_USER { get; set; }
        public virtual DbSet<FR_T_USERDEVICEINFO> FR_T_USERDEVICEINFO { get; set; }
        public virtual DbSet<FR_URLENTRY> FR_URLENTRY { get; set; }
        public virtual DbSet<FR_WRITE_TEMP_DATA> FR_WRITE_TEMP_DATA { get; set; }
        public virtual DbSet<FrRptArea> FrRptAreas { get; set; }
        public virtual DbSet<FrRptAreaManager> FrRptAreaManagers { get; set; }
        public virtual DbSet<FSTLO> FSTLOes { get; set; }
        public virtual DbSet<GdOrder> GdOrders { get; set; }
        public virtual DbSet<GdOrderDelivery> GdOrderDeliveries { get; set; }
        public virtual DbSet<GdOrderDetail> GdOrderDetails { get; set; }
        public virtual DbSet<GdOrderInvoice> GdOrderInvoices { get; set; }
        public virtual DbSet<GdOrderItem> GdOrderItems { get; set; }
        public virtual DbSet<GdOrderVehicle> GdOrderVehicles { get; set; }
        public virtual DbSet<GdRetailOrder> GdRetailOrders { get; set; }
        public virtual DbSet<GdSku> GdSkus { get; set; }
        public virtual DbSet<GdSkuStock> GdSkuStocks { get; set; }
        public virtual DbSet<GdStock> GdStocks { get; set; }
        public virtual DbSet<InEsbMessage> InEsbMessages { get; set; }
        public virtual DbSet<LockLog> LockLogs { get; set; }
        public virtual DbSet<MdmBank> MdmBanks { get; set; }
        public virtual DbSet<MdmCaseCatlog> MdmCaseCatlogs { get; set; }
        public virtual DbSet<MdmCaseClass1> MdmCaseClass1 { get; set; }
        public virtual DbSet<MdmCaseClass2> MdmCaseClass2 { get; set; }
        public virtual DbSet<MdmCaseClass3> MdmCaseClass3 { get; set; }
        public virtual DbSet<MdmCaseClass4> MdmCaseClass4 { get; set; }
        public virtual DbSet<MdmCaseLevel1> MdmCaseLevel1 { get; set; }
        public virtual DbSet<MdmCaseLevel2> MdmCaseLevel2 { get; set; }
        public virtual DbSet<MdmCaseLevel3> MdmCaseLevel3 { get; set; }
        public virtual DbSet<MdmCaseLevel4> MdmCaseLevel4 { get; set; }
        public virtual DbSet<MdmConfig> MdmConfigs { get; set; }
        public virtual DbSet<MdmContact> MdmContacts { get; set; }
        public virtual DbSet<MdmContactAddress> MdmContactAddresses { get; set; }
        public virtual DbSet<MdmContactTag> MdmContactTags { get; set; }
        public virtual DbSet<MdmCostCenter> MdmCostCenters { get; set; }
        public virtual DbSet<MdmCrossShop> MdmCrossShops { get; set; }
        public virtual DbSet<MdmCSC> MdmCSCs { get; set; }
        public virtual DbSet<MdmCurrency> MdmCurrencies { get; set; }
        public virtual DbSet<MdmDealer> MdmDealers { get; set; }
        public virtual DbSet<MdmDealerAcceptingBankInfo> MdmDealerAcceptingBankInfoes { get; set; }
        public virtual DbSet<MdmDealerExpressConfigure> MdmDealerExpressConfigures { get; set; }
        public virtual DbSet<MdmDealerForecastPeriodSetting> MdmDealerForecastPeriodSettings { get; set; }
        public virtual DbSet<MdmDealerOem> MdmDealerOems { get; set; }
        public virtual DbSet<MdmDockConfig> MdmDockConfigs { get; set; }
        public virtual DbSet<MdmEmployee> MdmEmployees { get; set; }
        public virtual DbSet<MdmEmpPostRef> MdmEmpPostRefs { get; set; }
        public virtual DbSet<MdmExchangeRate> MdmExchangeRates { get; set; }
        public virtual DbSet<MdmExchangeRateHistory> MdmExchangeRateHistories { get; set; }
        public virtual DbSet<MdmFaq> MdmFaqs { get; set; }
        public virtual DbSet<MdmForecastMonth> MdmForecastMonths { get; set; }
        public virtual DbSet<MdmFunctionGroup> MdmFunctionGroups { get; set; }
        public virtual DbSet<MdmGood> MdmGoods { get; set; }
        public virtual DbSet<MdmInsuranceCompany> MdmInsuranceCompanies { get; set; }
        public virtual DbSet<MdmItemCode> MdmItemCodes { get; set; }
        public virtual DbSet<MdmMaintenanceRule> MdmMaintenanceRules { get; set; }
        public virtual DbSet<MdmMaterialType1> MdmMaterialType1 { get; set; }
        public virtual DbSet<MdmMaterialType2> MdmMaterialType2 { get; set; }
        public virtual DbSet<MdmMaterialType3> MdmMaterialType3 { get; set; }
        public virtual DbSet<MdmODataPermission> MdmODataPermissions { get; set; }
        public virtual DbSet<MdmODataUseConfig> MdmODataUseConfigs { get; set; }
        public virtual DbSet<MdmOperationLog> MdmOperationLogs { get; set; }
        public virtual DbSet<MdmPartPriceGroup> MdmPartPriceGroups { get; set; }
        public virtual DbSet<MDMPartRelationShip> MDMPartRelationShips { get; set; }
        public virtual DbSet<MdmPart> MdmParts { get; set; }
        public virtual DbSet<MdmPartsBomGroup> MdmPartsBomGroups { get; set; }
        public virtual DbSet<MdmPartsRel> MdmPartsRels { get; set; }
        public virtual DbSet<MdmPayAccountState> MdmPayAccountStates { get; set; }
        public virtual DbSet<MdmPersonRelationship> MdmPersonRelationships { get; set; }
        public virtual DbSet<MdmPersonVehicleRelationship> MdmPersonVehicleRelationships { get; set; }
        public virtual DbSet<MdmPost> MdmPosts { get; set; }
        public virtual DbSet<MDMRelationShipPart> MDMRelationShipParts { get; set; }
        public virtual DbSet<MdmSecurityAuditLog> MdmSecurityAuditLogs { get; set; }
        public virtual DbSet<MdmSequence> MdmSequences { get; set; }
        public virtual DbSet<MdmServicePackageBig> MdmServicePackageBigs { get; set; }
        public virtual DbSet<MdmServicePackageHour> MdmServicePackageHours { get; set; }
        public virtual DbSet<MdmServicePackageMaterial12> MdmServicePackageMaterial12 { get; set; }
        public virtual DbSet<MdmServicePackageSmall> MdmServicePackageSmalls { get; set; }
        public virtual DbSet<MdmServicePackageSoftOffering> MdmServicePackageSoftOfferings { get; set; }
        public virtual DbSet<MdmServicePart> MdmServiceParts { get; set; }
        public virtual DbSet<MdmServicePartsMapping> MdmServicePartsMappings { get; set; }
        public virtual DbSet<MdmSeverity> MdmSeverities { get; set; }
        public virtual DbSet<MdmShortMessage> MdmShortMessages { get; set; }
        public virtual DbSet<MdmSmallServicePackage> MdmSmallServicePackages { get; set; }
        public virtual DbSet<MdmSoftOffering> MdmSoftOfferings { get; set; }
        public virtual DbSet<MdmSoVehicleUseSetting> MdmSoVehicleUseSettings { get; set; }
        public virtual DbSet<MdmStandardHour> MdmStandardHours { get; set; }
        public virtual DbSet<MdmStandardHoursUnitlRel> MdmStandardHoursUnitlRels { get; set; }
        public virtual DbSet<MdmSupplierContact> MdmSupplierContacts { get; set; }
        public virtual DbSet<MdmSupplierContract> MdmSupplierContracts { get; set; }
        public virtual DbSet<MdmSupplierDate> MdmSupplierDates { get; set; }
        public virtual DbSet<MdmSupplierInfo> MdmSupplierInfoes { get; set; }
        public virtual DbSet<MdmSupplierQuota> MdmSupplierQuotas { get; set; }
        public virtual DbSet<MdmTag> MdmTags { get; set; }
        public virtual DbSet<MdmTagGroup> MdmTagGroups { get; set; }
        public virtual DbSet<MdmTargetConfig> MdmTargetConfigs { get; set; }
        public virtual DbSet<MdmUnitHourUniformPricing> MdmUnitHourUniformPricings { get; set; }
        public virtual DbSet<MdmVehicleAndOptionRelation> MdmVehicleAndOptionRelations { get; set; }
        public virtual DbSet<MdmVehicleAndSaleFeatureRelation> MdmVehicleAndSaleFeatureRelations { get; set; }
        public virtual DbSet<MdmVehicleBrand> MdmVehicleBrands { get; set; }
        public virtual DbSet<MdmVehicleColor> MdmVehicleColors { get; set; }
        public virtual DbSet<MdmVehicleConfiguration> MdmVehicleConfigurations { get; set; }
        public virtual DbSet<MdmVehicleDisplacement> MdmVehicleDisplacements { get; set; }
        public virtual DbSet<MdmVehicleDocument> MdmVehicleDocuments { get; set; }
        public virtual DbSet<MdmVehicleEngine> MdmVehicleEngines { get; set; }
        public virtual DbSet<MdmVehicleEngineeringType> MdmVehicleEngineeringTypes { get; set; }
        public virtual DbSet<MdmVehicleGearbox> MdmVehicleGearboxes { get; set; }
        public virtual DbSet<MdmVehicleLhdRhd> MdmVehicleLhdRhds { get; set; }
        public virtual DbSet<MdmVehicleMaterial> MdmVehicleMaterials { get; set; }
        public virtual DbSet<MdmVehicleMaterial12> MdmVehicleMaterial12 { get; set; }
        public virtual DbSet<MdmVehicleMaterialConfig> MdmVehicleMaterialConfigs { get; set; }
        public virtual DbSet<MdmVehicleOemLeadTime> MdmVehicleOemLeadTimes { get; set; }
        public virtual DbSet<MdmVehicleOption> MdmVehicleOptions { get; set; }
        public virtual DbSet<MdmVehicleProfile> MdmVehicleProfiles { get; set; }
        public virtual DbSet<MdmVehicleSaleFeature> MdmVehicleSaleFeatures { get; set; }
        public virtual DbSet<MdmVehicleStyle> MdmVehicleStyles { get; set; }
        public virtual DbSet<MdmVehicleType> MdmVehicleTypes { get; set; }
        public virtual DbSet<MdmVehicleYear> MdmVehicleYears { get; set; }
        public virtual DbSet<MdmWareHouseLocation> MdmWareHouseLocations { get; set; }
        public virtual DbSet<MkActivity> MkActivities { get; set; }
        public virtual DbSet<MkActivityOrgRef> MkActivityOrgRefs { get; set; }
        public virtual DbSet<MkActivityVehicleRef> MkActivityVehicleRefs { get; set; }
        public virtual DbSet<MkMrp> MkMrps { get; set; }
        public virtual DbSet<MkPlan> MkPlans { get; set; }
        public virtual DbSet<MkPlanVehicleRef> MkPlanVehicleRefs { get; set; }
        public virtual DbSet<MkVehicleSupport> MkVehicleSupports { get; set; }
        public virtual DbSet<MkVehicleSupportNoticeRef> MkVehicleSupportNoticeRefs { get; set; }
        public virtual DbSet<MkVehicleSupportVehicleRef> MkVehicleSupportVehicleRefs { get; set; }
        public virtual DbSet<PUSHMSG> PUSHMSGs { get; set; }
        public virtual DbSet<Pvprivilege> Pvprivileges { get; set; }
        public virtual DbSet<PvRole> PvRoles { get; set; }
        public virtual DbSet<PvRoleAccount> PvRoleAccounts { get; set; }
        public virtual DbSet<PvRoleCategory> PvRoleCategories { get; set; }
        public virtual DbSet<PvRoleGroup> PvRoleGroups { get; set; }
        public virtual DbSet<PvRoleGroupAccoutRef> PvRoleGroupAccoutRefs { get; set; }
        public virtual DbSet<PvRoleGroupCategory> PvRoleGroupCategories { get; set; }
        public virtual DbSet<PvRoleGroupExtAttribute> PvRoleGroupExtAttributes { get; set; }
        public virtual DbSet<PvRoleGroupRoleRef> PvRoleGroupRoleRefs { get; set; }
        public virtual DbSet<PvRolePrivilege> PvRolePrivileges { get; set; }
        public virtual DbSet<QRTZ_BLOB_TRIGGERS> QRTZ_BLOB_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_CALENDARS> QRTZ_CALENDARS { get; set; }
        public virtual DbSet<QRTZ_CRON_TRIGGERS> QRTZ_CRON_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_FIRED_TRIGGERS> QRTZ_FIRED_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_JOB_DETAILS> QRTZ_JOB_DETAILS { get; set; }
        public virtual DbSet<QRTZ_JOB_LISTENERS> QRTZ_JOB_LISTENERS { get; set; }
        public virtual DbSet<QRTZ_LOCKS> QRTZ_LOCKS { get; set; }
        public virtual DbSet<QRTZ_PAUSED_TRIGGER_GRPS> QRTZ_PAUSED_TRIGGER_GRPS { get; set; }
        public virtual DbSet<QRTZ_SCHEDULER_STATE> QRTZ_SCHEDULER_STATE { get; set; }
        public virtual DbSet<QRTZ_SIMPLE_TRIGGERS> QRTZ_SIMPLE_TRIGGERS { get; set; }
        public virtual DbSet<QRTZ_TRIGGER_LISTENERS> QRTZ_TRIGGER_LISTENERS { get; set; }
        public virtual DbSet<QRTZ_TRIGGERS> QRTZ_TRIGGERS { get; set; }
        public virtual DbSet<ReportDailySalesCount> ReportDailySalesCounts { get; set; }
        public virtual DbSet<ReportOrderSimpleCount> ReportOrderSimpleCounts { get; set; }
        public virtual DbSet<RgmDealerBelongQYDD> RgmDealerBelongQYDDs { get; set; }
        public virtual DbSet<RgmDealerInspectTask> RgmDealerInspectTasks { get; set; }
        public virtual DbSet<RgmHoliday> RgmHolidays { get; set; }
        public virtual DbSet<RgmImprovementItem> RgmImprovementItems { get; set; }
        public virtual DbSet<RgmImprovementItemBase> RgmImprovementItemBases { get; set; }
        public virtual DbSet<RgmImprovementMeasure> RgmImprovementMeasures { get; set; }
        public virtual DbSet<RgmImprovementMeasureApproval> RgmImprovementMeasureApprovals { get; set; }
        public virtual DbSet<RgmImprovementMeasureBase> RgmImprovementMeasureBases { get; set; }
        public virtual DbSet<RgmImprovmentTemp> RgmImprovmentTemps { get; set; }
        public virtual DbSet<RgmInspect> RgmInspects { get; set; }
        public virtual DbSet<RgmInspectChecklist> RgmInspectChecklists { get; set; }
        public virtual DbSet<RgmInspectDocument> RgmInspectDocuments { get; set; }
        public virtual DbSet<RgmInspectItinerary> RgmInspectItineraries { get; set; }
        public virtual DbSet<RgmInspectPlan> RgmInspectPlans { get; set; }
        public virtual DbSet<RgmInspectPlanApproval> RgmInspectPlanApprovals { get; set; }
        public virtual DbSet<RgmInspectPlanTaskType> RgmInspectPlanTaskTypes { get; set; }
        public virtual DbSet<RgmInspectTask> RgmInspectTasks { get; set; }
        public virtual DbSet<RgmInspectTaskType> RgmInspectTaskTypes { get; set; }
        public virtual DbSet<RgmInspectTaskTypeMaterial> RgmInspectTaskTypeMaterials { get; set; }
        public virtual DbSet<RgmPlanTaskTypeTemp> RgmPlanTaskTypeTemps { get; set; }
        public virtual DbSet<RgmTimeSheet> RgmTimeSheets { get; set; }
        public virtual DbSet<RptPRHotTopic> RptPRHotTopics { get; set; }
        public virtual DbSet<RptPRKeywordRank> RptPRKeywordRanks { get; set; }
        public virtual DbSet<RptPRMediaRank> RptPRMediaRanks { get; set; }
        public virtual DbSet<RptPRMediatypeRank> RptPRMediatypeRanks { get; set; }
        public virtual DbSet<RptPRMediatypeTrend> RptPRMediatypeTrends { get; set; }
        public virtual DbSet<RptPRMonitorResult> RptPRMonitorResults { get; set; }
        public virtual DbSet<RptPRPosttypeRank> RptPRPosttypeRanks { get; set; }
        public virtual DbSet<RptPRPublicOpinionTrend> RptPRPublicOpinionTrends { get; set; }
        public virtual DbSet<RptPRSensitiveContent> RptPRSensitiveContents { get; set; }
        public virtual DbSet<RptPRSensitiveTrend> RptPRSensitiveTrends { get; set; }
        public virtual DbSet<RptPRWordRank> RptPRWordRanks { get; set; }
        public virtual DbSet<SaDimChannel> SaDimChannels { get; set; }
        public virtual DbSet<SaDimConsultant> SaDimConsultants { get; set; }
        public virtual DbSet<SaDimDate> SaDimDates { get; set; }
        public virtual DbSet<SaDimWeb> SaDimWebs { get; set; }
        public virtual DbSet<SaDimWeek> SaDimWeeks { get; set; }
        public virtual DbSet<SnsMemberEvent> SnsMemberEvents { get; set; }
        public virtual DbSet<SnsMemberEventTransaction> SnsMemberEventTransactions { get; set; }
        public virtual DbSet<SnsMemberRatingRole> SnsMemberRatingRoles { get; set; }
        public virtual DbSet<SnsMember> SnsMembers { get; set; }
        public virtual DbSet<SpmAccountOrderTransLog> SpmAccountOrderTransLogs { get; set; }
        public virtual DbSet<SpmAnnouncement> SpmAnnouncements { get; set; }
        public virtual DbSet<SpmAppModelConfig> SpmAppModelConfigs { get; set; }
        public virtual DbSet<SpmAssemblePartNoOccupyDetail> SpmAssemblePartNoOccupyDetails { get; set; }
        public virtual DbSet<SpmBO> SpmBOes { get; set; }
        public virtual DbSet<SpmBODetail> SpmBODetails { get; set; }
        public virtual DbSet<SpmBox> SpmBoxes { get; set; }
        public virtual DbSet<SpmBoxDetail> SpmBoxDetails { get; set; }
        public virtual DbSet<SpmBoxRegion> SpmBoxRegions { get; set; }
        public virtual DbSet<SpmBoxRegionDealerRel> SpmBoxRegionDealerRels { get; set; }
        public virtual DbSet<SpmClosePart> SpmCloseParts { get; set; }
        public virtual DbSet<SpmCompany> SpmCompanies { get; set; }
        public virtual DbSet<SpmCustomerGroup> SpmCustomerGroups { get; set; }
        public virtual DbSet<SpmCustomerGroupDealer> SpmCustomerGroupDealers { get; set; }
        public virtual DbSet<SpmDealerAccount> SpmDealerAccounts { get; set; }
        public virtual DbSet<SpmDealerAccountDetail> SpmDealerAccountDetails { get; set; }
        public virtual DbSet<SpmDealerForecastPart> SpmDealerForecastParts { get; set; }
        public virtual DbSet<SpmDiffanalyseReport> SpmDiffanalyseReports { get; set; }
        public virtual DbSet<SpmDiffanalyseReportsDetail> SpmDiffanalyseReportsDetails { get; set; }
        public virtual DbSet<SpmDPurchaseOrder> SpmDPurchaseOrders { get; set; }
        public virtual DbSet<SpmDPurchaseOrderDetail> SpmDPurchaseOrderDetails { get; set; }
        public virtual DbSet<SpmEntrustOrder> SpmEntrustOrders { get; set; }
        public virtual DbSet<SpmEntrustOrderDetail> SpmEntrustOrderDetails { get; set; }
        public virtual DbSet<SpmLimitationLogistic> SpmLimitationLogistics { get; set; }
        public virtual DbSet<SpmLocation> SpmLocations { get; set; }
        public virtual DbSet<SpmLocationStorageType> SpmLocationStorageTypes { get; set; }
        public virtual DbSet<SpmMaterialReceiveNotice> SpmMaterialReceiveNotices { get; set; }
        public virtual DbSet<SpmMaterialReceiveNoticeDetail> SpmMaterialReceiveNoticeDetails { get; set; }
        public virtual DbSet<SpmMaterialReceiveNoticeReturnDetail> SpmMaterialReceiveNoticeReturnDetails { get; set; }
        public virtual DbSet<SpmNotificationDetail> SpmNotificationDetails { get; set; }
        public virtual DbSet<SpmNotificationHead> SpmNotificationHeads { get; set; }
        public virtual DbSet<SpmNotificationTask> SpmNotificationTasks { get; set; }
        public virtual DbSet<SpmOEMOutOrder> SpmOEMOutOrders { get; set; }
        public virtual DbSet<SpmOEMOutOrderDetail> SpmOEMOutOrderDetails { get; set; }
        public virtual DbSet<SpmOrderCalendar> SpmOrderCalendars { get; set; }
        public virtual DbSet<SpmOrderCalendarWithWarehouse> SpmOrderCalendarWithWarehouses { get; set; }
        public virtual DbSet<SpmOrderProcessLog> SpmOrderProcessLogs { get; set; }
        public virtual DbSet<SpmOrderReceiveCount> SpmOrderReceiveCounts { get; set; }
        public virtual DbSet<SpmOrderSwitch> SpmOrderSwitches { get; set; }
        public virtual DbSet<SpmOutput> SpmOutputs { get; set; }
        public virtual DbSet<SpmOutputDetail> SpmOutputDetails { get; set; }
        public virtual DbSet<SpmOutputVerifyLog> SpmOutputVerifyLogs { get; set; }
        public virtual DbSet<SpmOutsideCommissionedPlan> SpmOutsideCommissionedPlans { get; set; }
        public virtual DbSet<SpmOutsideCommissionedPlanDetail> SpmOutsideCommissionedPlanDetails { get; set; }
        public virtual DbSet<SpmPackageAppliance_dev> SpmPackageAppliance_dev { get; set; }
        public virtual DbSet<SpmPackageStocks_dev> SpmPackageStocks_dev { get; set; }
        public virtual DbSet<SpmPackageTran> SpmPackageTrans { get; set; }
        public virtual DbSet<SpmPackageTranDetail> SpmPackageTranDetails { get; set; }
        public virtual DbSet<SpmPackingOrder> SpmPackingOrders { get; set; }
        public virtual DbSet<SpmPackingOrderDetail> SpmPackingOrderDetails { get; set; }
        public virtual DbSet<SpmPartBasicPrice> SpmPartBasicPrices { get; set; }
        public virtual DbSet<SpmPartPlanForecastLess90Value> SpmPartPlanForecastLess90Value { get; set; }
        public virtual DbSet<SpmPartPurchaseForecast> SpmPartPurchaseForecasts { get; set; }
        public virtual DbSet<SpmPartsCost> SpmPartsCosts { get; set; }
        public virtual DbSet<SpmPartsGroupProfit> SpmPartsGroupProfits { get; set; }
        public virtual DbSet<SpmPartsGroupProfitExtend> SpmPartsGroupProfitExtends { get; set; }
        public virtual DbSet<SpmPartsPickCard> SpmPartsPickCards { get; set; }
        public virtual DbSet<SpmPartsPickCardDetail> SpmPartsPickCardDetails { get; set; }
        public virtual DbSet<SpmPartStockConfig> SpmPartStockConfigs { get; set; }
        public virtual DbSet<SpmPdaTask> SpmPdaTasks { get; set; }
        public virtual DbSet<SpmPdaTaskLog> SpmPdaTaskLogs { get; set; }
        public virtual DbSet<SpmPickBox> SpmPickBoxes { get; set; }
        public virtual DbSet<SpmPickBoxTaskRel> SpmPickBoxTaskRels { get; set; }
        public virtual DbSet<SpmPickGuideTask> SpmPickGuideTasks { get; set; }
        public virtual DbSet<SpmPredictionData> SpmPredictionDatas { get; set; }
        public virtual DbSet<SpmPromotionsEvent> SpmPromotionsEvents { get; set; }
        public virtual DbSet<SpmPromotionsEventsDealer> SpmPromotionsEventsDealers { get; set; }
        public virtual DbSet<SpmPromotionsEventsPart> SpmPromotionsEventsParts { get; set; }
        public virtual DbSet<SpmPurchaseOrder> SpmPurchaseOrders { get; set; }
        public virtual DbSet<SpmPurchaseOrderDetail> SpmPurchaseOrderDetails { get; set; }
        public virtual DbSet<SpmPurchasePlan> SpmPurchasePlans { get; set; }
        public virtual DbSet<SpmPurchasePlanDetail> SpmPurchasePlanDetails { get; set; }
        public virtual DbSet<SpmPurchAsepropertyConfig> SpmPurchAsepropertyConfigs { get; set; }
        public virtual DbSet<SpmPurchaseRebateExamItem> SpmPurchaseRebateExamItems { get; set; }
        public virtual DbSet<SpmPurchaseRebateScoreInterval> SpmPurchaseRebateScoreIntervals { get; set; }
        public virtual DbSet<SpmPurchaseRebateTotalScoreInterval> SpmPurchaseRebateTotalScoreIntervals { get; set; }
        public virtual DbSet<SpmPurchasingTarget> SpmPurchasingTargets { get; set; }
        public virtual DbSet<SpmPurchasingTargetRetentionRate> SpmPurchasingTargetRetentionRates { get; set; }
        public virtual DbSet<SpmReceive> SpmReceives { get; set; }
        public virtual DbSet<SpmReceiveDetail> SpmReceiveDetails { get; set; }
        public virtual DbSet<SpmReceiveDetailAbnormal> SpmReceiveDetailAbnormals { get; set; }
        public virtual DbSet<SpmRepackage> SpmRepackages { get; set; }
        public virtual DbSet<SpmRepackageArt> SpmRepackageArts { get; set; }
        public virtual DbSet<SpmRepackageArtPart> SpmRepackageArtParts { get; set; }
        public virtual DbSet<SpmRepackageDetail> SpmRepackageDetails { get; set; }
        public virtual DbSet<SpmRepackagePrintConfig> SpmRepackagePrintConfigs { get; set; }
        public virtual DbSet<SpmRoleAmount> SpmRoleAmounts { get; set; }
        public virtual DbSet<SpmRolePrice> SpmRolePrices { get; set; }
        public virtual DbSet<SpmRushOrderSet> SpmRushOrderSets { get; set; }
        public virtual DbSet<SpmRushOrderSetDetail> SpmRushOrderSetDetails { get; set; }
        public virtual DbSet<SpmSalesInvoice> SpmSalesInvoices { get; set; }
        public virtual DbSet<SpmSettlement> SpmSettlements { get; set; }
        public virtual DbSet<SpmSettlementDetail> SpmSettlementDetails { get; set; }
        public virtual DbSet<SpmSettlementOrder> SpmSettlementOrders { get; set; }
        public virtual DbSet<SpmSettlementOrderDetail> SpmSettlementOrderDetails { get; set; }
        public virtual DbSet<SpmShelveStock> SpmShelveStocks { get; set; }
        public virtual DbSet<SpmShipmentLine> SpmShipmentLines { get; set; }
        public virtual DbSet<SpmShippingOrder> SpmShippingOrders { get; set; }
        public virtual DbSet<SpmShippingOrderDetail> SpmShippingOrderDetails { get; set; }
        public virtual DbSet<SpmShippingOrderPriceDetail> SpmShippingOrderPriceDetails { get; set; }
        public virtual DbSet<SpmSO> SpmSOes { get; set; }
        public virtual DbSet<SpmSODetail> SpmSODetails { get; set; }
        public virtual DbSet<SpmStock> SpmStocks { get; set; }
        public virtual DbSet<SpmStockTransDetail> SpmStockTransDetails { get; set; }
        public virtual DbSet<SpmStockTransDetailLog> SpmStockTransDetailLogs { get; set; }
        public virtual DbSet<SpmTransDetail> SpmTransDetails { get; set; }
        public virtual DbSet<SpmTransHead> SpmTransHeads { get; set; }
        public virtual DbSet<SpmTray> SpmTrays { get; set; }
        public virtual DbSet<SpmTrayPart> SpmTrayParts { get; set; }
        public virtual DbSet<SpmWarehouse> SpmWarehouses { get; set; }
        public virtual DbSet<SpmZone> SpmZones { get; set; }
        public virtual DbSet<SrmMaterialPickUp> SrmMaterialPickUps { get; set; }
        public virtual DbSet<SrmMaterialReceivePlan> SrmMaterialReceivePlans { get; set; }
        public virtual DbSet<SrmMaterialReceivePlanDetail> SrmMaterialReceivePlanDetails { get; set; }
        public virtual DbSet<SRMOutlierData> SRMOutlierDatas { get; set; }
        public virtual DbSet<SsiInvestAnswer> SsiInvestAnswers { get; set; }
        public virtual DbSet<SsiInvestOption> SsiInvestOptions { get; set; }
        public virtual DbSet<SsiInvestPaper> SsiInvestPapers { get; set; }
        public virtual DbSet<SsiInvestQuestion> SsiInvestQuestions { get; set; }
        public virtual DbSet<SsiInvestQuestionnaire> SsiInvestQuestionnaires { get; set; }
        public virtual DbSet<SsiInvestQuestionnaireType> SsiInvestQuestionnaireTypes { get; set; }
        public virtual DbSet<SsiInvestSurveyTarget> SsiInvestSurveyTargets { get; set; }
        public virtual DbSet<SvcAccountVehicle> SvcAccountVehicles { get; set; }
        public virtual DbSet<SvcApplicationVersionController> SvcApplicationVersionControllers { get; set; }
        public virtual DbSet<SvcAppointmentCheckRing> SvcAppointmentCheckRings { get; set; }
        public virtual DbSet<SvcAppointmentMaintainItem> SvcAppointmentMaintainItems { get; set; }
        public virtual DbSet<SvcAppointmentOrder> SvcAppointmentOrders { get; set; }
        public virtual DbSet<SvcAppointmentPart> SvcAppointmentParts { get; set; }
        public virtual DbSet<SvcAppointmentService> SvcAppointmentServices { get; set; }
        public virtual DbSet<SvcAppointmentVehiclePic> SvcAppointmentVehiclePics { get; set; }
        public virtual DbSet<SvcAskLeave> SvcAskLeaves { get; set; }
        public virtual DbSet<SvcCameraPicture> SvcCameraPictures { get; set; }
        public virtual DbSet<SvcChangeServiceRecord> SvcChangeServiceRecords { get; set; }
        public virtual DbSet<SvcContact> SvcContacts { get; set; }
        public virtual DbSet<SvcContactPaper> SvcContactPapers { get; set; }
        public virtual DbSet<SvcContactRecord> SvcContactRecords { get; set; }
        public virtual DbSet<SvcContactSubject> SvcContactSubjects { get; set; }
        public virtual DbSet<SvcContactSubjectChoose> SvcContactSubjectChooses { get; set; }
        public virtual DbSet<SvcCustomerLook> SvcCustomerLooks { get; set; }
        public virtual DbSet<SvcCustomerRest> SvcCustomerRests { get; set; }
        public virtual DbSet<SvcCustomerRestRecord> SvcCustomerRestRecords { get; set; }
        public virtual DbSet<SvcCustomerReview> SvcCustomerReviews { get; set; }
        public virtual DbSet<SvcDealerContactInformation> SvcDealerContactInformations { get; set; }
        public virtual DbSet<SvcDealerDeaultPaper> SvcDealerDeaultPapers { get; set; }
        public virtual DbSet<SvcDealerHour> SvcDealerHours { get; set; }
        public virtual DbSet<SvcDealerLane> SvcDealerLanes { get; set; }
        public virtual DbSet<SvcDealerSatisfaction> SvcDealerSatisfactions { get; set; }
        public virtual DbSet<SvcDealerTechGroup> SvcDealerTechGroups { get; set; }
        public virtual DbSet<SvcDealerTechnician> SvcDealerTechnicians { get; set; }
        public virtual DbSet<SvcHistoricalRecallLog> SvcHistoricalRecallLogs { get; set; }
        public virtual DbSet<SvcIMAccount> SvcIMAccounts { get; set; }
        public virtual DbSet<SvcInquiry> SvcInquiries { get; set; }
        public virtual DbSet<SvcInquiryModel> SvcInquiryModels { get; set; }
        public virtual DbSet<SvcItemCode> SvcItemCodes { get; set; }
        public virtual DbSet<SvcLaneAppointmentDate> SvcLaneAppointmentDates { get; set; }
        public virtual DbSet<SvcLostCustomer> SvcLostCustomers { get; set; }
        public virtual DbSet<SvcMaintainMemorandumItem> SvcMaintainMemorandumItems { get; set; }
        public virtual DbSet<SvcMaintainMemorandumPart> SvcMaintainMemorandumParts { get; set; }
        public virtual DbSet<SvcMaintainPriceDetail> SvcMaintainPriceDetails { get; set; }
        public virtual DbSet<SvcMaintainRule> SvcMaintainRules { get; set; }
        public virtual DbSet<SvcMaintenanceProgressOperating> SvcMaintenanceProgressOperatings { get; set; }
        public virtual DbSet<SvcMessageinfo> SvcMessageinfoes { get; set; }
        public virtual DbSet<SvcMessageQueue> SvcMessageQueues { get; set; }
        public virtual DbSet<SvcMessageQueueDetail> SvcMessageQueueDetails { get; set; }
        public virtual DbSet<SvcOrderRelate> SvcOrderRelates { get; set; }
        public virtual DbSet<SvcOrderStoreInfo> SvcOrderStoreInfoes { get; set; }
        public virtual DbSet<SvcPaperSubjectChoose> SvcPaperSubjectChooses { get; set; }
        public virtual DbSet<SvcPaperTemplate> SvcPaperTemplates { get; set; }
        public virtual DbSet<SvcPaperTemplateSubject> SvcPaperTemplateSubjects { get; set; }
        public virtual DbSet<SvcProxyModel> SvcProxyModels { get; set; }
        public virtual DbSet<SvcReserverProxy> SvcReserverProxies { get; set; }
        public virtual DbSet<SvcRevertRecord> SvcRevertRecords { get; set; }
        public virtual DbSet<SvcRingCheckResult> SvcRingCheckResults { get; set; }
        public virtual DbSet<SvcSendLog> SvcSendLogs { get; set; }
        public virtual DbSet<SvcSequence> SvcSequences { get; set; }
        public virtual DbSet<SvcServiceAddAudit> SvcServiceAddAudits { get; set; }
        public virtual DbSet<SvcServiceBpOpDelay> SvcServiceBpOpDelays { get; set; }
        public virtual DbSet<SvcServiceBpStepMain> SvcServiceBpStepMains { get; set; }
        public virtual DbSet<SvcServiceBpStepModel> SvcServiceBpStepModels { get; set; }
        public virtual DbSet<SvcServiceBpStepSub> SvcServiceBpStepSubs { get; set; }
        public virtual DbSet<SvcServiceBpStepSubLog> SvcServiceBpStepSubLogs { get; set; }
        public virtual DbSet<SvcServiceBpStepSubTechLog> SvcServiceBpStepSubTechLogs { get; set; }
        public virtual DbSet<SvcServiceBpStepTech> SvcServiceBpStepTeches { get; set; }
        public virtual DbSet<SvcServiceCheckRing> SvcServiceCheckRings { get; set; }
        public virtual DbSet<SvcServiceClm> SvcServiceClms { get; set; }
        public virtual DbSet<SvcServiceCscMain> SvcServiceCscMains { get; set; }
        public virtual DbSet<SvcServiceFreezeRecord> SvcServiceFreezeRecords { get; set; }
        public virtual DbSet<SvcServiceHanderAlarm> SvcServiceHanderAlarms { get; set; }
        public virtual DbSet<SvcServiceMemo> SvcServiceMemoes { get; set; }
        public virtual DbSet<SvcServiceMutualCheck> SvcServiceMutualChecks { get; set; }
        public virtual DbSet<SvcServiceMutualCheckModel> SvcServiceMutualCheckModels { get; set; }
        public virtual DbSet<SvcServiceOpDelay> SvcServiceOpDelays { get; set; }
        public virtual DbSet<SvcServiceOperation> SvcServiceOperations { get; set; }
        public virtual DbSet<SvcServiceOperationLog> SvcServiceOperationLogs { get; set; }
        public virtual DbSet<SvcServiceOperationRecord> SvcServiceOperationRecords { get; set; }
        public virtual DbSet<SvcServiceOpLane> SvcServiceOpLanes { get; set; }
        public virtual DbSet<SvcServiceOrder> SvcServiceOrders { get; set; }
        public virtual DbSet<SvcServiceOrderItem> SvcServiceOrderItems { get; set; }
        public virtual DbSet<SvcServiceOrderPart> SvcServiceOrderParts { get; set; }
        public virtual DbSet<SvcServiceProxy> SvcServiceProxies { get; set; }
        public virtual DbSet<SvcServiceSummary> SvcServiceSummaries { get; set; }
        public virtual DbSet<SvcServiceVehStatu> SvcServiceVehStatus { get; set; }
        public virtual DbSet<SvcServiceVehStatusModel> SvcServiceVehStatusModels { get; set; }
        public virtual DbSet<SvcSign> SvcSigns { get; set; }
        public virtual DbSet<SvcSpecialOrderApproval> SvcSpecialOrderApprovals { get; set; }
        public virtual DbSet<SvcStatement> SvcStatements { get; set; }
        public virtual DbSet<SvcStatementCoupon> SvcStatementCoupons { get; set; }
        public virtual DbSet<SvcStatementItem> SvcStatementItems { get; set; }
        public virtual DbSet<SvcStatementOrder> SvcStatementOrders { get; set; }
        public virtual DbSet<SvcStatementPart> SvcStatementParts { get; set; }
        public virtual DbSet<SvcStatementPayDetail> SvcStatementPayDetails { get; set; }
        public virtual DbSet<SvcSubject> SvcSubjects { get; set; }
        public virtual DbSet<SvcSubjectChoose> SvcSubjectChooses { get; set; }
        public virtual DbSet<SvcTag> SvcTags { get; set; }
        public virtual DbSet<SvcTagGroup> SvcTagGroups { get; set; }
        public virtual DbSet<SvcVehicleBoutique> SvcVehicleBoutiques { get; set; }
        public virtual DbSet<SvcVehicleConfirm> SvcVehicleConfirms { get; set; }
        public virtual DbSet<SvcVehicleDelivery> SvcVehicleDeliveries { get; set; }
        public virtual DbSet<SvcVehicleDeliveryItem> SvcVehicleDeliveryItems { get; set; }
        public virtual DbSet<SvcVehicleDeliveryItemMain> SvcVehicleDeliveryItemMains { get; set; }
        public virtual DbSet<SvcVehicleDeliveryItemModel> SvcVehicleDeliveryItemModels { get; set; }
        public virtual DbSet<SvcVehicleDeliveryTimeRecord> SvcVehicleDeliveryTimeRecords { get; set; }
        public virtual DbSet<SvcVehiclePdiItem> SvcVehiclePdiItems { get; set; }
        public virtual DbSet<SvcVehiclePdiItemModel> SvcVehiclePdiItemModels { get; set; }
        public virtual DbSet<SvcVideoDevice> SvcVideoDevices { get; set; }
        public virtual DbSet<SysAdminArea> SysAdminAreas { get; set; }
        public virtual DbSet<SysAliyunAc> SysAliyunAcs { get; set; }
        public virtual DbSet<SysAliyunUserDevice> SysAliyunUserDevices { get; set; }
        public virtual DbSet<SysApiActionConfig> SysApiActionConfigs { get; set; }
        public virtual DbSet<SysApproval> SysApprovals { get; set; }
        public virtual DbSet<SysArea> SysAreas { get; set; }
        public virtual DbSet<SysAreaAdminArea> SysAreaAdminAreas { get; set; }
        public virtual DbSet<SysAttachment> SysAttachments { get; set; }
        public virtual DbSet<SysCepToSRMLog> SysCepToSRMLogs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<SysExpress> SysExpresses { get; set; }
        public virtual DbSet<SysFunction> SysFunctions { get; set; }
        public virtual DbSet<SysFunctionApiAction> SysFunctionApiActions { get; set; }
        public virtual DbSet<SysJobFrequencySetting> SysJobFrequencySettings { get; set; }
        public virtual DbSet<SysJobLog> SysJobLogs { get; set; }
        public virtual DbSet<SysMenu> SysMenus { get; set; }
        public virtual DbSet<SysOperateLog1> SysOperateLog1 { get; set; }
        public virtual DbSet<SysOperateLog10> SysOperateLog10 { get; set; }
        public virtual DbSet<SysOperateLog11> SysOperateLog11 { get; set; }
        public virtual DbSet<SysOperateLog12> SysOperateLog12 { get; set; }
        public virtual DbSet<SysOperateLog13> SysOperateLog13 { get; set; }
        public virtual DbSet<SysOperateLog14> SysOperateLog14 { get; set; }
        public virtual DbSet<SysOperateLog15> SysOperateLog15 { get; set; }
        public virtual DbSet<SysOperateLog2> SysOperateLog2 { get; set; }
        public virtual DbSet<SysOperateLog3> SysOperateLog3 { get; set; }
        public virtual DbSet<SysOperateLog4> SysOperateLog4 { get; set; }
        public virtual DbSet<SysOperateLog5> SysOperateLog5 { get; set; }
        public virtual DbSet<SysOperateLog6> SysOperateLog6 { get; set; }
        public virtual DbSet<SysOperateLog7> SysOperateLog7 { get; set; }
        public virtual DbSet<SysOperateLog8> SysOperateLog8 { get; set; }
        public virtual DbSet<SysOperateLog9> SysOperateLog9 { get; set; }
        public virtual DbSet<SysOperateLogHistory> SysOperateLogHistories { get; set; }
        public virtual DbSet<SysOrg> SysOrgs { get; set; }
        public virtual DbSet<SysPdaWorkSet> SysPdaWorkSets { get; set; }
        public virtual DbSet<SysPrintLog> SysPrintLogs { get; set; }
        public virtual DbSet<SysRecordTrace> SysRecordTraces { get; set; }
        public virtual DbSet<SysRole> SysRoles { get; set; }
        public virtual DbSet<SysRoleFunction> SysRoleFunctions { get; set; }
        public virtual DbSet<SysSapOperateLog1> SysSapOperateLog1 { get; set; }
        public virtual DbSet<SysSapOperateLog2> SysSapOperateLog2 { get; set; }
        public virtual DbSet<SysSapOperateLog3> SysSapOperateLog3 { get; set; }
        public virtual DbSet<SysSapOperateLog4> SysSapOperateLog4 { get; set; }
        public virtual DbSet<SysSapOperateLog5> SysSapOperateLog5 { get; set; }
        public virtual DbSet<SysUploadFile> SysUploadFiles { get; set; }
        public virtual DbSet<SysUploadFileDelete> SysUploadFileDeletes { get; set; }
        public virtual DbSet<SysUploadFileDraft> SysUploadFileDrafts { get; set; }
        public virtual DbSet<SysUser> SysUsers { get; set; }
        public virtual DbSet<SysUserExtend> SysUserExtends { get; set; }
        public virtual DbSet<SysUserOrg> SysUserOrgs { get; set; }
        public virtual DbSet<SysUserRole> SysUserRoles { get; set; }
        public virtual DbSet<SysUserVehWarehouse> SysUserVehWarehouses { get; set; }
        public virtual DbSet<TERMINATE> TERMINATEs { get; set; }
        public virtual DbSet<TsAccessRecord> TsAccessRecords { get; set; }
        public virtual DbSet<TsAccident> TsAccidents { get; set; }
        public virtual DbSet<TsAccidentInfo> TsAccidentInfoes { get; set; }
        public virtual DbSet<TsAddress> TsAddresses { get; set; }
        public virtual DbSet<TsAdvisoryCarSery> TsAdvisoryCarSeries { get; set; }
        public virtual DbSet<TsAdvisoryCC> TsAdvisoryCCs { get; set; }
        public virtual DbSet<TsAdvisoryConfigure> TsAdvisoryConfigures { get; set; }
        public virtual DbSet<TsAdvisoryCSC> TsAdvisoryCSCs { get; set; }
        public virtual DbSet<TsAdvisoryDTCInfo> TsAdvisoryDTCInfoes { get; set; }
        public virtual DbSet<TsAdvisoryECUInfo> TsAdvisoryECUInfoes { get; set; }
        public virtual DbSet<TsAdvisoryInformation> TsAdvisoryInformations { get; set; }
        public virtual DbSet<TsAdvisoryOrder> TsAdvisoryOrders { get; set; }
        public virtual DbSet<TsAdvisoryVehicleRange> TsAdvisoryVehicleRanges { get; set; }
        public virtual DbSet<TsAdvisoryWorkTime> TsAdvisoryWorkTimes { get; set; }
        public virtual DbSet<TsApproval> TsApprovals { get; set; }
        public virtual DbSet<TsApprovalMoney> TsApprovalMoneys { get; set; }
        public virtual DbSet<TsApprovalOther> TsApprovalOthers { get; set; }
        public virtual DbSet<TsApprovalPart> TsApprovalParts { get; set; }
        public virtual DbSet<TsApprovalRole> TsApprovalRoles { get; set; }
        public virtual DbSet<TsApprovalRule> TsApprovalRules { get; set; }
        public virtual DbSet<TsArrangeInformation> TsArrangeInformations { get; set; }
        public virtual DbSet<TsArrangeWorker> TsArrangeWorkers { get; set; }
        public virtual DbSet<TsArrivalInformation> TsArrivalInformations { get; set; }
        public virtual DbSet<TsAssignInfo> TsAssignInfoes { get; set; }
        public virtual DbSet<TsAttachment> TsAttachments { get; set; }
        public virtual DbSet<TsBBSUser> TsBBSUsers { get; set; }
        public virtual DbSet<TsCarAttribute> TsCarAttributes { get; set; }
        public virtual DbSet<TsCarFaultSituation> TsCarFaultSituations { get; set; }
        public virtual DbSet<TsCarInformation> TsCarInformations { get; set; }
        public virtual DbSet<TsCarNode> TsCarNodes { get; set; }
        public virtual DbSet<TsCarOptionalDevice> TsCarOptionalDevices { get; set; }
        public virtual DbSet<TsComment> TsComments { get; set; }
        public virtual DbSet<TsCommunicateInfo> TsCommunicateInfoes { get; set; }
        public virtual DbSet<TsDID> TsDIDs { get; set; }
        public virtual DbSet<TsDROData> TsDRODatas { get; set; }
        public virtual DbSet<TsDtcInformation> TsDtcInformations { get; set; }
        public virtual DbSet<TsDutyIdentifiedInfo> TsDutyIdentifiedInfoes { get; set; }
        public virtual DbSet<TsExceptional> TsExceptionals { get; set; }
        public virtual DbSet<TsExecutionInfo> TsExecutionInfoes { get; set; }
        public virtual DbSet<TsExperience> TsExperiences { get; set; }
        public virtual DbSet<TsFaultData> TsFaultDatas { get; set; }
        public virtual DbSet<TsFaultTrackingFeedback> TsFaultTrackingFeedbacks { get; set; }
        public virtual DbSet<TsForumGood> TsForumGoods { get; set; }
        public virtual DbSet<TsForumOrder> TsForumOrders { get; set; }
        public virtual DbSet<TsFriend> TsFriends { get; set; }
        public virtual DbSet<TsGeneralAdvisoryInformation> TsGeneralAdvisoryInformations { get; set; }
        public virtual DbSet<TsGoodsCategory> TsGoodsCategories { get; set; }
        public virtual DbSet<TsHotlineFAQ> TsHotlineFAQs { get; set; }
        public virtual DbSet<TsHotlineReturnRecord> TsHotlineReturnRecords { get; set; }
        public virtual DbSet<TsHotlineTraffic> TsHotlineTraffics { get; set; }
        public virtual DbSet<TsIntegralRecord> TsIntegralRecords { get; set; }
        public virtual DbSet<Tslabel> Tslabels { get; set; }
        public virtual DbSet<TsMailBelieve> TsMailBelieves { get; set; }
        public virtual DbSet<TsMaintenanceCaseInformation> TsMaintenanceCaseInformations { get; set; }
        public virtual DbSet<TsMaintenanceReport> TsMaintenanceReports { get; set; }
        public virtual DbSet<TsManagementRecord> TsManagementRecords { get; set; }
        public virtual DbSet<TsMarketValidation> TsMarketValidations { get; set; }
        public virtual DbSet<TsMeasureImplement> TsMeasureImplements { get; set; }
        public virtual DbSet<TsMiddleInfo> TsMiddleInfoes { get; set; }
        public virtual DbSet<TsNew> TsNews { get; set; }
        public virtual DbSet<TsNotice> TsNotices { get; set; }
        public virtual DbSet<TsPartInformation> TsPartInformations { get; set; }
        public virtual DbSet<TsPendingMsg> TsPendingMsgs { get; set; }
        public virtual DbSet<TsPost> TsPosts { get; set; }
        public virtual DbSet<TsPrivateMessage> TsPrivateMessages { get; set; }
        public virtual DbSet<TsProcessor> TsProcessors { get; set; }
        public virtual DbSet<TsProcessorDTCInfo> TsProcessorDTCInfoes { get; set; }
        public virtual DbSet<TsProgram> TsPrograms { get; set; }
        public virtual DbSet<TsRangeInfo> TsRangeInfoes { get; set; }
        public virtual DbSet<TsReadNote> TsReadNotes { get; set; }
        public virtual DbSet<TsReleaseObject> TsReleaseObjects { get; set; }
        public virtual DbSet<TsReply> TsReplies { get; set; }
        public virtual DbSet<TsReportAnalysi> TsReportAnalysis { get; set; }
        public virtual DbSet<TsRevReportRelatedDealer> TsRevReportRelatedDealers { get; set; }
        public virtual DbSet<TsServiceDescribe> TsServiceDescribes { get; set; }
        public virtual DbSet<TsServiceHistory> TsServiceHistories { get; set; }
        public virtual DbSet<TsServiceNotification> TsServiceNotifications { get; set; }
        public virtual DbSet<TsServiceVisual> TsServiceVisuals { get; set; }
        public virtual DbSet<TsSign> TsSigns { get; set; }
        public virtual DbSet<TsSingleOrder> TsSingleOrders { get; set; }
        public virtual DbSet<TsSoftwareAndHardwareInfo> TsSoftwareAndHardwareInfoes { get; set; }
        public virtual DbSet<TsSpecialsupplement> TsSpecialsupplements { get; set; }
        public virtual DbSet<TsSurveyRecord> TsSurveyRecords { get; set; }
        public virtual DbSet<TsSysCarBrand> TsSysCarBrands { get; set; }
        public virtual DbSet<TsSysCarModel> TsSysCarModels { get; set; }
        public virtual DbSet<TsSysCarSery> TsSysCarSeries { get; set; }
        public virtual DbSet<TsSystemSetting> TsSystemSettings { get; set; }
        public virtual DbSet<TsTechnicalSupportParameter> TsTechnicalSupportParameters { get; set; }
        public virtual DbSet<TsThirdSupport> TsThirdSupports { get; set; }
        public virtual DbSet<TsTransferRecord> TsTransferRecords { get; set; }
        public virtual DbSet<TsVDN> TsVDNs { get; set; }
        public virtual DbSet<UsAccount> UsAccounts { get; set; }
        public virtual DbSet<UsAccountCategory> UsAccountCategories { get; set; }
        public virtual DbSet<UsAccountCategoryRef> UsAccountCategoryRefs { get; set; }
        public virtual DbSet<UsAddress> UsAddresses { get; set; }
        public virtual DbSet<UsExtra> UsExtras { get; set; }
        public virtual DbSet<UsInvoice> UsInvoices { get; set; }
        public virtual DbSet<UsProfile> UsProfiles { get; set; }
        public virtual DbSet<UsReceiverAddress> UsReceiverAddresses { get; set; }
        public virtual DbSet<UsUser> UsUsers { get; set; }
        public virtual DbSet<UsVatinvoice> UsVatinvoices { get; set; }
        public virtual DbSet<VehAdditionalSOLimit> VehAdditionalSOLimits { get; set; }
        public virtual DbSet<VehBodyInfo> VehBodyInfoes { get; set; }
        public virtual DbSet<VehBolt> VehBolts { get; set; }
        public virtual DbSet<VehCarInventory> VehCarInventories { get; set; }
        public virtual DbSet<VehCarInventoryRecord> VehCarInventoryRecords { get; set; }
        public virtual DbSet<VehCarMoveIn> VehCarMoveIns { get; set; }
        public virtual DbSet<VehCarrierBill> VehCarrierBills { get; set; }
        public virtual DbSet<VehCarrierBillDeliveryOrder> VehCarrierBillDeliveryOrders { get; set; }
        public virtual DbSet<VehCarrierBillPrintedLog> VehCarrierBillPrintedLogs { get; set; }
        public virtual DbSet<VehCarrierSceneRepresent> VehCarrierSceneRepresents { get; set; }
        public virtual DbSet<VehCarTransfer> VehCarTransfers { get; set; }
        public virtual DbSet<VehCertificationMail> VehCertificationMails { get; set; }
        public virtual DbSet<VehChariot> VehChariots { get; set; }
        public virtual DbSet<VehChariotCarrierBill> VehChariotCarrierBills { get; set; }
        public virtual DbSet<VehChariotDriveWay> VehChariotDriveWays { get; set; }
        public virtual DbSet<VehCocApprovalNumber> VehCocApprovalNumbers { get; set; }
        public virtual DbSet<VehCocOptionInfo> VehCocOptionInfoes { get; set; }
        public virtual DbSet<VehCocOrderInfo> VehCocOrderInfoes { get; set; }
        public virtual DbSet<VehCocWheelPartNumber> VehCocWheelPartNumbers { get; set; }
        public virtual DbSet<VehDealerCarmoveIn> VehDealerCarmoveIns { get; set; }
        public virtual DbSet<VehDealerCarmoveOut> VehDealerCarmoveOuts { get; set; }
        public virtual DbSet<VehDealerCarStock> VehDealerCarStocks { get; set; }
        public virtual DbSet<VehDealerCarTransfer> VehDealerCarTransfers { get; set; }
        public virtual DbSet<VehDealerPlan> VehDealerPlans { get; set; }
        public virtual DbSet<VehDealerreturnVisit> VehDealerreturnVisits { get; set; }
        public virtual DbSet<VehDealerSalesForecast> VehDealerSalesForecasts { get; set; }
        public virtual DbSet<VehDealerSalesForecastSubmit> VehDealerSalesForecastSubmits { get; set; }
        public virtual DbSet<VehDealerWareHouse> VehDealerWareHouses { get; set; }
        public virtual DbSet<VehDeliveryOrder> VehDeliveryOrders { get; set; }
        public virtual DbSet<VehDeliveryOrderCar> VehDeliveryOrderCars { get; set; }
        public virtual DbSet<VehDriver> VehDrivers { get; set; }
        public virtual DbSet<VehDriveWay> VehDriveWays { get; set; }
        public virtual DbSet<VehDriveWayCar> VehDriveWayCars { get; set; }
        public virtual DbSet<VehFactoryData> VehFactoryDatas { get; set; }
        public virtual DbSet<VehicleDelivery> VehicleDeliveries { get; set; }
        public virtual DbSet<VehInsuranceSolution> VehInsuranceSolutions { get; set; }
        public virtual DbSet<VehInWarehousePolicy> VehInWarehousePolicies { get; set; }
        public virtual DbSet<VehLicense> VehLicenses { get; set; }
        public virtual DbSet<VehMatch> VehMatches { get; set; }
        public virtual DbSet<VehOemPlace> VehOemPlaces { get; set; }
        public virtual DbSet<VehOptionInfo> VehOptionInfoes { get; set; }
        public virtual DbSet<VehOrderInfo> VehOrderInfoes { get; set; }
        public virtual DbSet<VehPIE> VehPIEs { get; set; }
        public virtual DbSet<VehPO> VehPOes { get; set; }
        public virtual DbSet<VehPointInfo> VehPointInfoes { get; set; }
        public virtual DbSet<VehReceivePayment> VehReceivePayments { get; set; }
        public virtual DbSet<VehRepairInfo> VehRepairInfoes { get; set; }
        public virtual DbSet<VehReturnFactory> VehReturnFactories { get; set; }
        public virtual DbSet<VehRO> VehROes { get; set; }
        public virtual DbSet<VehSalesForecast> VehSalesForecasts { get; set; }
        public virtual DbSet<VehSalesForecastOptionalSum> VehSalesForecastOptionalSums { get; set; }
        public virtual DbSet<VehSalesForecastSubmit> VehSalesForecastSubmits { get; set; }
        public virtual DbSet<VehSalesForecastSubmitSplit> VehSalesForecastSubmitSplits { get; set; }
        public virtual DbSet<VehSalesForecastSum> VehSalesForecastSums { get; set; }
        public virtual DbSet<VehSalesForecastTrimSum> VehSalesForecastTrimSums { get; set; }
        public virtual DbSet<VehSalesForecastWithinAbroadSum> VehSalesForecastWithinAbroadSums { get; set; }
        public virtual DbSet<VehSalesPlan> VehSalesPlans { get; set; }
        public virtual DbSet<VehScrewJoint> VehScrewJoints { get; set; }
        public virtual DbSet<VehScrewJointResult> VehScrewJointResults { get; set; }
        public virtual DbSet<VehSerialInfo> VehSerialInfoes { get; set; }
        public virtual DbSet<VehShipmentArea> VehShipmentAreas { get; set; }
        public virtual DbSet<VehShipmentLine> VehShipmentLines { get; set; }
        public virtual DbSet<VehShipmentLineCarrier> VehShipmentLineCarriers { get; set; }
        public virtual DbSet<VehSO> VehSOes { get; set; }
        public virtual DbSet<VehStorageArea> VehStorageAreas { get; set; }
        public virtual DbSet<VehStoreLocation> VehStoreLocations { get; set; }
        public virtual DbSet<VehStoreLocationLockCondition> VehStoreLocationLockConditions { get; set; }
        public virtual DbSet<VehStoreLocationRemindRule> VehStoreLocationRemindRules { get; set; }
        public virtual DbSet<VehTransferOrder> VehTransferOrders { get; set; }
        public virtual DbSet<VehTransferOrderPO> VehTransferOrderPOes { get; set; }
        public virtual DbSet<VehWarehouse> VehWarehouses { get; set; }
        public virtual DbSet<VehWarehouseLockInfo> VehWarehouseLockInfoes { get; set; }
        public virtual DbSet<VehXPSCar> VehXPSCars { get; set; }
        public virtual DbSet<VehXPSCarFuel> VehXPSCarFuels { get; set; }
        public virtual DbSet<VehXPSCarObstacle> VehXPSCarObstacles { get; set; }
        public virtual DbSet<VehXPSCarOption> VehXPSCarOptions { get; set; }
        public virtual DbSet<VehXPSCarPml> VehXPSCarPmls { get; set; }
        public virtual DbSet<VehXPSCarWeight> VehXPSCarWeights { get; set; }
        public virtual DbSet<VsOemforecast> VsOemforecasts { get; set; }
        public virtual DbSet<ClmHostPartsReturnNotice_zhb180409> ClmHostPartsReturnNotice_zhb180409 { get; set; }
        public virtual DbSet<ClmWarranty_zhb180202> ClmWarranty_zhb180202 { get; set; }
        public virtual DbSet<FrRptDealerCost> FrRptDealerCosts { get; set; }
        public virtual DbSet<FrRptDealerNum> FrRptDealerNums { get; set; }
        public virtual DbSet<FrRptDealerOutVal> FrRptDealerOutVals { get; set; }
        public virtual DbSet<FrRptResponseData> FrRptResponseDatas { get; set; }
        public virtual DbSet<FrRptSluggishPiece> FrRptSluggishPieces { get; set; }
        public virtual DbSet<geely_retailorderBase_20180420> geely_retailorderBase_20180420 { get; set; }
        public virtual DbSet<geely_retailorderBase_20180420_1> geely_retailorderBase_20180420_1 { get; set; }
        public virtual DbSet<geely_wsorderBase_20180420> geely_wsorderBase_20180420 { get; set; }
        public virtual DbSet<geely_wsorderBase_20180420_1> geely_wsorderBase_20180420_1 { get; set; }
        public virtual DbSet<MdmLanguage> MdmLanguages { get; set; }
        public virtual DbSet<MdmUnit> MdmUnits { get; set; }
        public virtual DbSet<MdmVehiclePno12group> MdmVehiclePno12group { get; set; }
        public virtual DbSet<MkActivityPlanArea> MkActivityPlanAreas { get; set; }
        public virtual DbSet<MkActivityPlanDealer> MkActivityPlanDealers { get; set; }
        public virtual DbSet<MkActivityPlanVehicle> MkActivityPlanVehicles { get; set; }
        public virtual DbSet<MkAnalyExternData> MkAnalyExternDatas { get; set; }
        public virtual DbSet<MkAnalyExternDataLog> MkAnalyExternDataLogs { get; set; }
        public virtual DbSet<MkCarExhibitionReport> MkCarExhibitionReports { get; set; }
        public virtual DbSet<MkIndependentActivityAdReport> MkIndependentActivityAdReports { get; set; }
        public virtual DbSet<MkIndependentActivityReport> MkIndependentActivityReports { get; set; }
        public virtual DbSet<MkMonthlyActivityReport> MkMonthlyActivityReports { get; set; }
        public virtual DbSet<MkSpecialActivityAdReport> MkSpecialActivityAdReports { get; set; }
        public virtual DbSet<MkSpecialActivityReport> MkSpecialActivityReports { get; set; }
        public virtual DbSet<MkVerificationActivity> MkVerificationActivities { get; set; }
        public virtual DbSet<OrderStatusLog> OrderStatusLogs { get; set; }
        public virtual DbSet<Pvprivilege_bak> Pvprivilege_bak { get; set; }
        public virtual DbSet<PvPrivilegeMenu> PvPrivilegeMenus { get; set; }
        public virtual DbSet<PvRole_bak> PvRole_bak { get; set; }
        public virtual DbSet<PvRoleAccount_bak> PvRoleAccount_bak { get; set; }
        public virtual DbSet<PvRolePrivilege_bak> PvRolePrivilege_bak { get; set; }
        public virtual DbSet<RptGdGiftDistribution> RptGdGiftDistributions { get; set; }
        public virtual DbSet<RptGdGiftDistribution_bak> RptGdGiftDistribution_bak { get; set; }
        public virtual DbSet<RptGdPhotography> RptGdPhotographies { get; set; }
        public virtual DbSet<RptGdPhotography_bak> RptGdPhotography_bak { get; set; }
        public virtual DbSet<RptPRHotTopic_bak> RptPRHotTopic_bak { get; set; }
        public virtual DbSet<RptPRKeywordRank_bak> RptPRKeywordRank_bak { get; set; }
        public virtual DbSet<RptPRMediaRank_bak> RptPRMediaRank_bak { get; set; }
        public virtual DbSet<RptPRMediatypeRank_bak> RptPRMediatypeRank_bak { get; set; }
        public virtual DbSet<RptPRMediatypeTrend_bak> RptPRMediatypeTrend_bak { get; set; }
        public virtual DbSet<RptPRMonitorResult_bak> RptPRMonitorResult_bak { get; set; }
        public virtual DbSet<RptPRPosttypeRank_bak> RptPRPosttypeRank_bak { get; set; }
        public virtual DbSet<RptPRPublicOpinionTrend_bak> RptPRPublicOpinionTrend_bak { get; set; }
        public virtual DbSet<RptPRSensitiveContent_bak> RptPRSensitiveContent_bak { get; set; }
        public virtual DbSet<RptPRSensitiveTrend_bak> RptPRSensitiveTrend_bak { get; set; }
        public virtual DbSet<RptPRWordRank_bak> RptPRWordRank_bak { get; set; }
        public virtual DbSet<SaFactClue> SaFactClues { get; set; }
        public virtual DbSet<SpmOutputLog> SpmOutputLogs { get; set; }
        public virtual DbSet<SvcContact_zhb180308> SvcContact_zhb180308 { get; set; }
        public virtual DbSet<svcdealerlane_zhb171229> svcdealerlane_zhb171229 { get; set; }
        public virtual DbSet<svcdealerlane_zhb1712292> svcdealerlane_zhb1712292 { get; set; }
        public virtual DbSet<SvcServiceBpStepMain0228> SvcServiceBpStepMain0228 { get; set; }
        public virtual DbSet<SvcServiceBpStepSub0228> SvcServiceBpStepSub0228 { get; set; }
        public virtual DbSet<SvcServiceMutualCheckModel_zhb180125> SvcServiceMutualCheckModel_zhb180125 { get; set; }
        public virtual DbSet<SVCVEHICLEDELIVERY_zhb180124> SVCVEHICLEDELIVERY_zhb180124 { get; set; }
        public virtual DbSet<SysScheduleLog> SysScheduleLogs { get; set; }
        public virtual DbSet<Temp_Post> Temp_Post { get; set; }
        public virtual DbSet<temp_VehMatches> temp_VehMatches { get; set; }
        public virtual DbSet<UsAvatar> UsAvatars { get; set; }
        public virtual DbSet<VehRO_20180420> VehRO_20180420 { get; set; }
        public virtual DbSet<VehRO_20180420_1> VehRO_20180420_1 { get; set; }
        public virtual DbSet<VehSO_20180420> VehSO_20180420 { get; set; }
        public virtual DbSet<VehSO_20180420_1> VehSO_20180420_1 { get; set; }
        public virtual DbSet<VIN_Temp> VIN_Temp { get; set; }
        public virtual DbSet<AfterSalesManagerOperateView> AfterSalesManagerOperateViews { get; set; }
        public virtual DbSet<AppCheckListView> AppCheckListViews { get; set; }
        public virtual DbSet<AppRgmInspectView> AppRgmInspectViews { get; set; }
        public virtual DbSet<AreaPOReceiveView> AreaPOReceiveViews { get; set; }
        public virtual DbSet<AssignableBoxingPartsView> AssignableBoxingPartsViews { get; set; }
        public virtual DbSet<BoDetailExportView> BoDetailExportViews { get; set; }
        public virtual DbSet<BODetailView> BODetailViews { get; set; }
        public virtual DbSet<BOView> BOViews { get; set; }
        public virtual DbSet<CarTransferInfoView> CarTransferInfoViews { get; set; }
        public virtual DbSet<CeDriveRecordV> CeDriveRecordVs { get; set; }
        public virtual DbSet<CheckListView> CheckListViews { get; set; }
        public virtual DbSet<ClmAuditCostView> ClmAuditCostViews { get; set; }
        public virtual DbSet<ClmAuditDealerView> ClmAuditDealerViews { get; set; }
        public virtual DbSet<ClmAuditExistView> ClmAuditExistViews { get; set; }
        public virtual DbSet<ClmAuditInspectResultView> ClmAuditInspectResultViews { get; set; }
        public virtual DbSet<ClmAuditInspectView> ClmAuditInspectViews { get; set; }
        public virtual DbSet<ClmAuditPlanFilterWarrantyView> ClmAuditPlanFilterWarrantyViews { get; set; }
        public virtual DbSet<ClmAuditPlanInspectView> ClmAuditPlanInspectViews { get; set; }
        public virtual DbSet<ClmAuditPlanView> ClmAuditPlanViews { get; set; }
        public virtual DbSet<ClmAuditPlanWarrantyView> ClmAuditPlanWarrantyViews { get; set; }
        public virtual DbSet<ClmAuditReportIssueWarrantyView> ClmAuditReportIssueWarrantyViews { get; set; }
        public virtual DbSet<ClmAuditReportView> ClmAuditReportViews { get; set; }
        public virtual DbSet<ClmAuditReportWarrantyDetailView> ClmAuditReportWarrantyDetailViews { get; set; }
        public virtual DbSet<ClmAuditScrapFromWarrantyView> ClmAuditScrapFromWarrantyViews { get; set; }
        public virtual DbSet<ClmAuditScrapItemView> ClmAuditScrapItemViews { get; set; }
        public virtual DbSet<ClmAuditScrapView> ClmAuditScrapViews { get; set; }
        public virtual DbSet<ClmAuditSpecialFilterView> ClmAuditSpecialFilterViews { get; set; }
        public virtual DbSet<ClmAuditWarrantyView> ClmAuditWarrantyViews { get; set; }
        public virtual DbSet<ClmAuxiliaryBillView> ClmAuxiliaryBillViews { get; set; }
        public virtual DbSet<ClmAverageWarrantyCostView> ClmAverageWarrantyCostViews { get; set; }
        public virtual DbSet<ClmBudgetDetailView> ClmBudgetDetailViews { get; set; }
        public virtual DbSet<ClmBudgetView> ClmBudgetViews { get; set; }
        public virtual DbSet<ClmCampaignComplishView> ClmCampaignComplishViews { get; set; }
        public virtual DbSet<ClmCampaignPublishView> ClmCampaignPublishViews { get; set; }
        public virtual DbSet<ClmCampaignRepairPackageLaborPartView> ClmCampaignRepairPackageLaborPartViews { get; set; }
        public virtual DbSet<ClmCampaignRepairPackageLaborPartWithPriceView> ClmCampaignRepairPackageLaborPartWithPriceViews { get; set; }
        public virtual DbSet<ClmCampaignStatisticsView> ClmCampaignStatisticsViews { get; set; }
        public virtual DbSet<ClmCampaignView> ClmCampaignViews { get; set; }
        public virtual DbSet<ClmCampaignVINView> ClmCampaignVINViews { get; set; }
        public virtual DbSet<ClmCampaignWithRepairPackageView> ClmCampaignWithRepairPackageViews { get; set; }
        public virtual DbSet<ClmCCView> ClmCCViews { get; set; }
        public virtual DbSet<ClmCreatePayDetailsView> ClmCreatePayDetailsViews { get; set; }
        public virtual DbSet<ClmDealerAllOldPartsView> ClmDealerAllOldPartsViews { get; set; }
        public virtual DbSet<ClmDealerOldPartsView> ClmDealerOldPartsViews { get; set; }
        public virtual DbSet<ClmDealerRebateView> ClmDealerRebateViews { get; set; }
        public virtual DbSet<ClmDealerReturnView> ClmDealerReturnViews { get; set; }
        public virtual DbSet<ClmDealerWaitAuditView> ClmDealerWaitAuditViews { get; set; }
        public virtual DbSet<ClmHighCostAndHighFrequencyView> ClmHighCostAndHighFrequencyViews { get; set; }
        public virtual DbSet<ClmHostOutStockDetailView> ClmHostOutStockDetailViews { get; set; }
        public virtual DbSet<ClmHostOutStockView> ClmHostOutStockViews { get; set; }
        public virtual DbSet<ClmInvoiceNoticeView> ClmInvoiceNoticeViews { get; set; }
        public virtual DbSet<ClmOldPartsOverallView> ClmOldPartsOverallViews { get; set; }
        public virtual DbSet<ClmOldPartStockScrapDetailView> ClmOldPartStockScrapDetailViews { get; set; }
        public virtual DbSet<ClmOldPartStockView> ClmOldPartStockViews { get; set; }
        public virtual DbSet<ClmPartAbnormalDebitView> ClmPartAbnormalDebitViews { get; set; }
        public virtual DbSet<ClmPartCostView> ClmPartCostViews { get; set; }
        public virtual DbSet<ClmPartExtDebitView> ClmPartExtDebitViews { get; set; }
        public virtual DbSet<ClmPartExtDebitWithWarrantyView> ClmPartExtDebitWithWarrantyViews { get; set; }
        public virtual DbSet<ClmPartsHandlingChargeConfigurationView> ClmPartsHandlingChargeConfigurationViews { get; set; }
        public virtual DbSet<ClmPartsHandlingChargeGroupView> ClmPartsHandlingChargeGroupViews { get; set; }
        public virtual DbSet<ClmPartsReturnBatchDetailView> ClmPartsReturnBatchDetailViews { get; set; }
        public virtual DbSet<ClmPartsReturnBatchView> ClmPartsReturnBatchViews { get; set; }
        public virtual DbSet<ClmPartsReturnBillView> ClmPartsReturnBillViews { get; set; }
        public virtual DbSet<ClmPartsScrapDetailView> ClmPartsScrapDetailViews { get; set; }
        public virtual DbSet<ClmPartsScrapsView> ClmPartsScrapsViews { get; set; }
        public virtual DbSet<ClmPartsScrapView> ClmPartsScrapViews { get; set; }
        public virtual DbSet<ClmPayToDealerListView> ClmPayToDealerListViews { get; set; }
        public virtual DbSet<ClmPayToDealerView> ClmPayToDealerViews { get; set; }
        public virtual DbSet<ClmPayToDealerWithTotalView> ClmPayToDealerWithTotalViews { get; set; }
        public virtual DbSet<ClmPreAuthorizationPartGroupView> ClmPreAuthorizationPartGroupViews { get; set; }
        public virtual DbSet<ClmPreAuthorizationPartSettingView> ClmPreAuthorizationPartSettingViews { get; set; }
        public virtual DbSet<ClmPreAuthorizationPriceGroupView> ClmPreAuthorizationPriceGroupViews { get; set; }
        public virtual DbSet<ClmPreAuthorizationPriceSettingView> ClmPreAuthorizationPriceSettingViews { get; set; }
        public virtual DbSet<ClmPreAuthorizationWithPartView> ClmPreAuthorizationWithPartViews { get; set; }
        public virtual DbSet<ClmPrepRecoveryDetailView> ClmPrepRecoveryDetailViews { get; set; }
        public virtual DbSet<ClmReceivingInfoView> ClmReceivingInfoViews { get; set; }
        public virtual DbSet<ClmRecoveryChargeDetailView> ClmRecoveryChargeDetailViews { get; set; }
        public virtual DbSet<ClmRecoverySetupView> ClmRecoverySetupViews { get; set; }
        public virtual DbSet<ClmRetuenBillView> ClmRetuenBillViews { get; set; }
        public virtual DbSet<ClmReturnBillView> ClmReturnBillViews { get; set; }
        public virtual DbSet<ClmReturnInfoView> ClmReturnInfoViews { get; set; }
        public virtual DbSet<ClmReverseDebitView> ClmReverseDebitViews { get; set; }
        public virtual DbSet<ClmSelfAuthorizationGroupView> ClmSelfAuthorizationGroupViews { get; set; }
        public virtual DbSet<ClmSelfAuthorizationView> ClmSelfAuthorizationViews { get; set; }
        public virtual DbSet<ClmShipmentLineView> ClmShipmentLineViews { get; set; }
        public virtual DbSet<ClmSpecialVehicleSettingView> ClmSpecialVehicleSettingViews { get; set; }
        public virtual DbSet<ClmSpecialWarrantyPeriodSettingView> ClmSpecialWarrantyPeriodSettingViews { get; set; }
        public virtual DbSet<ClmSupplierRecoverDetailForPayView> ClmSupplierRecoverDetailForPayViews { get; set; }
        public virtual DbSet<ClmSupplierRecoveryDetailView> ClmSupplierRecoveryDetailViews { get; set; }
        public virtual DbSet<ClmSupplierRecoveryDetailViewAll> ClmSupplierRecoveryDetailViewAlls { get; set; }
        public virtual DbSet<ClmSupplierRecoveryDetailViewBySupplier> ClmSupplierRecoveryDetailViewBySuppliers { get; set; }
        public virtual DbSet<ClmSupplierRecoveryView> ClmSupplierRecoveryViews { get; set; }
        public virtual DbSet<ClmThreeGuaranteesConfigView> ClmThreeGuaranteesConfigViews { get; set; }
        public virtual DbSet<ClmThreeGuaranteesPartConfigView> ClmThreeGuaranteesPartConfigViews { get; set; }
        public virtual DbSet<ClmUnionOldPartsView> ClmUnionOldPartsViews { get; set; }
        public virtual DbSet<ClmVINCampaignsView> ClmVINCampaignsViews { get; set; }
        public virtual DbSet<ClmWaitReturnOldPartsView> ClmWaitReturnOldPartsViews { get; set; }
        public virtual DbSet<ClmWaitReturnPartsWithCarrierView> ClmWaitReturnPartsWithCarrierViews { get; set; }
        public virtual DbSet<ClmWarrantyAndPartsView> ClmWarrantyAndPartsViews { get; set; }
        public virtual DbSet<ClmWarrantyApplyView> ClmWarrantyApplyViews { get; set; }
        public virtual DbSet<ClmWarrantyCostDetailView> ClmWarrantyCostDetailViews { get; set; }
        public virtual DbSet<ClmWarrantyCscListView> ClmWarrantyCscListViews { get; set; }
        public virtual DbSet<ClmWarrantyExtensionConfigurationView> ClmWarrantyExtensionConfigurationViews { get; set; }
        public virtual DbSet<ClmWarrantyForSupplierRecoveryView> ClmWarrantyForSupplierRecoveryViews { get; set; }
        public virtual DbSet<ClmWarrantyInspectView> ClmWarrantyInspectViews { get; set; }
        public virtual DbSet<ClmWarrantyManHourPriceSettingGroupView> ClmWarrantyManHourPriceSettingGroupViews { get; set; }
        public virtual DbSet<ClmWarrantyManHourPriceSettingView> ClmWarrantyManHourPriceSettingViews { get; set; }
        public virtual DbSet<ClmWarrantyPartsPolicyView> ClmWarrantyPartsPolicyViews { get; set; }
        public virtual DbSet<ClmWarrantyPartView> ClmWarrantyPartViews { get; set; }
        public virtual DbSet<ClmWarrantyPeriodSettingView> ClmWarrantyPeriodSettingViews { get; set; }
        public virtual DbSet<ClmWarrantyPeriodSettingWithCountryCodeView> ClmWarrantyPeriodSettingWithCountryCodeViews { get; set; }
        public virtual DbSet<ClmWarrantyPolicyGeneralView> ClmWarrantyPolicyGeneralViews { get; set; }
        public virtual DbSet<ClmWarrantyPrintView> ClmWarrantyPrintViews { get; set; }
        public virtual DbSet<ClmWarrantyRemarkView> ClmWarrantyRemarkViews { get; set; }
        public virtual DbSet<ClmWarrantySupplierView> ClmWarrantySupplierViews { get; set; }
        public virtual DbSet<ClmWarrantyView> ClmWarrantyViews { get; set; }
        public virtual DbSet<ClmWearTearPartsConfigurationView> ClmWearTearPartsConfigurationViews { get; set; }
        public virtual DbSet<CrCaseAllV> CrCaseAllVs { get; set; }
        public virtual DbSet<CrCaseRgmImprovementItemView> CrCaseRgmImprovementItemViews { get; set; }
        public virtual DbSet<CrCaseTaskView> CrCaseTaskViews { get; set; }
        public virtual DbSet<CrCaseV> CrCaseVs { get; set; }
        public virtual DbSet<CrCaseView> CrCaseViews { get; set; }
        public virtual DbSet<CrIncidentV> CrIncidentVs { get; set; }
        public virtual DbSet<CrIncidentView> CrIncidentViews { get; set; }
        public virtual DbSet<CustomerArchiveView> CustomerArchiveViews { get; set; }
        public virtual DbSet<DeliveryCarView> DeliveryCarViews { get; set; }
        public virtual DbSet<DeliveryOrderInfoView> DeliveryOrderInfoViews { get; set; }
        public virtual DbSet<DetailDisassemblyMdmPartsView> DetailDisassemblyMdmPartsViews { get; set; }
        public virtual DbSet<DiffRgmInspectView> DiffRgmInspectViews { get; set; }
        public virtual DbSet<DisassemblyMdmPartsBomView> DisassemblyMdmPartsBomViews { get; set; }
        public virtual DbSet<DisassemblyMdmPartsView> DisassemblyMdmPartsViews { get; set; }
        public virtual DbSet<DismantlePartsDetailsView> DismantlePartsDetailsViews { get; set; }
        public virtual DbSet<DspDealerEmployeePostView> DspDealerEmployeePostViews { get; set; }
        public virtual DbSet<DspDealerEmployeeRoleView> DspDealerEmployeeRoleViews { get; set; }
        public virtual DbSet<DspDealerEmployeeView> DspDealerEmployeeViews { get; set; }
        public virtual DbSet<DspOEMOutOrderDetailView> DspOEMOutOrderDetailViews { get; set; }
        public virtual DbSet<DspOEMOutOrderSumView> DspOEMOutOrderSumViews { get; set; }
        public virtual DbSet<DspOEMOutOrderView> DspOEMOutOrderViews { get; set; }
        public virtual DbSet<DspOutPurchaseExportView> DspOutPurchaseExportViews { get; set; }
        public virtual DbSet<DspOutPurchaseView> DspOutPurchaseViews { get; set; }
        public virtual DbSet<DspPurchaseAppView> DspPurchaseAppViews { get; set; }
        public virtual DbSet<DspPurchasePriceView> DspPurchasePriceViews { get; set; }
        public virtual DbSet<DspReturnOrderView> DspReturnOrderViews { get; set; }
        public virtual DbSet<DspSparePart> DspSpareParts { get; set; }
        public virtual DbSet<DspSparePartView> DspSparePartViews { get; set; }
        public virtual DbSet<DspTransferExportView> DspTransferExportViews { get; set; }
        public virtual DbSet<DspTransferView> DspTransferViews { get; set; }
        public virtual DbSet<DspWrongExportDetailView> DspWrongExportDetailViews { get; set; }
        public virtual DbSet<DspWrongView> DspWrongViews { get; set; }
        public virtual DbSet<FaultRankingView> FaultRankingViews { get; set; }
        public virtual DbSet<GreenOrderView> GreenOrderViews { get; set; }
        public virtual DbSet<ImportTaskTypeView> ImportTaskTypeViews { get; set; }
        public virtual DbSet<InspectPlanApprovelView> InspectPlanApprovelViews { get; set; }
        public virtual DbSet<MainPartsSubPartView> MainPartsSubPartViews { get; set; }
        public virtual DbSet<MdmAllVINView> MdmAllVINViews { get; set; }
        public virtual DbSet<MdmAreaView> MdmAreaViews { get; set; }
        public virtual DbSet<MdmCaseCatlogV> MdmCaseCatlogVs { get; set; }
        public virtual DbSet<MdmCaseClass1V> MdmCaseClass1V { get; set; }
        public virtual DbSet<MdmCaseClass2V> MdmCaseClass2V { get; set; }
        public virtual DbSet<MdmCaseClass3V> MdmCaseClass3V { get; set; }
        public virtual DbSet<MdmCaseClass4V> MdmCaseClass4V { get; set; }
        public virtual DbSet<MdmCaseLevel1V> MdmCaseLevel1V { get; set; }
        public virtual DbSet<MdmCaseLevel2V> MdmCaseLevel2V { get; set; }
        public virtual DbSet<MdmCaseLevel3V> MdmCaseLevel3V { get; set; }
        public virtual DbSet<MdmCaseLevel4V> MdmCaseLevel4V { get; set; }
        public virtual DbSet<MdmCityView> MdmCityViews { get; set; }
        public virtual DbSet<MdmCityWithAreaIdView> MdmCityWithAreaIdViews { get; set; }
        public virtual DbSet<MdmConfigView> MdmConfigViews { get; set; }
        public virtual DbSet<MdmContactV> MdmContactVs { get; set; }
        public virtual DbSet<MdmContactView> MdmContactViews { get; set; }
        public virtual DbSet<MdmContactWithSupplierView> MdmContactWithSupplierViews { get; set; }
        public virtual DbSet<MdmCountryFromAreaView> MdmCountryFromAreaViews { get; set; }
        public virtual DbSet<MdmCountryView> MdmCountryViews { get; set; }
        public virtual DbSet<MdmDealerAcceptingBankInfoView> MdmDealerAcceptingBankInfoViews { get; set; }
        public virtual DbSet<MdmDealerAllV> MdmDealerAllVs { get; set; }
        public virtual DbSet<MdmDealerAreaView> MdmDealerAreaViews { get; set; }
        public virtual DbSet<MdmDealerBelongView> MdmDealerBelongViews { get; set; }
        public virtual DbSet<MdmDealerExpressConfigureView> MdmDealerExpressConfigureViews { get; set; }
        public virtual DbSet<MdmDealerForecastPeriodSettingView> MdmDealerForecastPeriodSettingViews { get; set; }
        public virtual DbSet<MdmDealerNotInCustomerGroupView> MdmDealerNotInCustomerGroupViews { get; set; }
        public virtual DbSet<MdmDealerV> MdmDealerVs { get; set; }
        public virtual DbSet<MdmDealerView> MdmDealerViews { get; set; }
        public virtual DbSet<MdmDealerView_Fitch> MdmDealerView_Fitch { get; set; }
        public virtual DbSet<MdmDealerWithAreaView> MdmDealerWithAreaViews { get; set; }
        public virtual DbSet<MdmDistrictView> MdmDistrictViews { get; set; }
        public virtual DbSet<MdmPartNeedRemindInSupplierQuotaView> MdmPartNeedRemindInSupplierQuotaViews { get; set; }
        public virtual DbSet<MdmPartsForPartECommerceView> MdmPartsForPartECommerceViews { get; set; }
        public virtual DbSet<MdmPartsHasContractView> MdmPartsHasContractViews { get; set; }
        public virtual DbSet<MdmPartWithSupplierView> MdmPartWithSupplierViews { get; set; }
        public virtual DbSet<MdmPersonVehicleRelationshipView> MdmPersonVehicleRelationshipViews { get; set; }
        public virtual DbSet<MdmProvinceListView> MdmProvinceListViews { get; set; }
        public virtual DbSet<MdmProvinceView> MdmProvinceViews { get; set; }
        public virtual DbSet<MdmProvinceWithAreaView> MdmProvinceWithAreaViews { get; set; }
        public virtual DbSet<MdmServicePartsView> MdmServicePartsViews { get; set; }
        public virtual DbSet<MdmSmallAreaInfoView> MdmSmallAreaInfoViews { get; set; }
        public virtual DbSet<MdmSmallAreaView> MdmSmallAreaViews { get; set; }
        public virtual DbSet<MdmStandardHourWithDealerPriceView> MdmStandardHourWithDealerPriceViews { get; set; }
        public virtual DbSet<MdmSupplierAvailableContractView> MdmSupplierAvailableContractViews { get; set; }
        public virtual DbSet<MdmSupplierContractView> MdmSupplierContractViews { get; set; }
        public virtual DbSet<MdmSupplierDateView> MdmSupplierDateViews { get; set; }
        public virtual DbSet<MdmSupplierInfoView> MdmSupplierInfoViews { get; set; }
        public virtual DbSet<MdmSupplierPurchasePriceView> MdmSupplierPurchasePriceViews { get; set; }
        public virtual DbSet<MdmSupplierQuotaDetailView> MdmSupplierQuotaDetailViews { get; set; }
        public virtual DbSet<MdmSupplierQuotaView> MdmSupplierQuotaViews { get; set; }
        public virtual DbSet<MdmSupplierWithContractInfoView> MdmSupplierWithContractInfoViews { get; set; }
        public virtual DbSet<MdmVehicleColorV> MdmVehicleColorVs { get; set; }
        public virtual DbSet<MdmVehicleDocumentV> MdmVehicleDocumentVs { get; set; }
        public virtual DbSet<MdmVehicleDocumentView> MdmVehicleDocumentViews { get; set; }
        public virtual DbSet<MdmVehicleMaterialV> MdmVehicleMaterialVs { get; set; }
        public virtual DbSet<MdmVehicleMaterialView> MdmVehicleMaterialViews { get; set; }
        public virtual DbSet<MdmVehicleMaterialViewForCSP> MdmVehicleMaterialViewForCSPs { get; set; }
        public virtual DbSet<MdmVehicleProfileInfoView> MdmVehicleProfileInfoViews { get; set; }
        public virtual DbSet<MdmVehicleProfileView> MdmVehicleProfileViews { get; set; }
        public virtual DbSet<MdmVehicleStyleV> MdmVehicleStyleVs { get; set; }
        public virtual DbSet<MdmVehicleTypeV> MdmVehicleTypeVs { get; set; }
        public virtual DbSet<MdmVinVehicleTypeView> MdmVinVehicleTypeViews { get; set; }
        public virtual DbSet<NoDisassemblyMdmPartsView> NoDisassemblyMdmPartsViews { get; set; }
        public virtual DbSet<NoGenerationDeliveryView> NoGenerationDeliveryViews { get; set; }
        public virtual DbSet<NoMatchPOView> NoMatchPOViews { get; set; }
        public virtual DbSet<NoMatchPreOrderView> NoMatchPreOrderViews { get; set; }
        public virtual DbSet<NoMatchView> NoMatchViews { get; set; }
        public virtual DbSet<NotMatchingLockSOView> NotMatchingLockSOViews { get; set; }
        public virtual DbSet<POView> POViews { get; set; }
        public virtual DbSet<ReceiptgoodsTimelyRateOrderView> ReceiptgoodsTimelyRateOrderViews { get; set; }
        public virtual DbSet<ReceiptgoodsTimelyRatePartView> ReceiptgoodsTimelyRatePartViews { get; set; }
        public virtual DbSet<RepackagePartPrintView> RepackagePartPrintViews { get; set; }
        public virtual DbSet<RepairInfoInfoView> RepairInfoInfoViews { get; set; }
        public virtual DbSet<ReportingProfileView> ReportingProfileViews { get; set; }
        public virtual DbSet<ReturnFactoryInfoView> ReturnFactoryInfoViews { get; set; }
        public virtual DbSet<RgmAddImprovementItemStepOneView> RgmAddImprovementItemStepOneViews { get; set; }
        public virtual DbSet<RgmAddImprovementItemStepThreeView> RgmAddImprovementItemStepThreeViews { get; set; }
        public virtual DbSet<RgmAddImprovementItemStepTwoView> RgmAddImprovementItemStepTwoViews { get; set; }
        public virtual DbSet<RgmDealerInspectTaskView> RgmDealerInspectTaskViews { get; set; }
        public virtual DbSet<RgmDealerUserView> RgmDealerUserViews { get; set; }
        public virtual DbSet<RgmGetDealerPostView> RgmGetDealerPostViews { get; set; }
        public virtual DbSet<RgmGetImprovementMeasureView> RgmGetImprovementMeasureViews { get; set; }
        public virtual DbSet<RgmGetImprovementTapsView> RgmGetImprovementTapsViews { get; set; }
        public virtual DbSet<RgmGetPostsEmpNameView> RgmGetPostsEmpNameViews { get; set; }
        public virtual DbSet<RgmImprovementApproveItemsView> RgmImprovementApproveItemsViews { get; set; }
        public virtual DbSet<RgmImprovementDetailView> RgmImprovementDetailViews { get; set; }
        public virtual DbSet<RgmImprovementItemsView> RgmImprovementItemsViews { get; set; }
        public virtual DbSet<RgmImprovementItemView> RgmImprovementItemViews { get; set; }
        public virtual DbSet<RgmImprovementView> RgmImprovementViews { get; set; }
        public virtual DbSet<RgmImprovmentTempView> RgmImprovmentTempViews { get; set; }
        public virtual DbSet<RgmInspectChecklistView> RgmInspectChecklistViews { get; set; }
        public virtual DbSet<RgmInspectDegreeView> RgmInspectDegreeViews { get; set; }
        public virtual DbSet<RgmInspectPlanApprovalView> RgmInspectPlanApprovalViews { get; set; }
        public virtual DbSet<RgmInspectPlanCalendarView> RgmInspectPlanCalendarViews { get; set; }
        public virtual DbSet<RgmInspectPlanView> RgmInspectPlanViews { get; set; }
        public virtual DbSet<RgmInspectTaskView> RgmInspectTaskViews { get; set; }
        public virtual DbSet<RgmInspectTaskWithDealerView> RgmInspectTaskWithDealerViews { get; set; }
        public virtual DbSet<RgmInspectView> RgmInspectViews { get; set; }
        public virtual DbSet<RgmInspectWithTaskView> RgmInspectWithTaskViews { get; set; }
        public virtual DbSet<RgmMdmDealerAreaView> RgmMdmDealerAreaViews { get; set; }
        public virtual DbSet<RgmPickFromImprovementItemBaseView> RgmPickFromImprovementItemBaseViews { get; set; }
        public virtual DbSet<RgmPlanListView> RgmPlanListViews { get; set; }
        public virtual DbSet<RgmReport1View> RgmReport1View { get; set; }
        public virtual DbSet<RgmReportRadarView> RgmReportRadarViews { get; set; }
        public virtual DbSet<RgmSysAreaWithDealerView> RgmSysAreaWithDealerViews { get; set; }
        public virtual DbSet<RgmSysAreaWithSupervision> RgmSysAreaWithSupervisions { get; set; }
        public virtual DbSet<RgmTaskTypeView> RgmTaskTypeViews { get; set; }
        public virtual DbSet<RgmThreeGuaranteesView> RgmThreeGuaranteesViews { get; set; }
        public virtual DbSet<RgmTimeSheetView> RgmTimeSheetViews { get; set; }
        public virtual DbSet<SalesForecastunionView> SalesForecastunionViews { get; set; }
        public virtual DbSet<ShippingOrderSOView> ShippingOrderSOViews { get; set; }
        public virtual DbSet<SOView> SOViews { get; set; }
        public virtual DbSet<SpmAnnouncementView> SpmAnnouncementViews { get; set; }
        public virtual DbSet<SpmAssemblePartBomView> SpmAssemblePartBomViews { get; set; }
        public virtual DbSet<SpmAssembleView> SpmAssembleViews { get; set; }
        public virtual DbSet<SpmBoPartDetailTrackView> SpmBoPartDetailTrackViews { get; set; }
        public virtual DbSet<SpmBorrowEndPrintView> SpmBorrowEndPrintViews { get; set; }
        public virtual DbSet<SpmBorrowListView> SpmBorrowListViews { get; set; }
        public virtual DbSet<SpmBorrowStocksView> SpmBorrowStocksViews { get; set; }
        public virtual DbSet<SpmBoxCarrierView> SpmBoxCarrierViews { get; set; }
        public virtual DbSet<SpmBoxCaseDView> SpmBoxCaseDViews { get; set; }
        public virtual DbSet<SpmBoxCaseView> SpmBoxCaseViews { get; set; }
        public virtual DbSet<SpmBoxDetailRView> SpmBoxDetailRViews { get; set; }
        public virtual DbSet<SpmBoxDetailView> SpmBoxDetailViews { get; set; }
        public virtual DbSet<SpmBoxOutputPrintView> SpmBoxOutputPrintViews { get; set; }
        public virtual DbSet<SpmBoxPrintView> SpmBoxPrintViews { get; set; }
        public virtual DbSet<SpmBoxRegionDealerRelView> SpmBoxRegionDealerRelViews { get; set; }
        public virtual DbSet<SpmBoxRegionView> SpmBoxRegionViews { get; set; }
        public virtual DbSet<SpmBoxUnExpressNoView> SpmBoxUnExpressNoViews { get; set; }
        public virtual DbSet<SpmBoxView> SpmBoxViews { get; set; }
        public virtual DbSet<SpmCacheLocationView> SpmCacheLocationViews { get; set; }
        public virtual DbSet<SpmClaimDetailView> SpmClaimDetailViews { get; set; }
        public virtual DbSet<SpmClaimStocksView> SpmClaimStocksViews { get; set; }
        public virtual DbSet<SpmClaimTransView> SpmClaimTransViews { get; set; }
        public virtual DbSet<SpmClosePartsView> SpmClosePartsViews { get; set; }
        public virtual DbSet<SpmCompanyView> SpmCompanyViews { get; set; }
        public virtual DbSet<SpmCurrentStockView> SpmCurrentStockViews { get; set; }
        public virtual DbSet<SpmCustomerGroupDealerView> SpmCustomerGroupDealerViews { get; set; }
        public virtual DbSet<SpmCustomerGroupView> SpmCustomerGroupViews { get; set; }
        public virtual DbSet<SpmCYDOEMView> SpmCYDOEMViews { get; set; }
        public virtual DbSet<SpmDAreaView> SpmDAreaViews { get; set; }
        public virtual DbSet<SpmDealerForecastPartView> SpmDealerForecastPartViews { get; set; }
        public virtual DbSet<SpmDealerPartSalesRepotrBasicPart> SpmDealerPartSalesRepotrBasicParts { get; set; }
        public virtual DbSet<SpmDelaerPurchaseOrderInfo> SpmDelaerPurchaseOrderInfoes { get; set; }
        public virtual DbSet<SpmDelaerPurchaseOrderInfoView> SpmDelaerPurchaseOrderInfoViews { get; set; }
        public virtual DbSet<SpmDependentCustomerGroupView> SpmDependentCustomerGroupViews { get; set; }
        public virtual DbSet<SpmDetailAssembleMdmPartsView> SpmDetailAssembleMdmPartsViews { get; set; }
        public virtual DbSet<SpmDetailDisassemblyMdmPartsView> SpmDetailDisassemblyMdmPartsViews { get; set; }
        public virtual DbSet<SpmDetailRemovePieceMdmPartsView> SpmDetailRemovePieceMdmPartsViews { get; set; }
        public virtual DbSet<SpmDiffanalyseReportsDetailView> SpmDiffanalyseReportsDetailViews { get; set; }
        public virtual DbSet<SpmDiffanalyseReportsView> SpmDiffanalyseReportsViews { get; set; }
        public virtual DbSet<SpmDisStocksView> SpmDisStocksViews { get; set; }
        public virtual DbSet<SpmDPurchaseOrderCodeView> SpmDPurchaseOrderCodeViews { get; set; }
        public virtual DbSet<SpmDPurchaseOrderDetailView> SpmDPurchaseOrderDetailViews { get; set; }
        public virtual DbSet<SpmDPurchaseOrderView> SpmDPurchaseOrderViews { get; set; }
        public virtual DbSet<SpmEntrustOrderBomView> SpmEntrustOrderBomViews { get; set; }
        public virtual DbSet<SpmEntrustOrderDetailView> SpmEntrustOrderDetailViews { get; set; }
        public virtual DbSet<SpmEntrustOrderGenView> SpmEntrustOrderGenViews { get; set; }
        public virtual DbSet<SpmEntrustOrdermView> SpmEntrustOrdermViews { get; set; }
        public virtual DbSet<SpmEntrustOrderPrintView> SpmEntrustOrderPrintViews { get; set; }
        public virtual DbSet<SpmEntrustOrderView> SpmEntrustOrderViews { get; set; }
        public virtual DbSet<SpmEntrustReceiveView> SpmEntrustReceiveViews { get; set; }
        public virtual DbSet<SpmExportPackingOrder> SpmExportPackingOrders { get; set; }
        public virtual DbSet<SpmFrozenListView> SpmFrozenListViews { get; set; }
        public virtual DbSet<SpmFrozenStocksRView> SpmFrozenStocksRViews { get; set; }
        public virtual DbSet<SpmFrozenStocksView> SpmFrozenStocksViews { get; set; }
        public virtual DbSet<SpmGetFullPartPriceView> SpmGetFullPartPriceViews { get; set; }
        public virtual DbSet<SpmInternalMaterialDetailView> SpmInternalMaterialDetailViews { get; set; }
        public virtual DbSet<SpmInternalMaterialOutPrintView> SpmInternalMaterialOutPrintViews { get; set; }
        public virtual DbSet<SpmInternalMaterialPartView> SpmInternalMaterialPartViews { get; set; }
        public virtual DbSet<SpmInternalMaterialPrintView> SpmInternalMaterialPrintViews { get; set; }
        public virtual DbSet<SpmInternalMaterialTransView> SpmInternalMaterialTransViews { get; set; }
        public virtual DbSet<SpmLimitationLogisticsView> SpmLimitationLogisticsViews { get; set; }
        public virtual DbSet<SpmLocationFreeView> SpmLocationFreeViews { get; set; }
        public virtual DbSet<SpmLocationStorageTypeView> SpmLocationStorageTypeViews { get; set; }
        public virtual DbSet<SpmLocationView> SpmLocationViews { get; set; }
        public virtual DbSet<SpmLocationVSOView> SpmLocationVSOViews { get; set; }
        public virtual DbSet<SpmMaterialOrderGenView> SpmMaterialOrderGenViews { get; set; }
        public virtual DbSet<SpmMaterialOrderView> SpmMaterialOrderViews { get; set; }
        public virtual DbSet<SpmMaterialReceiveNoticeDetailView> SpmMaterialReceiveNoticeDetailViews { get; set; }
        public virtual DbSet<SpmMaterialReceiveNoticeView> SpmMaterialReceiveNoticeViews { get; set; }
        public virtual DbSet<SpmMaterialReceiveView> SpmMaterialReceiveViews { get; set; }
        public virtual DbSet<SpmMoveWmLocView> SpmMoveWmLocViews { get; set; }
        public virtual DbSet<SpmMoveWmTransView> SpmMoveWmTransViews { get; set; }
        public virtual DbSet<SpmNotificationDataView> SpmNotificationDataViews { get; set; }
        public virtual DbSet<SpmNotificationHeadView> SpmNotificationHeadViews { get; set; }
        public virtual DbSet<SpmNotificationLossView> SpmNotificationLossViews { get; set; }
        public virtual DbSet<SpmNotificationStocksView> SpmNotificationStocksViews { get; set; }
        public virtual DbSet<SpmNotificationTaskView> SpmNotificationTaskViews { get; set; }
        public virtual DbSet<SpmOemOutOrderDetailView> SpmOemOutOrderDetailViews { get; set; }
        public virtual DbSet<SpmOemOutOrderView> SpmOemOutOrderViews { get; set; }
        public virtual DbSet<SpmOemOutputPrintPartsView> SpmOemOutputPrintPartsViews { get; set; }
        public virtual DbSet<SpmOemOutputPrintView> SpmOemOutputPrintViews { get; set; }
        public virtual DbSet<SpmOrderAReceiveView> SpmOrderAReceiveViews { get; set; }
        public virtual DbSet<SpmOrderBReceiveView> SpmOrderBReceiveViews { get; set; }
        public virtual DbSet<SpmOrderCalendarView> SpmOrderCalendarViews { get; set; }
        public virtual DbSet<SpmOrderCalendarWithWarehouseView> SpmOrderCalendarWithWarehouseViews { get; set; }
        public virtual DbSet<SpmOrderSwitchView> SpmOrderSwitchViews { get; set; }
        public virtual DbSet<SpmOrderTimeCountView> SpmOrderTimeCountViews { get; set; }
        public virtual DbSet<SpmOutputDetailGroupByZoneTypeView> SpmOutputDetailGroupByZoneTypeViews { get; set; }
        public virtual DbSet<SpmOutputDetailView> SpmOutputDetailViews { get; set; }
        public virtual DbSet<SpmOutPutQueryView> SpmOutPutQueryViews { get; set; }
        public virtual DbSet<SpmOutputView> SpmOutputViews { get; set; }
        public virtual DbSet<SpmOutsideCommissionedPlanDetailView> SpmOutsideCommissionedPlanDetailViews { get; set; }
        public virtual DbSet<SpmOutsideCommissionedPlanView> SpmOutsideCommissionedPlanViews { get; set; }
        public virtual DbSet<SpmOutsidePlanForecastView> SpmOutsidePlanForecastViews { get; set; }
        public virtual DbSet<SpmOutVolView> SpmOutVolViews { get; set; }
        public virtual DbSet<SpmPackageTranDetailView> SpmPackageTranDetailViews { get; set; }
        public virtual DbSet<SpmPackageTranView> SpmPackageTranViews { get; set; }
        public virtual DbSet<SpmPackageView> SpmPackageViews { get; set; }
        public virtual DbSet<SpmPackingOrderDetailView> SpmPackingOrderDetailViews { get; set; }
        public virtual DbSet<SpmPackingOrderForShipPriceView> SpmPackingOrderForShipPriceViews { get; set; }
        public virtual DbSet<SpmPackingOrderView> SpmPackingOrderViews { get; set; }
        public virtual DbSet<SpmPartAppModelView> SpmPartAppModelViews { get; set; }
        public virtual DbSet<SpmPartBasicPriceView> SpmPartBasicPriceViews { get; set; }
        public virtual DbSet<SpmPartEliminateView> SpmPartEliminateViews { get; set; }
        public virtual DbSet<SpmPartPriceProvideForSapView> SpmPartPriceProvideForSapViews { get; set; }
        public virtual DbSet<SpmPartRecentSalesMonthReportView> SpmPartRecentSalesMonthReportViews { get; set; }
        public virtual DbSet<SpmPartsAppModelConfigView> SpmPartsAppModelConfigViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitExDealerListView> SpmPartsGroupProfitExDealerListViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitExListView> SpmPartsGroupProfitExListViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitExtendListView> SpmPartsGroupProfitExtendListViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitExtendView> SpmPartsGroupProfitExtendViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitExView> SpmPartsGroupProfitExViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitModulusExView> SpmPartsGroupProfitModulusExViews { get; set; }
        public virtual DbSet<SpmPartsGroupProfitView> SpmPartsGroupProfitViews { get; set; }
        public virtual DbSet<SpmPartsPickCardView> SpmPartsPickCardViews { get; set; }
        public virtual DbSet<SpmPartsSaleView> SpmPartsSaleViews { get; set; }
        public virtual DbSet<SpmPartsSupplierView> SpmPartsSupplierViews { get; set; }
        public virtual DbSet<SpmPartStockConfigListView> SpmPartStockConfigListViews { get; set; }
        public virtual DbSet<SpmPartStockConfigView> SpmPartStockConfigViews { get; set; }
        public virtual DbSet<SpmPartSupplierView> SpmPartSupplierViews { get; set; }
        public virtual DbSet<SpmPartView> SpmPartViews { get; set; }
        public virtual DbSet<SpmPdaTaskView> SpmPdaTaskViews { get; set; }
        public virtual DbSet<SpmPickBoxesView> SpmPickBoxesViews { get; set; }
        public virtual DbSet<SpmPickBoxTaskRelView> SpmPickBoxTaskRelViews { get; set; }
        public virtual DbSet<SpmPickBoxWithoutDetail> SpmPickBoxWithoutDetails { get; set; }
        public virtual DbSet<SpmPickClosePartsView> SpmPickClosePartsViews { get; set; }
        public virtual DbSet<SpmPickGuideTasksView> SpmPickGuideTasksViews { get; set; }
        public virtual DbSet<SpmPickOrdersView> SpmPickOrdersViews { get; set; }
        public virtual DbSet<SpmPickPackingOrderWithoutDetailView> SpmPickPackingOrderWithoutDetailViews { get; set; }
        public virtual DbSet<SpmPickStockDialogView> SpmPickStockDialogViews { get; set; }
        public virtual DbSet<SpmPoDetailExportView> SpmPoDetailExportViews { get; set; }
        public virtual DbSet<SpmPriceSimulationView> SpmPriceSimulationViews { get; set; }
        public virtual DbSet<SpmPrintAssembleTransHeadView> SpmPrintAssembleTransHeadViews { get; set; }
        public virtual DbSet<SpmPrintRemoveTransHeadView> SpmPrintRemoveTransHeadViews { get; set; }
        public virtual DbSet<SpmPrintShippingOrderDetailView> SpmPrintShippingOrderDetailViews { get; set; }
        public virtual DbSet<SpmPrintShippingOrderView> SpmPrintShippingOrderViews { get; set; }
        public virtual DbSet<SpmPrintTransHeadView> SpmPrintTransHeadViews { get; set; }
        public virtual DbSet<SpmProfitALossHeadView> SpmProfitALossHeadViews { get; set; }
        public virtual DbSet<SpmProfitALossView> SpmProfitALossViews { get; set; }
        public virtual DbSet<SpmPromotionsEventsView> SpmPromotionsEventsViews { get; set; }
        public virtual DbSet<SpmPurchaseOrderDetailPrintView> SpmPurchaseOrderDetailPrintViews { get; set; }
        public virtual DbSet<SpmPurchaseOrderDetailView> SpmPurchaseOrderDetailViews { get; set; }
        public virtual DbSet<SpmPurchaseOrderListView> SpmPurchaseOrderListViews { get; set; }
        public virtual DbSet<SpmPurchaseOrderPrintSupplierView> SpmPurchaseOrderPrintSupplierViews { get; set; }
        public virtual DbSet<SpmPurchaseOrderPrintView> SpmPurchaseOrderPrintViews { get; set; }
        public virtual DbSet<SpmPurchaseOrderView> SpmPurchaseOrderViews { get; set; }
        public virtual DbSet<SpmPurchasePlanDetailView> SpmPurchasePlanDetailViews { get; set; }
        public virtual DbSet<SpmPurchasePlanForecastView> SpmPurchasePlanForecastViews { get; set; }
        public virtual DbSet<SpmPurchasePlanView> SpmPurchasePlanViews { get; set; }
        public virtual DbSet<SpmPurchAsepropertyConfigView> SpmPurchAsepropertyConfigViews { get; set; }
        public virtual DbSet<SpmPurchaseRebateExamItemView> SpmPurchaseRebateExamItemViews { get; set; }
        public virtual DbSet<SpmPurchaseRebateTotalScoreIntervalView> SpmPurchaseRebateTotalScoreIntervalViews { get; set; }
        public virtual DbSet<SpmPurchasingTargetView> SpmPurchasingTargetViews { get; set; }
        public virtual DbSet<SpmQueryForShipPriceView> SpmQueryForShipPriceViews { get; set; }
        public virtual DbSet<SpmRawReceiveView> SpmRawReceiveViews { get; set; }
        public virtual DbSet<SpmReceiveAbnormalView> SpmReceiveAbnormalViews { get; set; }
        public virtual DbSet<SpmReceiveCView> SpmReceiveCViews { get; set; }
        public virtual DbSet<SpmReceiveDetailView> SpmReceiveDetailViews { get; set; }
        public virtual DbSet<SpmReceiveDView> SpmReceiveDViews { get; set; }
        public virtual DbSet<SpmReceiveGlobalView> SpmReceiveGlobalViews { get; set; }
        public virtual DbSet<SpmReceivePartView> SpmReceivePartViews { get; set; }
        public virtual DbSet<SpmReceiveRView> SpmReceiveRViews { get; set; }
        public virtual DbSet<SpmReceiveSeoView> SpmReceiveSeoViews { get; set; }
        public virtual DbSet<SpmReceiveView> SpmReceiveViews { get; set; }
        public virtual DbSet<SpmRemovePiecePartNoView> SpmRemovePiecePartNoViews { get; set; }
        public virtual DbSet<SpmRepackageDetailView> SpmRepackageDetailViews { get; set; }
        public virtual DbSet<SpmRepackagePartView> SpmRepackagePartViews { get; set; }
        public virtual DbSet<SpmRepackagePrintConfigView> SpmRepackagePrintConfigViews { get; set; }
        public virtual DbSet<SpmRepackageSeoView> SpmRepackageSeoViews { get; set; }
        public virtual DbSet<SpmRepackageView> SpmRepackageViews { get; set; }
        public virtual DbSet<SpmRushOrderSetView> SpmRushOrderSetViews { get; set; }
        public virtual DbSet<SpmScrapDetailView> SpmScrapDetailViews { get; set; }
        public virtual DbSet<SpmScrapPrintView> SpmScrapPrintViews { get; set; }
        public virtual DbSet<SpmScrapTransView> SpmScrapTransViews { get; set; }
        public virtual DbSet<SpmSearchPartOutPutStatusView> SpmSearchPartOutPutStatusViews { get; set; }
        public virtual DbSet<SpmSettlementOrderDetailView> SpmSettlementOrderDetailViews { get; set; }
        public virtual DbSet<SpmSettlementOrderView> SpmSettlementOrderViews { get; set; }
        public virtual DbSet<SpmSettlementView> SpmSettlementViews { get; set; }
        public virtual DbSet<SpmShelveFreeLocView> SpmShelveFreeLocViews { get; set; }
        public virtual DbSet<SpmShelveListView> SpmShelveListViews { get; set; }
        public virtual DbSet<SpmShelveRelateView> SpmShelveRelateViews { get; set; }
        public virtual DbSet<SpmShelveStockView> SpmShelveStockViews { get; set; }
        public virtual DbSet<SpmShipmentLineDView> SpmShipmentLineDViews { get; set; }
        public virtual DbSet<SpmShipmentLineView> SpmShipmentLineViews { get; set; }
        public virtual DbSet<SpmShippingOrderExportDetailView> SpmShippingOrderExportDetailViews { get; set; }
        public virtual DbSet<SpmShippingOrderPriceView> SpmShippingOrderPriceViews { get; set; }
        public virtual DbSet<SpmShippingOrderView> SpmShippingOrderViews { get; set; }
        public virtual DbSet<SpmSoDetailExportView> SpmSoDetailExportViews { get; set; }
        public virtual DbSet<SpmSoDetailGroupByZoneTypeView> SpmSoDetailGroupByZoneTypeViews { get; set; }
        public virtual DbSet<SpmSODetailView> SpmSODetailViews { get; set; }
        public virtual DbSet<SpmSOView> SpmSOViews { get; set; }
        public virtual DbSet<SpmSplitPartNoView> SpmSplitPartNoViews { get; set; }
        public virtual DbSet<SpmStocksBnView> SpmStocksBnViews { get; set; }
        public virtual DbSet<SpmStocksBwView> SpmStocksBwViews { get; set; }
        public virtual DbSet<SpmStocksGroupbyPartView> SpmStocksGroupbyPartViews { get; set; }
        public virtual DbSet<SpmStocksLocView> SpmStocksLocViews { get; set; }
        public virtual DbSet<SpmStocksNoPackView> SpmStocksNoPackViews { get; set; }
        public virtual DbSet<SpmStocksStatisticsView> SpmStocksStatisticsViews { get; set; }
        public virtual DbSet<SpmStocksView> SpmStocksViews { get; set; }
        public virtual DbSet<SpmStocksWarnView> SpmStocksWarnViews { get; set; }
        public virtual DbSet<SpmStockTransDetailLogView> SpmStockTransDetailLogViews { get; set; }
        public virtual DbSet<SpmStockTransPrintView> SpmStockTransPrintViews { get; set; }
        public virtual DbSet<SpmSupplierContractAndQuotaView> SpmSupplierContractAndQuotaViews { get; set; }
        public virtual DbSet<SpmTransDetailDView> SpmTransDetailDViews { get; set; }
        public virtual DbSet<SpmTransDetailView> SpmTransDetailViews { get; set; }
        public virtual DbSet<SpmTransferLocationView> SpmTransferLocationViews { get; set; }
        public virtual DbSet<SpmTransHeadView> SpmTransHeadViews { get; set; }
        public virtual DbSet<SpmTransStockView> SpmTransStockViews { get; set; }
        public virtual DbSet<SpmTransView> SpmTransViews { get; set; }
        public virtual DbSet<SpmTrayExView> SpmTrayExViews { get; set; }
        public virtual DbSet<SpmTrayFreeView> SpmTrayFreeViews { get; set; }
        public virtual DbSet<SpmTrayListView> SpmTrayListViews { get; set; }
        public virtual DbSet<SpmTrayPartView> SpmTrayPartViews { get; set; }
        public virtual DbSet<SpmTrayView> SpmTrayViews { get; set; }
        public virtual DbSet<SpmVirtualScreenStocksView> SpmVirtualScreenStocksViews { get; set; }
        public virtual DbSet<SpmVirtualStocksView> SpmVirtualStocksViews { get; set; }
        public virtual DbSet<SpmWarehouseView> SpmWarehouseViews { get; set; }
        public virtual DbSet<SpmZCDBoxInfo> SpmZCDBoxInfoes { get; set; }
        public virtual DbSet<SpmZoneView> SpmZoneViews { get; set; }
        public virtual DbSet<SrmMaterialReceivePlanDetailView> SrmMaterialReceivePlanDetailViews { get; set; }
        public virtual DbSet<SrmMaterialReceivePlanView> SrmMaterialReceivePlanViews { get; set; }
        public virtual DbSet<SvcAreaProvinceView> SvcAreaProvinceViews { get; set; }
        public virtual DbSet<SvcContactView> SvcContactViews { get; set; }
        public virtual DbSet<SvcCouponView> SvcCouponViews { get; set; }
        public virtual DbSet<SvcCscView> SvcCscViews { get; set; }
        public virtual DbSet<SvcCusomerFeatureView> SvcCusomerFeatureViews { get; set; }
        public virtual DbSet<SvcDealerView> SvcDealerViews { get; set; }
        public virtual DbSet<SvcDspMissingPartView> SvcDspMissingPartViews { get; set; }
        public virtual DbSet<SvcDspRevserverView> SvcDspRevserverViews { get; set; }
        public virtual DbSet<SvcEmployeeView> SvcEmployeeViews { get; set; }
        public virtual DbSet<SvcInsuranceCompanyView> SvcInsuranceCompanyViews { get; set; }
        public virtual DbSet<SvcLostCustomersView> SvcLostCustomersViews { get; set; }
        public virtual DbSet<SvcMaintainView> SvcMaintainViews { get; set; }
        public virtual DbSet<SvcPartsView> SvcPartsViews { get; set; }
        public virtual DbSet<SvcProxyOperationLaneView> SvcProxyOperationLaneViews { get; set; }
        public virtual DbSet<SvcReceptionProcessView> SvcReceptionProcessViews { get; set; }
        public virtual DbSet<SvcRegularMaintenanceView> SvcRegularMaintenanceViews { get; set; }
        public virtual DbSet<SvcReserverDetailView> SvcReserverDetailViews { get; set; }
        public virtual DbSet<SvcServiceClmView> SvcServiceClmViews { get; set; }
        public virtual DbSet<SvcSolicitAppointmentView> SvcSolicitAppointmentViews { get; set; }
        public virtual DbSet<SvcTagView> SvcTagViews { get; set; }
        public virtual DbSet<SvcThreeGuaranteesConfigView> SvcThreeGuaranteesConfigViews { get; set; }
        public virtual DbSet<SvcVehcileCustomerView> SvcVehcileCustomerViews { get; set; }
        public virtual DbSet<SvcVehicleClassTypeView> SvcVehicleClassTypeViews { get; set; }
        public virtual DbSet<SvcVehicleSendView> SvcVehicleSendViews { get; set; }
        public virtual DbSet<SysAdminAreaV> SysAdminAreaVs { get; set; }
        public virtual DbSet<SysApiLogView> SysApiLogViews { get; set; }
        public virtual DbSet<SysAreaWithDealterView> SysAreaWithDealterViews { get; set; }
        public virtual DbSet<SysDistrictSalesAreaMappingView> SysDistrictSalesAreaMappingViews { get; set; }
        public virtual DbSet<SysFunctionApiActionView> SysFunctionApiActionViews { get; set; }
        public virtual DbSet<SysJobFrequencySettingView> SysJobFrequencySettingViews { get; set; }
        public virtual DbSet<SysPdaWorkSetView> SysPdaWorkSetViews { get; set; }
        public virtual DbSet<SysUserApiActionView> SysUserApiActionViews { get; set; }
        public virtual DbSet<SysUserExtendView> SysUserExtendViews { get; set; }
        public virtual DbSet<SysUserOrgView> SysUserOrgViews { get; set; }
        public virtual DbSet<SysUserRoleOrgAreaView> SysUserRoleOrgAreaViews { get; set; }
        public virtual DbSet<SysUserRoleOrgView> SysUserRoleOrgViews { get; set; }
        public virtual DbSet<SysUserRoleView> SysUserRoleViews { get; set; }
        public virtual DbSet<SysUserV> SysUserVs { get; set; }
        public virtual DbSet<SysUserVehWarehouseView> SysUserVehWarehouseViews { get; set; }
        public virtual DbSet<SysUserView> SysUserViews { get; set; }
        public virtual DbSet<ThreeROrderAuthView> ThreeROrderAuthViews { get; set; }
        public virtual DbSet<TransferOrderInfoDetailsView> TransferOrderInfoDetailsViews { get; set; }
        public virtual DbSet<TransferOrderInfoView> TransferOrderInfoViews { get; set; }
        public virtual DbSet<TransferOrderView> TransferOrderViews { get; set; }
        public virtual DbSet<TransFrozenPartNoView> TransFrozenPartNoViews { get; set; }
        public virtual DbSet<TransFrozenThawView> TransFrozenThawViews { get; set; }
        public virtual DbSet<TransHeadAlreadyScrapCheckedView> TransHeadAlreadyScrapCheckedViews { get; set; }
        public virtual DbSet<TransHeadAlreadyScrapView> TransHeadAlreadyScrapViews { get; set; }
        public virtual DbSet<TransHeadJQYHView> TransHeadJQYHViews { get; set; }
        public virtual DbSet<TransHeadMaterielView> TransHeadMaterielViews { get; set; }
        public virtual DbSet<TransHeadStiilMaterielListView> TransHeadStiilMaterielListViews { get; set; }
        public virtual DbSet<TransHeadStiilMaterielView> TransHeadStiilMaterielViews { get; set; }
        public virtual DbSet<TransHeadStiilView> TransHeadStiilViews { get; set; }
        public virtual DbSet<TransHeadThawDetailView> TransHeadThawDetailViews { get; set; }
        public virtual DbSet<TransHeadThawView> TransHeadThawViews { get; set; }
        public virtual DbSet<TransHeadView> TransHeadViews { get; set; }
        public virtual DbSet<TransScrapView> TransScrapViews { get; set; }
        public virtual DbSet<TransUnfrozenFrozenThawView> TransUnfrozenFrozenThawViews { get; set; }
        public virtual DbSet<TsAddCaseQualityReportView> TsAddCaseQualityReportViews { get; set; }
        public virtual DbSet<TsAdminView> TsAdminViews { get; set; }
        public virtual DbSet<TsAdvisoryCCView> TsAdvisoryCCViews { get; set; }
        public virtual DbSet<TsAdvisoryHistoryView> TsAdvisoryHistoryViews { get; set; }
        public virtual DbSet<TsAdvisoryOrderView> TsAdvisoryOrderViews { get; set; }
        public virtual DbSet<TsApprovalInformationView> TsApprovalInformationViews { get; set; }
        public virtual DbSet<TsApprovalRecordInfoView> TsApprovalRecordInfoViews { get; set; }
        public virtual DbSet<TsApprovalView> TsApprovalViews { get; set; }
        public virtual DbSet<TsArrangeWorkerMesView> TsArrangeWorkerMesViews { get; set; }
        public virtual DbSet<TsArrangeWorkerView> TsArrangeWorkerViews { get; set; }
        public virtual DbSet<TsCarInformationView> TsCarInformationViews { get; set; }
        public virtual DbSet<TsCarInfoView> TsCarInfoViews { get; set; }
        public virtual DbSet<TsCarMaintenanceCaseView> TsCarMaintenanceCaseViews { get; set; }
        public virtual DbSet<TsCarMaintenanceRecordView> TsCarMaintenanceRecordViews { get; set; }
        public virtual DbSet<TsCarOtherInfoView> TsCarOtherInfoViews { get; set; }
        public virtual DbSet<TsCarVDNView> TsCarVDNViews { get; set; }
        public virtual DbSet<TsCarWarrantyRecordView> TsCarWarrantyRecordViews { get; set; }
        public virtual DbSet<TsCaseQualityView> TsCaseQualityViews { get; set; }
        public virtual DbSet<TsChooseMaintenanceProxyView> TsChooseMaintenanceProxyViews { get; set; }
        public virtual DbSet<TsConsultationEngineerView> TsConsultationEngineerViews { get; set; }
        public virtual DbSet<TsConsultationGetFaultFeedbackView> TsConsultationGetFaultFeedbackViews { get; set; }
        public virtual DbSet<TsConsultationGetFaultInfView> TsConsultationGetFaultInfViews { get; set; }
        public virtual DbSet<TsConsultationLoadContentView> TsConsultationLoadContentViews { get; set; }
        public virtual DbSet<TsConsultationLoadEvaluateView> TsConsultationLoadEvaluateViews { get; set; }
        public virtual DbSet<TsConsultationQuestionOrAnswerView> TsConsultationQuestionOrAnswerViews { get; set; }
        public virtual DbSet<TsConsultationTechnicianView> TsConsultationTechnicianViews { get; set; }
        public virtual DbSet<TsConsultationThreeLineView> TsConsultationThreeLineViews { get; set; }
        public virtual DbSet<TsConsultationTmBsView> TsConsultationTmBsViews { get; set; }
        public virtual DbSet<TsConsultationTmOsView> TsConsultationTmOsViews { get; set; }
        public virtual DbSet<TsConsultationTmTrasksTypeView> TsConsultationTmTrasksTypeViews { get; set; }
        public virtual DbSet<TsConsultationTmView> TsConsultationTmViews { get; set; }
        public virtual DbSet<TsDealerReadConditionView> TsDealerReadConditionViews { get; set; }
        public virtual DbSet<TsDearlerView> TsDearlerViews { get; set; }
        public virtual DbSet<TsDefinitionTagView> TsDefinitionTagViews { get; set; }
        public virtual DbSet<TsDIDParameterView> TsDIDParameterViews { get; set; }
        public virtual DbSet<TsDIDView> TsDIDViews { get; set; }
        public virtual DbSet<TsDispatchingInformationView> TsDispatchingInformationViews { get; set; }
        public virtual DbSet<TsDispatchingInfoView> TsDispatchingInfoViews { get; set; }
        public virtual DbSet<TsDispatchingWorkersView> TsDispatchingWorkersViews { get; set; }
        public virtual DbSet<TsDroInfoView> TsDroInfoViews { get; set; }
        public virtual DbSet<TsDTCParameterView> TsDTCParameterViews { get; set; }
        public virtual DbSet<TsDTCView> TsDTCViews { get; set; }
        public virtual DbSet<TsEchoReportcarView> TsEchoReportcarViews { get; set; }
        public virtual DbSet<TsEchoReportView> TsEchoReportViews { get; set; }
        public virtual DbSet<TsECUView> TsECUViews { get; set; }
        public virtual DbSet<TsEmpUserView> TsEmpUserViews { get; set; }
        public virtual DbSet<TSFaultStatisticsByDTCView> TSFaultStatisticsByDTCViews { get; set; }
        public virtual DbSet<TSFaultStatisticsByPartView> TSFaultStatisticsByPartViews { get; set; }
        public virtual DbSet<TsFlowDocView> TsFlowDocViews { get; set; }
        public virtual DbSet<TsGeneralListView> TsGeneralListViews { get; set; }
        public virtual DbSet<TsGldsCaseListView> TsGldsCaseListViews { get; set; }
        public virtual DbSet<TsGldsCollectListView> TsGldsCollectListViews { get; set; }
        public virtual DbSet<TsGldsListView> TsGldsListViews { get; set; }
        public virtual DbSet<TsGldsThreeListView> TsGldsThreeListViews { get; set; }
        public virtual DbSet<TsHaveSentWorkersView> TsHaveSentWorkersViews { get; set; }
        public virtual DbSet<TsImportantQualityView> TsImportantQualityViews { get; set; }
        public virtual DbSet<TsInvestigationResultView> TsInvestigationResultViews { get; set; }
        public virtual DbSet<TsLinkVinView> TsLinkVinViews { get; set; }
        public virtual DbSet<TsLoadAccidentView> TsLoadAccidentViews { get; set; }
        public virtual DbSet<TsMarketValidationView> TsMarketValidationViews { get; set; }
        public virtual DbSet<TsNewUserView> TsNewUserViews { get; set; }
        public virtual DbSet<TsOldOrderView> TsOldOrderViews { get; set; }
        public virtual DbSet<TsOnsiteSupportView> TsOnsiteSupportViews { get; set; }
        public virtual DbSet<TsOrderInfoWithSourceTypeIqrView> TsOrderInfoWithSourceTypeIqrViews { get; set; }
        public virtual DbSet<TsOrderInfoWithSourceTypeOnsiteView> TsOrderInfoWithSourceTypeOnsiteViews { get; set; }
        public virtual DbSet<TsPartInformationView> TsPartInformationViews { get; set; }
        public virtual DbSet<TsPartsInformation> TsPartsInformations { get; set; }
        public virtual DbSet<TsPartsReturnView> TsPartsReturnViews { get; set; }
        public virtual DbSet<TsPreAuthView> TsPreAuthViews { get; set; }
        public virtual DbSet<TsPreLicensingView> TsPreLicensingViews { get; set; }
        public virtual DbSet<TsPvRoleView> TsPvRoleViews { get; set; }
        public virtual DbSet<TsQualityCaseView> TsQualityCaseViews { get; set; }
        public virtual DbSet<TsQueryCaseQualityReceiveInfoView> TsQueryCaseQualityReceiveInfoViews { get; set; }
        public virtual DbSet<TsQueryReceiveInfoView> TsQueryReceiveInfoViews { get; set; }
        public virtual DbSet<TsRepairCaseView> TsRepairCaseViews { get; set; }
        public virtual DbSet<TsRepairCollectListView> TsRepairCollectListViews { get; set; }
        public virtual DbSet<TSResponseStatisticsView> TSResponseStatisticsViews { get; set; }
        public virtual DbSet<TsReverseAsListNewView> TsReverseAsListNewViews { get; set; }
        public virtual DbSet<TsReverseBackInfoView> TsReverseBackInfoViews { get; set; }
        public virtual DbSet<TsReverseBackPackageInviteInfoView> TsReverseBackPackageInviteInfoViews { get; set; }
        public virtual DbSet<TsReverseExecutionDealerView> TsReverseExecutionDealerViews { get; set; }
        public virtual DbSet<TsReverseInviteInfoSingleView> TsReverseInviteInfoSingleViews { get; set; }
        public virtual DbSet<TsReverseListNewView> TsReverseListNewViews { get; set; }
        public virtual DbSet<TsReverseListView> TsReverseListViews { get; set; }
        public virtual DbSet<TsReverseOnSiteSingleOrderInfoView> TsReverseOnSiteSingleOrderInfoViews { get; set; }
        public virtual DbSet<TsReverseRelationAdvInfoView> TsReverseRelationAdvInfoViews { get; set; }
        public virtual DbSet<TsReverseRelationArrivalCscView> TsReverseRelationArrivalCscViews { get; set; }
        public virtual DbSet<TsReverseRelationCarView> TsReverseRelationCarViews { get; set; }
        public virtual DbSet<TsReverseRelationCscView> TsReverseRelationCscViews { get; set; }
        public virtual DbSet<TsReverseRelationDtcView> TsReverseRelationDtcViews { get; set; }
        public virtual DbSet<TsReverseRelationPartView> TsReverseRelationPartViews { get; set; }
        public virtual DbSet<TsReverseRelationRepairCscView> TsReverseRelationRepairCscViews { get; set; }
        public virtual DbSet<TsReverseSupplementLoadInviteInfoAllView> TsReverseSupplementLoadInviteInfoAllViews { get; set; }
        public virtual DbSet<TsReverseSupplementLoadInviteInfobackedView> TsReverseSupplementLoadInviteInfobackedViews { get; set; }
        public virtual DbSet<TsReverseSupplementLoadInviteInfoView> TsReverseSupplementLoadInviteInfoViews { get; set; }
        public virtual DbSet<TsReverseWarrantyCarView> TsReverseWarrantyCarViews { get; set; }
        public virtual DbSet<TsReverseWarrantyDealerView> TsReverseWarrantyDealerViews { get; set; }
        public virtual DbSet<TsSameFaultAgainPitView> TsSameFaultAgainPitViews { get; set; }
        public virtual DbSet<TsScriptInformationView> TsScriptInformationViews { get; set; }
        public virtual DbSet<TsSelectAdvisoryOrderView> TsSelectAdvisoryOrderViews { get; set; }
        public virtual DbSet<TsSelectServiceBulletinView> TsSelectServiceBulletinViews { get; set; }
        public virtual DbSet<TsSelectServiceReportView> TsSelectServiceReportViews { get; set; }
        public virtual DbSet<TsSeniorGldsQeView> TsSeniorGldsQeViews { get; set; }
        public virtual DbSet<TsSeniorRepairView> TsSeniorRepairViews { get; set; }
        public virtual DbSet<TsSeniorSpecialReportView> TsSeniorSpecialReportViews { get; set; }
        public virtual DbSet<TsSeniorTecConsultQeView> TsSeniorTecConsultQeViews { get; set; }
        public virtual DbSet<TsSeniorTecConsultView> TsSeniorTecConsultViews { get; set; }
        public virtual DbSet<TsSeniorTecLicensingView> TsSeniorTecLicensingViews { get; set; }
        public virtual DbSet<TsSeniorTecSupportView> TsSeniorTecSupportViews { get; set; }
        public virtual DbSet<TsSeniorTsCaseQualityView> TsSeniorTsCaseQualityViews { get; set; }
        public virtual DbSet<TsSeniorTsMaintenanceCaseView> TsSeniorTsMaintenanceCaseViews { get; set; }
        public virtual DbSet<TsServiceBulletinView> TsServiceBulletinViews { get; set; }
        public virtual DbSet<TsServiceNotificationView> TsServiceNotificationViews { get; set; }
        public virtual DbSet<TsServiceReportView> TsServiceReportViews { get; set; }
        public virtual DbSet<TsSingleOrderView> TsSingleOrderViews { get; set; }
        public virtual DbSet<TsSoftwareAndHardView> TsSoftwareAndHardViews { get; set; }
        public virtual DbSet<TsSoftwarePartNumberView> TsSoftwarePartNumberViews { get; set; }
        public virtual DbSet<TsSpecialAddIqrView> TsSpecialAddIqrViews { get; set; }
        public virtual DbSet<TsSpecialIqrByIdView> TsSpecialIqrByIdViews { get; set; }
        public virtual DbSet<TsSpecialReportServiceHistoryView> TsSpecialReportServiceHistoryViews { get; set; }
        public virtual DbSet<TsSpecialReportView> TsSpecialReportViews { get; set; }
        public virtual DbSet<TsSurveyExplanationView> TsSurveyExplanationViews { get; set; }
        public virtual DbSet<TsSurveyRecordView> TsSurveyRecordViews { get; set; }
        public virtual DbSet<TsSurveyView> TsSurveyViews { get; set; }
        public virtual DbSet<TsTechnicalFornumFriendView> TsTechnicalFornumFriendViews { get; set; }
        public virtual DbSet<TsTechnicalFornumHomeElitePostView> TsTechnicalFornumHomeElitePostViews { get; set; }
        public virtual DbSet<TsTechnicalFornumHomeSectionPostView> TsTechnicalFornumHomeSectionPostViews { get; set; }
        public virtual DbSet<TsTechnicalFornumNewsListView> TsTechnicalFornumNewsListViews { get; set; }
        public virtual DbSet<TsTechnicalFornumNoticeTopListView> TsTechnicalFornumNoticeTopListViews { get; set; }
        public virtual DbSet<TsTechnicalFornumPostSortView> TsTechnicalFornumPostSortViews { get; set; }
        public virtual DbSet<TsTechnicalFornumUserSecCollectionView> TsTechnicalFornumUserSecCollectionViews { get; set; }
        public virtual DbSet<TsTechnicalFornumUserSecMessView> TsTechnicalFornumUserSecMessViews { get; set; }
        public virtual DbSet<TsTechnicalFornumUserSecReplyView> TsTechnicalFornumUserSecReplyViews { get; set; }
        public virtual DbSet<TsTechnicalFornumUserStatisticsView> TsTechnicalFornumUserStatisticsViews { get; set; }
        public virtual DbSet<TsTechnicalFornumUserView> TsTechnicalFornumUserViews { get; set; }
        public virtual DbSet<TsTechnicalForumGoodsCateforyView> TsTechnicalForumGoodsCateforyViews { get; set; }
        public virtual DbSet<TsTechnicalForumOpertionHistoryView> TsTechnicalForumOpertionHistoryViews { get; set; }
        public virtual DbSet<TsTechnicalView> TsTechnicalViews { get; set; }
        public virtual DbSet<TsTechnicianManagementView> TsTechnicianManagementViews { get; set; }
        public virtual DbSet<TsTechnicianView> TsTechnicianViews { get; set; }
        public virtual DbSet<TsThirdSupportMesView> TsThirdSupportMesViews { get; set; }
        public virtual DbSet<TsToAndRoleView> TsToAndRoleViews { get; set; }
        public virtual DbSet<TsTransferRecordView> TsTransferRecordViews { get; set; }
        public virtual DbSet<TsUserView> TsUserViews { get; set; }
        public virtual DbSet<TsVehicleArrivalView> TsVehicleArrivalViews { get; set; }
        public virtual DbSet<TsVehicleExtensionView> TsVehicleExtensionViews { get; set; }
        public virtual DbSet<TsVehicleNodeView> TsVehicleNodeViews { get; set; }
        public virtual DbSet<TsWarrantyPartsView> TsWarrantyPartsViews { get; set; }
        public virtual DbSet<VehAdditionalSOLimitView> VehAdditionalSOLimitViews { get; set; }
        public virtual DbSet<VehCarInfoView> VehCarInfoViews { get; set; }
        public virtual DbSet<VehCarInventoryRecordView> VehCarInventoryRecordViews { get; set; }
        public virtual DbSet<VehCarInventoryView> VehCarInventoryViews { get; set; }
        public virtual DbSet<VehCarMoveInView> VehCarMoveInViews { get; set; }
        public virtual DbSet<VehCarrierBillCarView> VehCarrierBillCarViews { get; set; }
        public virtual DbSet<VehCarrierBillCarView_Tmp> VehCarrierBillCarView_Tmp { get; set; }
        public virtual DbSet<VehCarrierBillDeliveryOrderView> VehCarrierBillDeliveryOrderViews { get; set; }
        public virtual DbSet<VehCarrierBillView> VehCarrierBillViews { get; set; }
        public virtual DbSet<VehCarrierBillView_Tmp> VehCarrierBillView_Tmp { get; set; }
        public virtual DbSet<VehCarrierSceneRepresentView> VehCarrierSceneRepresentViews { get; set; }
        public virtual DbSet<VehCarTransferView> VehCarTransferViews { get; set; }
        public virtual DbSet<VehCertificationMailView> VehCertificationMailViews { get; set; }
        public virtual DbSet<VehChariotCarView> VehChariotCarViews { get; set; }
        public virtual DbSet<VehChariotDriveWayView> VehChariotDriveWayViews { get; set; }
        public virtual DbSet<VehChariotView> VehChariotViews { get; set; }
        public virtual DbSet<VehDealerReportingDetailView> VehDealerReportingDetailViews { get; set; }
        public virtual DbSet<VehDealerReportingSummaryView> VehDealerReportingSummaryViews { get; set; }
        public virtual DbSet<VehDeliveryOrderCarOutFactoryConfirmView> VehDeliveryOrderCarOutFactoryConfirmViews { get; set; }
        public virtual DbSet<VehDeliveryOrderCarrierBillView> VehDeliveryOrderCarrierBillViews { get; set; }
        public virtual DbSet<VehDeliveryOrderCarSceneConfirmView> VehDeliveryOrderCarSceneConfirmViews { get; set; }
        public virtual DbSet<VehDeliveryOrderCarView> VehDeliveryOrderCarViews { get; set; }
        public virtual DbSet<VehDeliveryOrderInfoView> VehDeliveryOrderInfoViews { get; set; }
        public virtual DbSet<VehDeliveryOrderNotView> VehDeliveryOrderNotViews { get; set; }
        public virtual DbSet<VehDeliveryOrderView> VehDeliveryOrderViews { get; set; }
        public virtual DbSet<VehDriverView> VehDriverViews { get; set; }
        public virtual DbSet<VehDriveWayCarView> VehDriveWayCarViews { get; set; }
        public virtual DbSet<VehDriveWayView> VehDriveWayViews { get; set; }
        public virtual DbSet<VehInWarehousePolicyView> VehInWarehousePolicyViews { get; set; }
        public virtual DbSet<VehMatchesNotView> VehMatchesNotViews { get; set; }
        public virtual DbSet<VehMatchesView> VehMatchesViews { get; set; }
        public virtual DbSet<VehMdmVehiclePno12groupView> VehMdmVehiclePno12groupView { get; set; }
        public virtual DbSet<VehPOView> VehPOViews { get; set; }
        public virtual DbSet<VehROV> VehROVs { get; set; }
        public virtual DbSet<VehROView> VehROViews { get; set; }
        public virtual DbSet<VehSalesForecastForecastWeekView> VehSalesForecastForecastWeekViews { get; set; }
        public virtual DbSet<VehSalesForecastPercentageColorNEWResultView> VehSalesForecastPercentageColorNEWResultViews { get; set; }
        public virtual DbSet<VehSalesForecastPercentageView> VehSalesForecastPercentageViews { get; set; }
        public virtual DbSet<VehSalesForecastSumView> VehSalesForecastSumViews { get; set; }
        public virtual DbSet<VehSalesForecastTrimRowsView> VehSalesForecastTrimRowsViews { get; set; }
        public virtual DbSet<VehSalesForecastTrimView> VehSalesForecastTrimViews { get; set; }
        public virtual DbSet<VehSalesForecastUnionGroupByPno12View> VehSalesForecastUnionGroupByPno12View { get; set; }
        public virtual DbSet<VehSalesForecastUnionGroupByPno18View> VehSalesForecastUnionGroupByPno18View { get; set; }
        public virtual DbSet<VehSalesForecastVehicleColorSumView> VehSalesForecastVehicleColorSumViews { get; set; }
        public virtual DbSet<VehSalesForecastVehicleSunNumberView> VehSalesForecastVehicleSunNumberViews { get; set; }
        public virtual DbSet<VehSalesForecastView> VehSalesForecastViews { get; set; }
        public virtual DbSet<VehSalesForecastWithinAbroadSumView> VehSalesForecastWithinAbroadSumViews { get; set; }
        public virtual DbSet<VehSalesPlanView> VehSalesPlanViews { get; set; }
        public virtual DbSet<VehShipmentLineCarrierView> VehShipmentLineCarrierViews { get; set; }
        public virtual DbSet<VehShipmentLineView> VehShipmentLineViews { get; set; }
        public virtual DbSet<VehStorageAreaView> VehStorageAreaViews { get; set; }
        public virtual DbSet<VehStoreLocationLockConditionView> VehStoreLocationLockConditionViews { get; set; }
        public virtual DbSet<VehStoreLocationQueryView> VehStoreLocationQueryViews { get; set; }
        public virtual DbSet<VehStoreLocationRemindRuleView> VehStoreLocationRemindRuleViews { get; set; }
        public virtual DbSet<VehStoreLocationView> VehStoreLocationViews { get; set; }
        public virtual DbSet<VehTransferOrderNotView> VehTransferOrderNotViews { get; set; }
        public virtual DbSet<VehTransferOrderPOView> VehTransferOrderPOViews { get; set; }
        public virtual DbSet<VehTransferOrderView> VehTransferOrderViews { get; set; }
        public virtual DbSet<VehWarehouseView> VehWarehouseViews { get; set; }
        public virtual DbSet<VehYesMatchingLockSOView> VehYesMatchingLockSOViews { get; set; }
        public virtual DbSet<vUser> vUsers { get; set; }
        public virtual DbSet<WorkOrderWithTechSupportInfoView> WorkOrderWithTechSupportInfoViews { get; set; }
    
        [DbFunction("CEPOne_ReportEntities", "ClmGetAllReceiveInfo")]
        public virtual IQueryable<ClmGetAllReceiveInfo_Result> ClmGetAllReceiveInfo(string workOrderNo, string partNo, string orderNo, string vIN, Nullable<int> spReturnStatus)
        {
            var workOrderNoParameter = workOrderNo != null ?
                new ObjectParameter("WorkOrderNo", workOrderNo) :
                new ObjectParameter("WorkOrderNo", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var spReturnStatusParameter = spReturnStatus.HasValue ?
                new ObjectParameter("SpReturnStatus", spReturnStatus) :
                new ObjectParameter("SpReturnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ClmGetAllReceiveInfo_Result>("[CEPOne_ReportEntities].[ClmGetAllReceiveInfo](@WorkOrderNo, @PartNo, @OrderNo, @VIN, @SpReturnStatus)", workOrderNoParameter, partNoParameter, orderNoParameter, vINParameter, spReturnStatusParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "ClmGetWarrantyPeriod")]
        public virtual IQueryable<ClmGetWarrantyPeriod_Result> ClmGetWarrantyPeriod(string vIN)
        {
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ClmGetWarrantyPeriod_Result>("[CEPOne_ReportEntities].[ClmGetWarrantyPeriod](@VIN)", vINParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "fSpitStringToTable")]
        public virtual IQueryable<fSpitStringToTable_Result> fSpitStringToTable(string list, string splitChar)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var splitCharParameter = splitChar != null ?
                new ObjectParameter("SplitChar", splitChar) :
                new ObjectParameter("SplitChar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fSpitStringToTable_Result>("[CEPOne_ReportEntities].[fSpitStringToTable](@List, @SplitChar)", listParameter, splitCharParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "fSplit")]
        public virtual IQueryable<fSplit_Result> fSplit(string sourceSql, string strSeprate)
        {
            var sourceSqlParameter = sourceSql != null ?
                new ObjectParameter("SourceSql", sourceSql) :
                new ObjectParameter("SourceSql", typeof(string));
    
            var strSeprateParameter = strSeprate != null ?
                new ObjectParameter("StrSeprate", strSeprate) :
                new ObjectParameter("StrSeprate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fSplit_Result>("[CEPOne_ReportEntities].[fSplit](@SourceSql, @StrSeprate)", sourceSqlParameter, strSeprateParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "generateTime")]
        public virtual IQueryable<generateTime_Result> generateTime(Nullable<System.DateTime> begin_date, Nullable<System.DateTime> end_date, Nullable<int> type)
        {
            var begin_dateParameter = begin_date.HasValue ?
                new ObjectParameter("begin_date", begin_date) :
                new ObjectParameter("begin_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<generateTime_Result>("[CEPOne_ReportEntities].[generateTime](@begin_date, @end_date, @type)", begin_dateParameter, end_dateParameter, typeParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "GetDealerPartPrice")]
        public virtual IQueryable<GetDealerPartPrice_Result> GetDealerPartPrice(string dealerCode, Nullable<int> orderType, string partNo)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(int));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDealerPartPrice_Result>("[CEPOne_ReportEntities].[GetDealerPartPrice](@DealerCode, @OrderType, @PartNo)", dealerCodeParameter, orderTypeParameter, partNoParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "GetDealerPartPriceWithDate")]
        public virtual IQueryable<GetDealerPartPriceWithDate_Result> GetDealerPartPriceWithDate(string dealerCode, Nullable<int> orderType, string partNo, string inputDate)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(int));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var inputDateParameter = inputDate != null ?
                new ObjectParameter("inputDate", inputDate) :
                new ObjectParameter("inputDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDealerPartPriceWithDate_Result>("[CEPOne_ReportEntities].[GetDealerPartPriceWithDate](@DealerCode, @OrderType, @PartNo, @inputDate)", dealerCodeParameter, orderTypeParameter, partNoParameter, inputDateParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "GetPromotionEvents")]
        public virtual IQueryable<GetPromotionEvents_Result> GetPromotionEvents(string dealerCode, string partNo)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPromotionEvents_Result>("[CEPOne_ReportEntities].[GetPromotionEvents](@DealerCode, @PartNo)", dealerCodeParameter, partNoParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "GetVehStoreLocationFreeData")]
        public virtual IQueryable<GetVehStoreLocationFreeData_Result> GetVehStoreLocationFreeData(Nullable<int> warehouseId)
        {
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetVehStoreLocationFreeData_Result>("[CEPOne_ReportEntities].[GetVehStoreLocationFreeData](@WarehouseId)", warehouseIdParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "GetWarehouseReminderMessage")]
        public virtual IQueryable<GetWarehouseReminderMessage_Result> GetWarehouseReminderMessage(Nullable<long> warehouseId, string warehouseName)
        {
            var warehouseIdParameter = warehouseId.HasValue ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(long));
    
            var warehouseNameParameter = warehouseName != null ?
                new ObjectParameter("WarehouseName", warehouseName) :
                new ObjectParameter("WarehouseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetWarehouseReminderMessage_Result>("[CEPOne_ReportEntities].[GetWarehouseReminderMessage](@WarehouseId, @WarehouseName)", warehouseIdParameter, warehouseNameParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "parseJSON")]
        public virtual IQueryable<parseJSON_Result> parseJSON(string jSON)
        {
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<parseJSON_Result>("[CEPOne_ReportEntities].[parseJSON](@JSON)", jSONParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "ParseXML")]
        public virtual IQueryable<ParseXML_Result> ParseXML(string xML_Result)
        {
            var xML_ResultParameter = xML_Result != null ?
                new ObjectParameter("XML_Result", xML_Result) :
                new ObjectParameter("XML_Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ParseXML_Result>("[CEPOne_ReportEntities].[ParseXML](@XML_Result)", xML_ResultParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "PartDetailStr")]
        public virtual IQueryable<PartDetailStr_Result> PartDetailStr(string mainId, Nullable<int> tableType)
        {
            var mainIdParameter = mainId != null ?
                new ObjectParameter("MainId", mainId) :
                new ObjectParameter("MainId", typeof(string));
    
            var tableTypeParameter = tableType.HasValue ?
                new ObjectParameter("tableType", tableType) :
                new ObjectParameter("tableType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PartDetailStr_Result>("[CEPOne_ReportEntities].[PartDetailStr](@MainId, @tableType)", mainIdParameter, tableTypeParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "StrToTable")]
        public virtual IQueryable<StrToTable_Result> StrToTable(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StrToTable_Result>("[CEPOne_ReportEntities].[StrToTable](@str)", strParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "VehGetCurrentSalesForecast")]
        public virtual IQueryable<VehGetCurrentSalesForecast_Result> VehGetCurrentSalesForecast(string forecastCycle)
        {
            var forecastCycleParameter = forecastCycle != null ?
                new ObjectParameter("ForecastCycle", forecastCycle) :
                new ObjectParameter("ForecastCycle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VehGetCurrentSalesForecast_Result>("[CEPOne_ReportEntities].[VehGetCurrentSalesForecast](@ForecastCycle)", forecastCycleParameter);
        }
    
        [DbFunction("CEPOne_ReportEntities", "VehSalesForecastSummary")]
        public virtual IQueryable<VehSalesForecastSummary_Result> VehSalesForecastSummary()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VehSalesForecastSummary_Result>("[CEPOne_ReportEntities].[VehSalesForecastSummary]()");
        }
    
        public virtual int ActualSales(string begin_date, string end_date, string dealerCode)
        {
            var begin_dateParameter = begin_date != null ?
                new ObjectParameter("begin_date", begin_date) :
                new ObjectParameter("begin_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("dealerCode", dealerCode) :
                new ObjectParameter("dealerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualSales", begin_dateParameter, end_dateParameter, dealerCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BatchInto(Nullable<System.DateTime> begin_date, Nullable<System.DateTime> end_date, string dealerCode)
        {
            var begin_dateParameter = begin_date.HasValue ?
                new ObjectParameter("begin_date", begin_date) :
                new ObjectParameter("begin_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("dealerCode", dealerCode) :
                new ObjectParameter("dealerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BatchInto", begin_dateParameter, end_dateParameter, dealerCodeParameter);
        }
    
        public virtual int BillStatusUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BillStatusUpdate");
        }
    
        public virtual int BoPartDetailTime(Nullable<long> bOId)
        {
            var bOIdParameter = bOId.HasValue ?
                new ObjectParameter("BOId", bOId) :
                new ObjectParameter("BOId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BoPartDetailTime", bOIdParameter);
        }
    
        public virtual ObjectResult<CarLock_Result> CarLock(string orderno, string dealercode, string pno18)
        {
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var dealercodeParameter = dealercode != null ?
                new ObjectParameter("dealercode", dealercode) :
                new ObjectParameter("dealercode", typeof(string));
    
            var pno18Parameter = pno18 != null ?
                new ObjectParameter("pno18", pno18) :
                new ObjectParameter("pno18", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarLock_Result>("CarLock", ordernoParameter, dealercodeParameter, pno18Parameter);
        }
    
        public virtual ObjectResult<CarLockbyVin_Result> CarLockbyVin(string vin, string orderno, string dealercode)
        {
            var vinParameter = vin != null ?
                new ObjectParameter("vin", vin) :
                new ObjectParameter("vin", typeof(string));
    
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var dealercodeParameter = dealercode != null ?
                new ObjectParameter("dealercode", dealercode) :
                new ObjectParameter("dealercode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarLockbyVin_Result>("CarLockbyVin", vinParameter, ordernoParameter, dealercodeParameter);
        }
    
        public virtual ObjectResult<CarLockTest_Result> CarLockTest(string orderno, string dealercode, string pno18)
        {
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            var dealercodeParameter = dealercode != null ?
                new ObjectParameter("dealercode", dealercode) :
                new ObjectParameter("dealercode", typeof(string));
    
            var pno18Parameter = pno18 != null ?
                new ObjectParameter("pno18", pno18) :
                new ObjectParameter("pno18", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarLockTest_Result>("CarLockTest", ordernoParameter, dealercodeParameter, pno18Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CarUnLock(string orderno)
        {
            var ordernoParameter = orderno != null ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CarUnLock", ordernoParameter);
        }
    
        public virtual ObjectResult<ClmBudgetCostDistribution_Result> ClmBudgetCostDistribution(string countryCode, string vTypeCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var vTypeCodeParameter = vTypeCode != null ?
                new ObjectParameter("VTypeCode", vTypeCode) :
                new ObjectParameter("VTypeCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClmBudgetCostDistribution_Result>("ClmBudgetCostDistribution", countryCodeParameter, vTypeCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ClmBudgetMonitoringReport_Result> ClmBudgetMonitoringReport(Nullable<int> countyId, string vehicleType, string year)
        {
            var countyIdParameter = countyId.HasValue ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(int));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClmBudgetMonitoringReport_Result>("ClmBudgetMonitoringReport", countyIdParameter, vehicleTypeParameter, yearParameter);
        }
    
        public virtual int DdDRODataAdd()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DdDRODataAdd");
        }
    
        public virtual int DeliverCar(string country, string province, string city, string dealer, Nullable<System.DateTime> deliveryOnStart, Nullable<System.DateTime> deliveryOnEnd, string vehicleType, string serviceAdvisor)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var deliveryOnStartParameter = deliveryOnStart.HasValue ?
                new ObjectParameter("DeliveryOnStart", deliveryOnStart) :
                new ObjectParameter("DeliveryOnStart", typeof(System.DateTime));
    
            var deliveryOnEndParameter = deliveryOnEnd.HasValue ?
                new ObjectParameter("DeliveryOnEnd", deliveryOnEnd) :
                new ObjectParameter("DeliveryOnEnd", typeof(System.DateTime));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var serviceAdvisorParameter = serviceAdvisor != null ?
                new ObjectParameter("ServiceAdvisor", serviceAdvisor) :
                new ObjectParameter("ServiceAdvisor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliverCar", countryParameter, provinceParameter, cityParameter, dealerParameter, deliveryOnStartParameter, deliveryOnEndParameter, vehicleTypeParameter, serviceAdvisorParameter);
        }
    
        public virtual int DeliveryLineUp(string rono, string dealrecode, string pno18, Nullable<int> lockMode, ObjectParameter iD, ObjectParameter order1, ObjectParameter order2)
        {
            var ronoParameter = rono != null ?
                new ObjectParameter("rono", rono) :
                new ObjectParameter("rono", typeof(string));
    
            var dealrecodeParameter = dealrecode != null ?
                new ObjectParameter("dealrecode", dealrecode) :
                new ObjectParameter("dealrecode", typeof(string));
    
            var pno18Parameter = pno18 != null ?
                new ObjectParameter("pno18", pno18) :
                new ObjectParameter("pno18", typeof(string));
    
            var lockModeParameter = lockMode.HasValue ?
                new ObjectParameter("LockMode", lockMode) :
                new ObjectParameter("LockMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliveryLineUp", ronoParameter, dealrecodeParameter, pno18Parameter, lockModeParameter, iD, order1, order2);
        }
    
        public virtual int DeliveryTime(string dealrecode, string pno18, string pono, ObjectParameter deliveryDay, ObjectParameter deliveryWeek)
        {
            var dealrecodeParameter = dealrecode != null ?
                new ObjectParameter("dealrecode", dealrecode) :
                new ObjectParameter("dealrecode", typeof(string));
    
            var pno18Parameter = pno18 != null ?
                new ObjectParameter("pno18", pno18) :
                new ObjectParameter("pno18", typeof(string));
    
            var ponoParameter = pono != null ?
                new ObjectParameter("pono", pono) :
                new ObjectParameter("pono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliveryTime", dealrecodeParameter, pno18Parameter, ponoParameter, deliveryDay, deliveryWeek);
        }
    
        public virtual ObjectResult<ExchangeSO_Result> ExchangeSO(string rO, string sO)
        {
            var rOParameter = rO != null ?
                new ObjectParameter("RO", rO) :
                new ObjectParameter("RO", typeof(string));
    
            var sOParameter = sO != null ?
                new ObjectParameter("SO", sO) :
                new ObjectParameter("SO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExchangeSO_Result>("ExchangeSO", rOParameter, sOParameter);
        }
    
        public virtual int FDimDate(string begin_date, string end_date)
        {
            var begin_dateParameter = begin_date != null ?
                new ObjectParameter("begin_date", begin_date) :
                new ObjectParameter("begin_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FDimDate", begin_dateParameter, end_dateParameter);
        }
    
        public virtual int FFactClue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FFactClue");
        }
    
        public virtual int FFactFlow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FFactFlow");
        }
    
        public virtual int FSaDimConsultant()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSaDimConsultant");
        }
    
        public virtual int FSumWeekChannel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSumWeekChannel");
        }
    
        public virtual int FSumWeekWeb()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSumWeekWeb");
        }
    
        public virtual int GenerateEntrustPickInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateEntrustPickInfo");
        }
    
        public virtual int GetClmCampaignStatisticsView(string bigAreaIds, string smalAreaIds, string provinceIds)
        {
            var bigAreaIdsParameter = bigAreaIds != null ?
                new ObjectParameter("BigAreaIds", bigAreaIds) :
                new ObjectParameter("BigAreaIds", typeof(string));
    
            var smalAreaIdsParameter = smalAreaIds != null ?
                new ObjectParameter("SmalAreaIds", smalAreaIds) :
                new ObjectParameter("SmalAreaIds", typeof(string));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetClmCampaignStatisticsView", bigAreaIdsParameter, smalAreaIdsParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetClmCampaignView_Result> GetClmCampaignView(Nullable<long> dealerId)
        {
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClmCampaignView_Result>("GetClmCampaignView", dealerIdParameter);
        }
    
        public virtual ObjectResult<GetEdmModelInfo_Result> GetEdmModelInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmModelInfo_Result>("GetEdmModelInfo");
        }
    
        public virtual ObjectResult<GetEdmRelationship_Result> GetEdmRelationship()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmRelationship_Result>("GetEdmRelationship");
        }
    
        public virtual ObjectResult<GetEdmSPInfo_Result> GetEdmSPInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmSPInfo_Result>("GetEdmSPInfo");
        }
    
        public virtual ObjectResult<GetEdmSPResultSet_Result> GetEdmSPResultSet(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmSPResultSet_Result>("GetEdmSPResultSet", nameParameter);
        }
    
        public virtual ObjectResult<GetEdmTVFInfo_Result> GetEdmTVFInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmTVFInfo_Result>("GetEdmTVFInfo");
        }
    
        public virtual ObjectResult<GetEdmTVFResultSet_Result> GetEdmTVFResultSet(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmTVFResultSet_Result>("GetEdmTVFResultSet", nameParameter);
        }
    
        public virtual ObjectResult<GetEdmUDTInfo_Result> GetEdmUDTInfo(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEdmUDTInfo_Result>("GetEdmUDTInfo", nameParameter);
        }
    
        public virtual ObjectResult<GetImportTaskModule_Result> GetImportTaskModule(Nullable<long> taskTypeId, Nullable<long> dealerId)
        {
            var taskTypeIdParameter = taskTypeId.HasValue ?
                new ObjectParameter("TaskTypeId", taskTypeId) :
                new ObjectParameter("TaskTypeId", typeof(long));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetImportTaskModule_Result>("GetImportTaskModule", taskTypeIdParameter, dealerIdParameter);
        }
    
        public virtual ObjectResult<GetImportTaskType_Result> GetImportTaskType(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetImportTaskType_Result>("GetImportTaskType", userIdParameter);
        }
    
        public virtual int GetSpmDealerSalesReport(string startDate, string endDate, string dealerCode, string groupCode)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSpmDealerSalesReport", startDateParameter, endDateParameter, dealerCodeParameter, groupCodeParameter);
        }
    
        public virtual int GetSpmDealerSalesReport_SSRS(string startDate, string endDate, string dealerCode, string groupCode)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSpmDealerSalesReport_SSRS", startDateParameter, endDateParameter, dealerCodeParameter, groupCodeParameter);
        }
    
        public virtual int GetSpmDealerSalesTrackReport(string startDate, string endDate, string dealerCode, string groupCode)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("GroupCode", groupCode) :
                new ObjectParameter("GroupCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSpmDealerSalesTrackReport", startDateParameter, endDateParameter, dealerCodeParameter, groupCodeParameter);
        }
    
        public virtual ObjectResult<GetUserInfo_Result> GetUserInfo(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserInfo_Result>("GetUserInfo", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserMenu_Result> GetUserMenu(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserMenu_Result>("GetUserMenu", userIdParameter);
        }
    
        public virtual int InsertVehMatchesConcurrentPro(string sONO, string pONO, string pNO, Nullable<long> dealerId, Nullable<long> companyId, Nullable<long> createdBy)
        {
            var sONOParameter = sONO != null ?
                new ObjectParameter("SONO", sONO) :
                new ObjectParameter("SONO", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var pNOParameter = pNO != null ?
                new ObjectParameter("PNO", pNO) :
                new ObjectParameter("PNO", typeof(string));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(long));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertVehMatchesConcurrentPro", sONOParameter, pONOParameter, pNOParameter, dealerIdParameter, companyIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<ODataPermissionPro_Result> ODataPermissionPro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ODataPermissionPro_Result>("ODataPermissionPro");
        }
    
        public virtual int p_ETLCRMToCEPLog(string taskName, string taskExeType, Nullable<System.DateTime> taskStartTime, Nullable<System.DateTime> taskEndTime, string comments)
        {
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var taskExeTypeParameter = taskExeType != null ?
                new ObjectParameter("TaskExeType", taskExeType) :
                new ObjectParameter("TaskExeType", typeof(string));
    
            var taskStartTimeParameter = taskStartTime.HasValue ?
                new ObjectParameter("TaskStartTime", taskStartTime) :
                new ObjectParameter("TaskStartTime", typeof(System.DateTime));
    
            var taskEndTimeParameter = taskEndTime.HasValue ?
                new ObjectParameter("TaskEndTime", taskEndTime) :
                new ObjectParameter("TaskEndTime", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_ETLCRMToCEPLog", taskNameParameter, taskExeTypeParameter, taskStartTimeParameter, taskEndTimeParameter, commentsParameter);
        }
    
        public virtual int PatchUpPickupData(string mainPart, string childPart)
        {
            var mainPartParameter = mainPart != null ?
                new ObjectParameter("MainPart", mainPart) :
                new ObjectParameter("MainPart", typeof(string));
    
            var childPartParameter = childPart != null ?
                new ObjectParameter("ChildPart", childPart) :
                new ObjectParameter("ChildPart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PatchUpPickupData", mainPartParameter, childPartParameter);
        }
    
        public virtual int ProcQueryServiceProxyCTI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcQueryServiceProxyCTI");
        }
    
        public virtual int RefreshAllView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshAllView");
        }
    
        public virtual int RefreshAllViewNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshAllViewNew");
        }
    
        public virtual int ReportsTwoZeroOneThree(string poType, string wmNo, string partNo, string cardNo, Nullable<System.DateTime> createdOnStart, Nullable<System.DateTime> createdOnEnd, string dealerCode, string fullName, string nameCn, string sONo)
        {
            var poTypeParameter = poType != null ?
                new ObjectParameter("PoType", poType) :
                new ObjectParameter("PoType", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var cardNoParameter = cardNo != null ?
                new ObjectParameter("CardNo", cardNo) :
                new ObjectParameter("CardNo", typeof(string));
    
            var createdOnStartParameter = createdOnStart.HasValue ?
                new ObjectParameter("CreatedOnStart", createdOnStart) :
                new ObjectParameter("CreatedOnStart", typeof(System.DateTime));
    
            var createdOnEndParameter = createdOnEnd.HasValue ?
                new ObjectParameter("CreatedOnEnd", createdOnEnd) :
                new ObjectParameter("CreatedOnEnd", typeof(System.DateTime));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var nameCnParameter = nameCn != null ?
                new ObjectParameter("NameCn", nameCn) :
                new ObjectParameter("NameCn", typeof(string));
    
            var sONoParameter = sONo != null ?
                new ObjectParameter("SONo", sONo) :
                new ObjectParameter("SONo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportsTwoZeroOneThree", poTypeParameter, wmNoParameter, partNoParameter, cardNoParameter, createdOnStartParameter, createdOnEndParameter, dealerCodeParameter, fullNameParameter, nameCnParameter, sONoParameter);
        }
    
        public virtual int Rethrow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rethrow");
        }
    
        public virtual int RpAbsoluteFault(string country, string province, string city, string dealer, string pSSCode, string fGCode, string parts, string cSC, string vIN, Nullable<System.DateTime> productionTimeStart, Nullable<System.DateTime> productionTimeEnd, Nullable<System.DateTime> repairTimeStart, Nullable<System.DateTime> repairTimeEnd, Nullable<int> mileageStart, Nullable<int> mileageEnd, Nullable<System.DateTime> approvalDateStart, Nullable<System.DateTime> approvalDateEnd, string measureType, string measureCode, Nullable<System.DateTime> measureDate, string measureUseing, string measureCode_Insert, string measureDescription, Nullable<int> maxMileage_Y, string deleteingMeasureLine)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var pSSCodeParameter = pSSCode != null ?
                new ObjectParameter("PSSCode", pSSCode) :
                new ObjectParameter("PSSCode", typeof(string));
    
            var fGCodeParameter = fGCode != null ?
                new ObjectParameter("FGCode", fGCode) :
                new ObjectParameter("FGCode", typeof(string));
    
            var partsParameter = parts != null ?
                new ObjectParameter("Parts", parts) :
                new ObjectParameter("Parts", typeof(string));
    
            var cSCParameter = cSC != null ?
                new ObjectParameter("CSC", cSC) :
                new ObjectParameter("CSC", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var productionTimeStartParameter = productionTimeStart.HasValue ?
                new ObjectParameter("ProductionTimeStart", productionTimeStart) :
                new ObjectParameter("ProductionTimeStart", typeof(System.DateTime));
    
            var productionTimeEndParameter = productionTimeEnd.HasValue ?
                new ObjectParameter("ProductionTimeEnd", productionTimeEnd) :
                new ObjectParameter("ProductionTimeEnd", typeof(System.DateTime));
    
            var repairTimeStartParameter = repairTimeStart.HasValue ?
                new ObjectParameter("RepairTimeStart", repairTimeStart) :
                new ObjectParameter("RepairTimeStart", typeof(System.DateTime));
    
            var repairTimeEndParameter = repairTimeEnd.HasValue ?
                new ObjectParameter("RepairTimeEnd", repairTimeEnd) :
                new ObjectParameter("RepairTimeEnd", typeof(System.DateTime));
    
            var mileageStartParameter = mileageStart.HasValue ?
                new ObjectParameter("MileageStart", mileageStart) :
                new ObjectParameter("MileageStart", typeof(int));
    
            var mileageEndParameter = mileageEnd.HasValue ?
                new ObjectParameter("MileageEnd", mileageEnd) :
                new ObjectParameter("MileageEnd", typeof(int));
    
            var approvalDateStartParameter = approvalDateStart.HasValue ?
                new ObjectParameter("ApprovalDateStart", approvalDateStart) :
                new ObjectParameter("ApprovalDateStart", typeof(System.DateTime));
    
            var approvalDateEndParameter = approvalDateEnd.HasValue ?
                new ObjectParameter("ApprovalDateEnd", approvalDateEnd) :
                new ObjectParameter("ApprovalDateEnd", typeof(System.DateTime));
    
            var measureTypeParameter = measureType != null ?
                new ObjectParameter("MeasureType", measureType) :
                new ObjectParameter("MeasureType", typeof(string));
    
            var measureCodeParameter = measureCode != null ?
                new ObjectParameter("MeasureCode", measureCode) :
                new ObjectParameter("MeasureCode", typeof(string));
    
            var measureDateParameter = measureDate.HasValue ?
                new ObjectParameter("MeasureDate", measureDate) :
                new ObjectParameter("MeasureDate", typeof(System.DateTime));
    
            var measureUseingParameter = measureUseing != null ?
                new ObjectParameter("MeasureUseing", measureUseing) :
                new ObjectParameter("MeasureUseing", typeof(string));
    
            var measureCode_InsertParameter = measureCode_Insert != null ?
                new ObjectParameter("MeasureCode_Insert", measureCode_Insert) :
                new ObjectParameter("MeasureCode_Insert", typeof(string));
    
            var measureDescriptionParameter = measureDescription != null ?
                new ObjectParameter("MeasureDescription", measureDescription) :
                new ObjectParameter("MeasureDescription", typeof(string));
    
            var maxMileage_YParameter = maxMileage_Y.HasValue ?
                new ObjectParameter("MaxMileage_Y", maxMileage_Y) :
                new ObjectParameter("MaxMileage_Y", typeof(int));
    
            var deleteingMeasureLineParameter = deleteingMeasureLine != null ?
                new ObjectParameter("DeleteingMeasureLine", deleteingMeasureLine) :
                new ObjectParameter("DeleteingMeasureLine", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RpAbsoluteFault", countryParameter, provinceParameter, cityParameter, dealerParameter, pSSCodeParameter, fGCodeParameter, partsParameter, cSCParameter, vINParameter, productionTimeStartParameter, productionTimeEndParameter, repairTimeStartParameter, repairTimeEndParameter, mileageStartParameter, mileageEndParameter, approvalDateStartParameter, approvalDateEndParameter, measureTypeParameter, measureCodeParameter, measureDateParameter, measureUseingParameter, measureCode_InsertParameter, measureDescriptionParameter, maxMileage_YParameter, deleteingMeasureLineParameter);
        }
    
        public virtual int RpAbsoluteFaultPolyline(string country, string province, string city, string dealer, string pSSCode, string fGCode, string parts, string cSC, string vIN, Nullable<System.DateTime> productionTimeStart, Nullable<System.DateTime> productionTimeEnd, Nullable<System.DateTime> repairTimeStart, Nullable<System.DateTime> repairTimeEnd, Nullable<int> mileageStart, Nullable<int> mileageEnd, string intervalType_X, Nullable<int> interval_X)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var pSSCodeParameter = pSSCode != null ?
                new ObjectParameter("PSSCode", pSSCode) :
                new ObjectParameter("PSSCode", typeof(string));
    
            var fGCodeParameter = fGCode != null ?
                new ObjectParameter("FGCode", fGCode) :
                new ObjectParameter("FGCode", typeof(string));
    
            var partsParameter = parts != null ?
                new ObjectParameter("Parts", parts) :
                new ObjectParameter("Parts", typeof(string));
    
            var cSCParameter = cSC != null ?
                new ObjectParameter("CSC", cSC) :
                new ObjectParameter("CSC", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var productionTimeStartParameter = productionTimeStart.HasValue ?
                new ObjectParameter("ProductionTimeStart", productionTimeStart) :
                new ObjectParameter("ProductionTimeStart", typeof(System.DateTime));
    
            var productionTimeEndParameter = productionTimeEnd.HasValue ?
                new ObjectParameter("ProductionTimeEnd", productionTimeEnd) :
                new ObjectParameter("ProductionTimeEnd", typeof(System.DateTime));
    
            var repairTimeStartParameter = repairTimeStart.HasValue ?
                new ObjectParameter("RepairTimeStart", repairTimeStart) :
                new ObjectParameter("RepairTimeStart", typeof(System.DateTime));
    
            var repairTimeEndParameter = repairTimeEnd.HasValue ?
                new ObjectParameter("RepairTimeEnd", repairTimeEnd) :
                new ObjectParameter("RepairTimeEnd", typeof(System.DateTime));
    
            var mileageStartParameter = mileageStart.HasValue ?
                new ObjectParameter("MileageStart", mileageStart) :
                new ObjectParameter("MileageStart", typeof(int));
    
            var mileageEndParameter = mileageEnd.HasValue ?
                new ObjectParameter("MileageEnd", mileageEnd) :
                new ObjectParameter("MileageEnd", typeof(int));
    
            var intervalType_XParameter = intervalType_X != null ?
                new ObjectParameter("IntervalType_X", intervalType_X) :
                new ObjectParameter("IntervalType_X", typeof(string));
    
            var interval_XParameter = interval_X.HasValue ?
                new ObjectParameter("Interval_X", interval_X) :
                new ObjectParameter("Interval_X", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RpAbsoluteFaultPolyline", countryParameter, provinceParameter, cityParameter, dealerParameter, pSSCodeParameter, fGCodeParameter, partsParameter, cSCParameter, vINParameter, productionTimeStartParameter, productionTimeEndParameter, repairTimeStartParameter, repairTimeEndParameter, mileageStartParameter, mileageEndParameter, intervalType_XParameter, interval_XParameter);
        }
    
        public virtual int RpAbsoluteFaultPolylineByPartNo(string country, string province, string city, string dealer, string pSSCode, string fGCode, string parts, string cSC, string vIN, Nullable<System.DateTime> productionTimeStart, Nullable<System.DateTime> productionTimeEnd, Nullable<System.DateTime> repairTimeStart, Nullable<System.DateTime> repairTimeEnd, Nullable<int> mileageStart, Nullable<int> mileageEnd, string intervalType_X, Nullable<int> interval_X, string measureCode, Nullable<int> maxHighPolyline_Y)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var pSSCodeParameter = pSSCode != null ?
                new ObjectParameter("PSSCode", pSSCode) :
                new ObjectParameter("PSSCode", typeof(string));
    
            var fGCodeParameter = fGCode != null ?
                new ObjectParameter("FGCode", fGCode) :
                new ObjectParameter("FGCode", typeof(string));
    
            var partsParameter = parts != null ?
                new ObjectParameter("Parts", parts) :
                new ObjectParameter("Parts", typeof(string));
    
            var cSCParameter = cSC != null ?
                new ObjectParameter("CSC", cSC) :
                new ObjectParameter("CSC", typeof(string));
    
            var vINParameter = vIN != null ?
                new ObjectParameter("VIN", vIN) :
                new ObjectParameter("VIN", typeof(string));
    
            var productionTimeStartParameter = productionTimeStart.HasValue ?
                new ObjectParameter("ProductionTimeStart", productionTimeStart) :
                new ObjectParameter("ProductionTimeStart", typeof(System.DateTime));
    
            var productionTimeEndParameter = productionTimeEnd.HasValue ?
                new ObjectParameter("ProductionTimeEnd", productionTimeEnd) :
                new ObjectParameter("ProductionTimeEnd", typeof(System.DateTime));
    
            var repairTimeStartParameter = repairTimeStart.HasValue ?
                new ObjectParameter("RepairTimeStart", repairTimeStart) :
                new ObjectParameter("RepairTimeStart", typeof(System.DateTime));
    
            var repairTimeEndParameter = repairTimeEnd.HasValue ?
                new ObjectParameter("RepairTimeEnd", repairTimeEnd) :
                new ObjectParameter("RepairTimeEnd", typeof(System.DateTime));
    
            var mileageStartParameter = mileageStart.HasValue ?
                new ObjectParameter("MileageStart", mileageStart) :
                new ObjectParameter("MileageStart", typeof(int));
    
            var mileageEndParameter = mileageEnd.HasValue ?
                new ObjectParameter("MileageEnd", mileageEnd) :
                new ObjectParameter("MileageEnd", typeof(int));
    
            var intervalType_XParameter = intervalType_X != null ?
                new ObjectParameter("IntervalType_X", intervalType_X) :
                new ObjectParameter("IntervalType_X", typeof(string));
    
            var interval_XParameter = interval_X.HasValue ?
                new ObjectParameter("Interval_X", interval_X) :
                new ObjectParameter("Interval_X", typeof(int));
    
            var measureCodeParameter = measureCode != null ?
                new ObjectParameter("MeasureCode", measureCode) :
                new ObjectParameter("MeasureCode", typeof(string));
    
            var maxHighPolyline_YParameter = maxHighPolyline_Y.HasValue ?
                new ObjectParameter("MaxHighPolyline_Y", maxHighPolyline_Y) :
                new ObjectParameter("MaxHighPolyline_Y", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RpAbsoluteFaultPolylineByPartNo", countryParameter, provinceParameter, cityParameter, dealerParameter, pSSCodeParameter, fGCodeParameter, partsParameter, cSCParameter, vINParameter, productionTimeStartParameter, productionTimeEndParameter, repairTimeStartParameter, repairTimeEndParameter, mileageStartParameter, mileageEndParameter, intervalType_XParameter, interval_XParameter, measureCodeParameter, maxHighPolyline_YParameter);
        }
    
        public virtual int RpGLDSAbsoluteFault(string dealer, Nullable<System.DateTime> repairTimeStart, Nullable<System.DateTime> repairTimeEnd, Nullable<int> mileageStart, Nullable<int> mileageEnd, Nullable<System.DateTime> measureDate, string measureUseing, string measureCode_Insert, string measureDescription, string deleteingMeasureLine, string eCU, string dTC, string vehicleModel, string vehicleSeries, Nullable<int> maxMileage_Y, string measureCode)
        {
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var repairTimeStartParameter = repairTimeStart.HasValue ?
                new ObjectParameter("RepairTimeStart", repairTimeStart) :
                new ObjectParameter("RepairTimeStart", typeof(System.DateTime));
    
            var repairTimeEndParameter = repairTimeEnd.HasValue ?
                new ObjectParameter("RepairTimeEnd", repairTimeEnd) :
                new ObjectParameter("RepairTimeEnd", typeof(System.DateTime));
    
            var mileageStartParameter = mileageStart.HasValue ?
                new ObjectParameter("MileageStart", mileageStart) :
                new ObjectParameter("MileageStart", typeof(int));
    
            var mileageEndParameter = mileageEnd.HasValue ?
                new ObjectParameter("MileageEnd", mileageEnd) :
                new ObjectParameter("MileageEnd", typeof(int));
    
            var measureDateParameter = measureDate.HasValue ?
                new ObjectParameter("MeasureDate", measureDate) :
                new ObjectParameter("MeasureDate", typeof(System.DateTime));
    
            var measureUseingParameter = measureUseing != null ?
                new ObjectParameter("MeasureUseing", measureUseing) :
                new ObjectParameter("MeasureUseing", typeof(string));
    
            var measureCode_InsertParameter = measureCode_Insert != null ?
                new ObjectParameter("MeasureCode_Insert", measureCode_Insert) :
                new ObjectParameter("MeasureCode_Insert", typeof(string));
    
            var measureDescriptionParameter = measureDescription != null ?
                new ObjectParameter("MeasureDescription", measureDescription) :
                new ObjectParameter("MeasureDescription", typeof(string));
    
            var deleteingMeasureLineParameter = deleteingMeasureLine != null ?
                new ObjectParameter("DeleteingMeasureLine", deleteingMeasureLine) :
                new ObjectParameter("DeleteingMeasureLine", typeof(string));
    
            var eCUParameter = eCU != null ?
                new ObjectParameter("ECU", eCU) :
                new ObjectParameter("ECU", typeof(string));
    
            var dTCParameter = dTC != null ?
                new ObjectParameter("DTC", dTC) :
                new ObjectParameter("DTC", typeof(string));
    
            var vehicleModelParameter = vehicleModel != null ?
                new ObjectParameter("VehicleModel", vehicleModel) :
                new ObjectParameter("VehicleModel", typeof(string));
    
            var vehicleSeriesParameter = vehicleSeries != null ?
                new ObjectParameter("VehicleSeries", vehicleSeries) :
                new ObjectParameter("VehicleSeries", typeof(string));
    
            var maxMileage_YParameter = maxMileage_Y.HasValue ?
                new ObjectParameter("MaxMileage_Y", maxMileage_Y) :
                new ObjectParameter("MaxMileage_Y", typeof(int));
    
            var measureCodeParameter = measureCode != null ?
                new ObjectParameter("MeasureCode", measureCode) :
                new ObjectParameter("MeasureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RpGLDSAbsoluteFault", dealerParameter, repairTimeStartParameter, repairTimeEndParameter, mileageStartParameter, mileageEndParameter, measureDateParameter, measureUseingParameter, measureCode_InsertParameter, measureDescriptionParameter, deleteingMeasureLineParameter, eCUParameter, dTCParameter, vehicleModelParameter, vehicleSeriesParameter, maxMileage_YParameter, measureCodeParameter);
        }
    
        public virtual int RpReceptionProcess(string dealer, string mileageStart, string mileageEnd, Nullable<System.DateTime> dateRangeStart, Nullable<System.DateTime> dateRangeEnd, string serviceAdvisor, string vehicleType, string vehicleAgeStar, string vehicleAgeEnd, string appointmentType)
        {
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var mileageStartParameter = mileageStart != null ?
                new ObjectParameter("MileageStart", mileageStart) :
                new ObjectParameter("MileageStart", typeof(string));
    
            var mileageEndParameter = mileageEnd != null ?
                new ObjectParameter("MileageEnd", mileageEnd) :
                new ObjectParameter("MileageEnd", typeof(string));
    
            var dateRangeStartParameter = dateRangeStart.HasValue ?
                new ObjectParameter("DateRangeStart", dateRangeStart) :
                new ObjectParameter("DateRangeStart", typeof(System.DateTime));
    
            var dateRangeEndParameter = dateRangeEnd.HasValue ?
                new ObjectParameter("DateRangeEnd", dateRangeEnd) :
                new ObjectParameter("DateRangeEnd", typeof(System.DateTime));
    
            var serviceAdvisorParameter = serviceAdvisor != null ?
                new ObjectParameter("ServiceAdvisor", serviceAdvisor) :
                new ObjectParameter("ServiceAdvisor", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var vehicleAgeStarParameter = vehicleAgeStar != null ?
                new ObjectParameter("VehicleAgeStar", vehicleAgeStar) :
                new ObjectParameter("VehicleAgeStar", typeof(string));
    
            var vehicleAgeEndParameter = vehicleAgeEnd != null ?
                new ObjectParameter("VehicleAgeEnd", vehicleAgeEnd) :
                new ObjectParameter("VehicleAgeEnd", typeof(string));
    
            var appointmentTypeParameter = appointmentType != null ?
                new ObjectParameter("AppointmentType", appointmentType) :
                new ObjectParameter("AppointmentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RpReceptionProcess", dealerParameter, mileageStartParameter, mileageEndParameter, dateRangeStartParameter, dateRangeEndParameter, serviceAdvisorParameter, vehicleTypeParameter, vehicleAgeStarParameter, vehicleAgeEndParameter, appointmentTypeParameter);
        }
    
        public virtual int RpSolicitReservation(string dealer, string mileageStart, string mileageEnd, Nullable<System.DateTime> dateRangeStart, Nullable<System.DateTime> dateRangeEnd, string serviceAdvisor, string vehicleType, string vehicleAgeStar, string vehicleAgeEnd, string appointmentChannel, string appointmentType)
        {
            var dealerParameter = dealer != null ?
                new ObjectParameter("Dealer", dealer) :
                new ObjectParameter("Dealer", typeof(string));
    
            var mileageStartParameter = mileageStart != null ?
                new ObjectParameter("MileageStart", mileageStart) :
                new ObjectParameter("MileageStart", typeof(string));
    
            var mileageEndParameter = mileageEnd != null ?
                new ObjectParameter("MileageEnd", mileageEnd) :
                new ObjectParameter("MileageEnd", typeof(string));
    
            var dateRangeStartParameter = dateRangeStart.HasValue ?
                new ObjectParameter("DateRangeStart", dateRangeStart) :
                new ObjectParameter("DateRangeStart", typeof(System.DateTime));
    
            var dateRangeEndParameter = dateRangeEnd.HasValue ?
                new ObjectParameter("DateRangeEnd", dateRangeEnd) :
                new ObjectParameter("DateRangeEnd", typeof(System.DateTime));
    
            var serviceAdvisorParameter = serviceAdvisor != null ?
                new ObjectParameter("ServiceAdvisor", serviceAdvisor) :
                new ObjectParameter("ServiceAdvisor", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));
    
            var vehicleAgeStarParameter = vehicleAgeStar != null ?
                new ObjectParameter("VehicleAgeStar", vehicleAgeStar) :
                new ObjectParameter("VehicleAgeStar", typeof(string));
    
            var vehicleAgeEndParameter = vehicleAgeEnd != null ?
                new ObjectParameter("VehicleAgeEnd", vehicleAgeEnd) :
                new ObjectParameter("VehicleAgeEnd", typeof(string));
    
            var appointmentChannelParameter = appointmentChannel != null ?
                new ObjectParameter("AppointmentChannel", appointmentChannel) :
                new ObjectParameter("AppointmentChannel", typeof(string));
    
            var appointmentTypeParameter = appointmentType != null ?
                new ObjectParameter("AppointmentType", appointmentType) :
                new ObjectParameter("AppointmentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RpSolicitReservation", dealerParameter, mileageStartParameter, mileageEndParameter, dateRangeStartParameter, dateRangeEndParameter, serviceAdvisorParameter, vehicleTypeParameter, vehicleAgeStarParameter, vehicleAgeEndParameter, appointmentChannelParameter, appointmentTypeParameter);
        }
    
        public virtual int RptBoPartDetailTime(string dealerCode, Nullable<System.DateTime> monthStart, Nullable<System.DateTime> monthEnd)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("dealerCode", dealerCode) :
                new ObjectParameter("dealerCode", typeof(string));
    
            var monthStartParameter = monthStart.HasValue ?
                new ObjectParameter("monthStart", monthStart) :
                new ObjectParameter("monthStart", typeof(System.DateTime));
    
            var monthEndParameter = monthEnd.HasValue ?
                new ObjectParameter("monthEnd", monthEnd) :
                new ObjectParameter("monthEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptBoPartDetailTime", dealerCodeParameter, monthStartParameter, monthEndParameter);
        }
    
        public virtual int RptCreateSluggishPiece(string dTStr)
        {
            var dTStrParameter = dTStr != null ?
                new ObjectParameter("DTStr", dTStr) :
                new ObjectParameter("DTStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptCreateSluggishPiece", dTStrParameter);
        }
    
        public virtual int RptFrRptDealerCostCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFrRptDealerCostCreate");
        }
    
        public virtual int RptFrRptDealerNumCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFrRptDealerNumCreate");
        }
    
        public virtual int RptFrRptDealerOutValCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFrRptDealerOutValCreate");
        }
    
        public virtual int RptFrRptHistorySales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFrRptHistorySales");
        }
    
        public virtual int RptFrRptProduction()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFrRptProduction");
        }
    
        public virtual int RptFrRptResponseDataCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFrRptResponseDataCreate");
        }
    
        public virtual int RptGetArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetArea");
        }
    
        public virtual int RptGetBusinessAging()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetBusinessAging");
        }
    
        public virtual int RptGetCarStock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetCarStock");
        }
    
        public virtual int RptGetCollarDailyInvoicing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetCollarDailyInvoicing");
        }
    
        public virtual int RptGetFrRptDealerCalc(string dealerCode, string dateStart, string dateEnd, string cate, Nullable<int> ty)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(string));
    
            var cateParameter = cate != null ?
                new ObjectParameter("Cate", cate) :
                new ObjectParameter("Cate", typeof(string));
    
            var tyParameter = ty.HasValue ?
                new ObjectParameter("Ty", ty) :
                new ObjectParameter("Ty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetFrRptDealerCalc", dealerCodeParameter, dateStartParameter, dateEndParameter, cateParameter, tyParameter);
        }
    
        public virtual int RptGetMdmDealer(string dealerCode, Nullable<int> provinceId, Nullable<int> cityID, Nullable<int> bigAreaId, Nullable<int> smallAreaId, string orderBy, string dealerCodes, string provinceIds, string cityIDs, string bigAreaIds, string smallAreaIds)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var bigAreaIdParameter = bigAreaId.HasValue ?
                new ObjectParameter("BigAreaId", bigAreaId) :
                new ObjectParameter("BigAreaId", typeof(int));
    
            var smallAreaIdParameter = smallAreaId.HasValue ?
                new ObjectParameter("SmallAreaId", smallAreaId) :
                new ObjectParameter("SmallAreaId", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var dealerCodesParameter = dealerCodes != null ?
                new ObjectParameter("DealerCodes", dealerCodes) :
                new ObjectParameter("DealerCodes", typeof(string));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            var cityIDsParameter = cityIDs != null ?
                new ObjectParameter("CityIDs", cityIDs) :
                new ObjectParameter("CityIDs", typeof(string));
    
            var bigAreaIdsParameter = bigAreaIds != null ?
                new ObjectParameter("BigAreaIds", bigAreaIds) :
                new ObjectParameter("BigAreaIds", typeof(string));
    
            var smallAreaIdsParameter = smallAreaIds != null ?
                new ObjectParameter("SmallAreaIds", smallAreaIds) :
                new ObjectParameter("SmallAreaIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetMdmDealer", dealerCodeParameter, provinceIdParameter, cityIDParameter, bigAreaIdParameter, smallAreaIdParameter, orderByParameter, dealerCodesParameter, provinceIdsParameter, cityIDsParameter, bigAreaIdsParameter, smallAreaIdsParameter);
        }
    
        public virtual int RptGetSPInventoryTurnover(string dealerCode, Nullable<int> provinceId, Nullable<int> cityID, Nullable<int> bigAreaId, Nullable<int> smallAreaId, string dateStart, string dateEnd)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var bigAreaIdParameter = bigAreaId.HasValue ?
                new ObjectParameter("BigAreaId", bigAreaId) :
                new ObjectParameter("BigAreaId", typeof(int));
    
            var smallAreaIdParameter = smallAreaId.HasValue ?
                new ObjectParameter("SmallAreaId", smallAreaId) :
                new ObjectParameter("SmallAreaId", typeof(int));
    
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetSPInventoryTurnover", dealerCodeParameter, provinceIdParameter, cityIDParameter, bigAreaIdParameter, smallAreaIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptGetStationTurnover(string dealerCode, Nullable<int> provinceId, Nullable<int> cityID, Nullable<int> bigAreaId, Nullable<int> smallAreaId, string dateStart, string dateEnd)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var bigAreaIdParameter = bigAreaId.HasValue ?
                new ObjectParameter("BigAreaId", bigAreaId) :
                new ObjectParameter("BigAreaId", typeof(int));
    
            var smallAreaIdParameter = smallAreaId.HasValue ?
                new ObjectParameter("SmallAreaId", smallAreaId) :
                new ObjectParameter("SmallAreaId", typeof(int));
    
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetStationTurnover", dealerCodeParameter, provinceIdParameter, cityIDParameter, bigAreaIdParameter, smallAreaIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptGetSvcOutput(string dealerCode, Nullable<int> provinceId, Nullable<int> cityID, Nullable<int> bigAreaId, Nullable<int> smallAreaId, string dateStart, string dateEnd)
        {
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var bigAreaIdParameter = bigAreaId.HasValue ?
                new ObjectParameter("BigAreaId", bigAreaId) :
                new ObjectParameter("BigAreaId", typeof(int));
    
            var smallAreaIdParameter = smallAreaId.HasValue ?
                new ObjectParameter("SmallAreaId", smallAreaId) :
                new ObjectParameter("SmallAreaId", typeof(int));
    
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetSvcOutput", dealerCodeParameter, provinceIdParameter, cityIDParameter, bigAreaIdParameter, smallAreaIdParameter, dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptGetTransDesc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetTransDesc");
        }
    
        public virtual int RptGetTransportation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptGetTransportation");
        }
    
        public virtual int RptInTheSettlement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptInTheSettlement");
        }
    
        public virtual int RptWarrantyNonWarrantyMonthlyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptWarrantyNonWarrantyMonthlyReport");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SpmAssembleOccupyPro(Nullable<long> businessNo, Nullable<int> type)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmAssembleOccupyPro", businessNoParameter, typeParameter);
        }
    
        public virtual ObjectResult<SpmBoCountRequire_Result> SpmBoCountRequire()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpmBoCountRequire_Result>("SpmBoCountRequire");
        }
    
        public virtual int SpmBorrowMaterialsDPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmBorrowMaterialsDPro", businessNoParameter);
        }
    
        public virtual int SpmBorrowMaterialsPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmBorrowMaterialsPro", businessNoParameter);
        }
    
        public virtual int SpmComplaintNotificationData(Nullable<long> notificationId, string companyNo, string wmNo, string partNo)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(long));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmComplaintNotificationData", notificationIdParameter, companyNoParameter, wmNoParameter, partNoParameter);
        }
    
        public virtual int SpmCountARNotificationData(Nullable<long> notificationId, Nullable<long> newNotificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(long));
    
            var newNotificationIdParameter = newNotificationId.HasValue ?
                new ObjectParameter("NewNotificationId", newNotificationId) :
                new ObjectParameter("NewNotificationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmCountARNotificationData", notificationIdParameter, newNotificationIdParameter);
        }
    
        public virtual int SpmCycleNotificationData(Nullable<int> type, Nullable<long> notificationId, string companyNo, string wmNo, string zoneNo, string dloc, string partNo)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(long));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var zoneNoParameter = zoneNo != null ?
                new ObjectParameter("ZoneNo", zoneNo) :
                new ObjectParameter("ZoneNo", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmCycleNotificationData", typeParameter, notificationIdParameter, companyNoParameter, wmNoParameter, zoneNoParameter, dlocParameter, partNoParameter);
        }
    
        public virtual ObjectResult<SpmDiffanalyseCountView_Result> SpmDiffanalyseCountView(Nullable<long> reportId)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("ReportId", reportId) :
                new ObjectParameter("ReportId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpmDiffanalyseCountView_Result>("SpmDiffanalyseCountView", reportIdParameter);
        }
    
        public virtual int SpmDiffanalyseReportsData(Nullable<long> reportId, Nullable<long> notificationId)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("ReportId", reportId) :
                new ObjectParameter("ReportId", typeof(long));
    
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmDiffanalyseReportsData", reportIdParameter, notificationIdParameter);
        }
    
        public virtual int SpmEndNotificationData(Nullable<long> reportId, string notificationNo, string companyNo, string wmNo, string zoneNo, string dloc)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("ReportId", reportId) :
                new ObjectParameter("ReportId", typeof(long));
    
            var notificationNoParameter = notificationNo != null ?
                new ObjectParameter("NotificationNo", notificationNo) :
                new ObjectParameter("NotificationNo", typeof(string));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var zoneNoParameter = zoneNo != null ?
                new ObjectParameter("ZoneNo", zoneNo) :
                new ObjectParameter("ZoneNo", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmEndNotificationData", reportIdParameter, notificationNoParameter, companyNoParameter, wmNoParameter, zoneNoParameter, dlocParameter);
        }
    
        public virtual int SpmFrozenOmLocStocksPro(Nullable<long> businessNo, Nullable<int> type)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmFrozenOmLocStocksPro", businessNoParameter, typeParameter);
        }
    
        public virtual int SpmFrozenProData(Nullable<long> transId, string transNo, Nullable<int> frozenType, string companyNo, string wmNo, string zoneNo, string dloc, string partNo)
        {
            var transIdParameter = transId.HasValue ?
                new ObjectParameter("TransId", transId) :
                new ObjectParameter("TransId", typeof(long));
    
            var transNoParameter = transNo != null ?
                new ObjectParameter("TransNo", transNo) :
                new ObjectParameter("TransNo", typeof(string));
    
            var frozenTypeParameter = frozenType.HasValue ?
                new ObjectParameter("FrozenType", frozenType) :
                new ObjectParameter("FrozenType", typeof(int));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var zoneNoParameter = zoneNo != null ?
                new ObjectParameter("ZoneNo", zoneNo) :
                new ObjectParameter("ZoneNo", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmFrozenProData", transIdParameter, transNoParameter, frozenTypeParameter, companyNoParameter, wmNoParameter, zoneNoParameter, dlocParameter, partNoParameter);
        }
    
        public virtual int SpmInternalMaterialPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmInternalMaterialPro", businessNoParameter);
        }
    
        public virtual int SpmMoveWmDPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmMoveWmDPro", businessNoParameter);
        }
    
        public virtual int SpmMoveWmUPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmMoveWmUPro", businessNoParameter);
        }
    
        public virtual ObjectResult<SpmOrderRemainData_Result> SpmOrderRemainData(string orderNo)
        {
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpmOrderRemainData_Result>("SpmOrderRemainData", orderNoParameter);
        }
    
        public virtual ObjectResult<SpmPartArtCard_Result> SpmPartArtCard(string regardingKey)
        {
            var regardingKeyParameter = regardingKey != null ?
                new ObjectParameter("RegardingKey", regardingKey) :
                new ObjectParameter("RegardingKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpmPartArtCard_Result>("SpmPartArtCard", regardingKeyParameter);
        }
    
        public virtual ObjectResult<SpmPartPrintData_Result> SpmPartPrintData(Nullable<long> repackageId)
        {
            var repackageIdParameter = repackageId.HasValue ?
                new ObjectParameter("RepackageId", repackageId) :
                new ObjectParameter("RepackageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpmPartPrintData_Result>("SpmPartPrintData", repackageIdParameter);
        }
    
        public virtual int SpmPickTaskLocUpdatePro(string companyNo, string wmNo, string zoneNo, string dloc, string targetDloc, string partNo, Nullable<decimal> num)
        {
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var zoneNoParameter = zoneNo != null ?
                new ObjectParameter("ZoneNo", zoneNo) :
                new ObjectParameter("ZoneNo", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            var targetDlocParameter = targetDloc != null ?
                new ObjectParameter("TargetDloc", targetDloc) :
                new ObjectParameter("TargetDloc", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmPickTaskLocUpdatePro", companyNoParameter, wmNoParameter, zoneNoParameter, dlocParameter, targetDlocParameter, partNoParameter, numParameter);
        }
    
        public virtual int SpmProfitALossStocksPro(Nullable<int> type, Nullable<long> businessNo)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmProfitALossStocksPro", typeParameter, businessNoParameter);
        }
    
        public virtual int SpmRebate(string materialCode, Nullable<int> start, Nullable<int> end, Nullable<byte> yearOrQuarter, Nullable<int> year, Nullable<byte> quarter, Nullable<long> dealerId)
        {
            var materialCodeParameter = materialCode != null ?
                new ObjectParameter("MaterialCode", materialCode) :
                new ObjectParameter("MaterialCode", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(int));
    
            var yearOrQuarterParameter = yearOrQuarter.HasValue ?
                new ObjectParameter("YearOrQuarter", yearOrQuarter) :
                new ObjectParameter("YearOrQuarter", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var quarterParameter = quarter.HasValue ?
                new ObjectParameter("Quarter", quarter) :
                new ObjectParameter("Quarter", typeof(byte));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmRebate", materialCodeParameter, startParameter, endParameter, yearOrQuarterParameter, yearParameter, quarterParameter, dealerIdParameter);
        }
    
        public virtual int SpmREGoodsProData(Nullable<long> businessNo, Nullable<int> type)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmREGoodsProData", businessNoParameter, typeParameter);
        }
    
        public virtual int SpmReturnMaterialsPro(Nullable<long> businessNo, Nullable<decimal> num, string dloc)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(decimal));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmReturnMaterialsPro", businessNoParameter, numParameter, dlocParameter);
        }
    
        public virtual int SpmRLossStocksProData(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmRLossStocksProData", businessNoParameter);
        }
    
        public virtual int SpmScrapOccupyPro(Nullable<long> businessNo, Nullable<int> type)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmScrapOccupyPro", businessNoParameter, typeParameter);
        }
    
        public virtual int SpmScrapTransPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmScrapTransPro", businessNoParameter);
        }
    
        public virtual int SpmScrapTransRPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmScrapTransRPro", businessNoParameter);
        }
    
        public virtual int SpmStocksProData(Nullable<int> type, Nullable<long> businessNo, string companyNo, string wmNo, string zoneNo, string dloc, string partNo, Nullable<decimal> num)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            var zoneNoParameter = zoneNo != null ?
                new ObjectParameter("ZoneNo", zoneNo) :
                new ObjectParameter("ZoneNo", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmStocksProData", typeParameter, businessNoParameter, companyNoParameter, wmNoParameter, zoneNoParameter, dlocParameter, partNoParameter, numParameter);
        }
    
        public virtual int SpmTransferPro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmTransferPro", businessNoParameter);
        }
    
        public virtual int SpmTransferShelvePro(Nullable<long> businessNo)
        {
            var businessNoParameter = businessNo.HasValue ?
                new ObjectParameter("BusinessNo", businessNo) :
                new ObjectParameter("BusinessNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmTransferShelvePro", businessNoParameter);
        }
    
        public virtual int SpmYearNotificationData(Nullable<long> notificationId, string companyNo, string wmNo)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(long));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var wmNoParameter = wmNo != null ?
                new ObjectParameter("WmNo", wmNo) :
                new ObjectParameter("WmNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpmYearNotificationData", notificationIdParameter, companyNoParameter, wmNoParameter);
        }
    
        public virtual int SyncAdminArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncAdminArea");
        }
    
        public virtual ObjectResult<Nullable<int>> SyncSO(string lockmode, string rONO, string dealerCode, string userName, string sONO, string pNO, Nullable<int> isUpdate, Nullable<int> status, string createdOn, string modifiedOn, Nullable<int> from)
        {
            var lockmodeParameter = lockmode != null ?
                new ObjectParameter("lockmode", lockmode) :
                new ObjectParameter("lockmode", typeof(string));
    
            var rONOParameter = rONO != null ?
                new ObjectParameter("RONO", rONO) :
                new ObjectParameter("RONO", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var sONOParameter = sONO != null ?
                new ObjectParameter("SONO", sONO) :
                new ObjectParameter("SONO", typeof(string));
    
            var pNOParameter = pNO != null ?
                new ObjectParameter("PNO", pNO) :
                new ObjectParameter("PNO", typeof(string));
    
            var isUpdateParameter = isUpdate.HasValue ?
                new ObjectParameter("IsUpdate", isUpdate) :
                new ObjectParameter("IsUpdate", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var createdOnParameter = createdOn != null ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(string));
    
            var modifiedOnParameter = modifiedOn != null ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SyncSO", lockmodeParameter, rONOParameter, dealerCodeParameter, userNameParameter, sONOParameter, pNOParameter, isUpdateParameter, statusParameter, createdOnParameter, modifiedOnParameter, fromParameter);
        }
    
        public virtual int SyncVehshipmentarea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncVehshipmentarea");
        }
    
        public virtual ObjectResult<SysTbStructureView_Result> SysTbStructureView(string tbName)
        {
            var tbNameParameter = tbName != null ?
                new ObjectParameter("TbName", tbName) :
                new ObjectParameter("TbName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysTbStructureView_Result>("SysTbStructureView", tbNameParameter);
        }
    }
}
